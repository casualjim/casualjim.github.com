<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> - Articles</title>
    <description>Rants and ramblings from</description>
    <link>http://flanders.co.nz</link>
    <atom:link rel="hub" href="http://pubsubhubbub.appspot.com"/>
    
      
      <item>
        <title>Scalatra is a DSL in a string</title>
        <description>&lt;p&gt;I&amp;#8217;ve heard it a couple of times as if that is a bad thing and yes Scalatra is a DSL-IN-A-STRING, but allow me to ellaborate:&lt;/p&gt;

&lt;p&gt;However a pattern match, for example&lt;/p&gt;

&lt;p&gt;as you all know is nothing more than an isDefinedAt and when that call returns true the data is passed to the partial function, the partial function is lifted and you get a result.&lt;/p&gt;

&lt;p&gt;In scalatra we put an extra dsl over this particular behavior which builds up a registry of route matchers. Which are also just scala classes and then we essentially use .isDefinedAt on that route registry to determine which block of code to run and then apply the matching function.&lt;/p&gt;

&lt;p&gt;What we do there is nothing different from what people do right before they figure out which bit to run. They do a string.split or run a regex and then pass it to that partial function.&lt;/p&gt;

&lt;p&gt;So to me the dsl-in-a-string is a pretty short-sighted response because there is no immediate &amp;#8220;case &amp;#8230; =&gt;&amp;#8221; in sight.&lt;/p&gt;

&lt;p&gt;YES WE COPIED SINATRA&amp;#8217;S DOCUMENTATION =&gt; at least we have pretty elaborate documentation, the alternative was no documentation. I don&amp;#8217;t think I&amp;#8217;m going to get a Pulitzer for being original in docs. If that was my aim I should have become a journalist of fiction writer.&lt;/p&gt;

&lt;p&gt;The goal of docs is to provide information, ours do that now.&lt;/p&gt;
</description>
        <published>2011-09-03 10:56:12 +0200</published>
        <link>http://flanders.co.nz/2011/09/03/scalatra-is-a-dsl-in-a-string/</link>
      </item>
      
    
      
      <item>
        <title>work for backchat</title>
        <description>&lt;h1&gt;Backchat.IO is hiring!&lt;/h1&gt;

&lt;p&gt;BackChat.io is easiest to describe as &lt;em&gt;grep for real-time data&lt;/em&gt;. We’re busy developing a platform that makes sense of the data you send it (in real-time).&lt;/p&gt;

&lt;p&gt;For the social web that means that you can start following certain users on a network or define a search term and you get those in a unified activity streams format.&lt;/p&gt;

&lt;p&gt;But for something more arcane, like say, log data, that means you can send it lines of text and have it extract out fields on which you can define filters. All of this happens in real-time and changes are reflected virtually immediately in open connections.&lt;/p&gt;

&lt;p&gt;Our system is designed to allow for easy definition of data sources. Sources that currently feed into our system are &lt;a href=&quot;http://twitter.com&quot;&gt;Twitter&lt;/a&gt;, &lt;a href=&quot;http://facebook.com&quot;&gt;Facebook&lt;/a&gt;, &lt;a href=&quot;http://linkedin.com&quot;&gt;LinkedIn&lt;/a&gt;, SMTP, RSS, ATOM, PubSubHubbub, and more. By next year we hope to provide dozens, if not 100’s, of API implementations.&lt;/p&gt;

&lt;p&gt;In the longer term we hope to provide more intelligent stuff like real-time reporting by allowing you to define aggregates like SUM, enhance data with secondary information, and many more crazy ideas. We’re aiming to build our system exclusively on existing standards described in RFC’s or the activity streams spec. However not everything we do is described in standards and that’s where we’ll try to extend an existing standard.
Our use cases are wide, ranging from niche collaboration or social media apps, to communication/PR/marketing agencies, to telecommunications… We operate at an abstraction on a much lower level than most similar services; so many tools you see and use on the web today can be built with only a few lines of code in your favourite language on our platform.&lt;/p&gt;

&lt;p&gt;The entire system is built on dogfooding and practicing what we preach. So where it makes sense we rely on our own service, like with log processing. Our entire website is built using the API methods we expose to our customers. Our API integration language will be shared with our customers too.&lt;/p&gt;

&lt;h2&gt;How do you guys work?&lt;/h2&gt;

&lt;p&gt;We use a mix of technologies like &lt;a href=&quot;http://www.scala-lang.org/&quot;&gt;scala&lt;/a&gt;, &lt;a href=&quot;http://akka.iio&quot;&gt;akka&lt;/a&gt;, &lt;a href=&quot;http://mongodb.org&quot;&gt;mongodb&lt;/a&gt;, &lt;a href=&quot;http://lucene.apache.org&quot;&gt;lucene&lt;/a&gt;, &lt;a href=&quot;http://www.zeromq.org/&quot;&gt;zeromq&lt;/a&gt;, &lt;a href=&quot;http://dropbox.com&quot;&gt;dropbox&lt;/a&gt;, &lt;a href=&quot;http://flowdock.com&quot;&gt;flowdock&lt;/a&gt;, &lt;a href=&quot;http://skype.com&quot;&gt;skype&lt;/a&gt;, …. We apply agile principles to our development process, but this doesn’t mean we follow a doctrine that is being sold because some consultant wants to make some money. To us Agile development means: design for change. Which also means that the process we use is adapted to the people in the process and not vice versa. It’s about being productive and creating an environment where you want to work.
At the moment, all of us work from home. We’re a team of 3, looking for a fourth team-member to start in September. We don’t care where or how you work, just that you deliver 40 hours worth of output, regular github pushes (so new code can be reviewed before it hits our integration branch) and, most importantly, passion!&lt;/p&gt;

&lt;h2&gt;Great! What are you guys looking for?&lt;/h2&gt;

&lt;p&gt;We’re looking for a passionate developer. This person ideally:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;knows about concurrent and distributed programming&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;is well-versed in Scala&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;can accept a team decision, and understands that communication is the most important part of development as a team.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;is polyglot (the ability to work with C#, node.js/javascript, ruby, python and/or php)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;preferably knows XMPP beyond using the smack library&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;has used mongodb&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;knows Lucene&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;regular expressions have little or no secrets for you&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;does not believe in sugar-coating things and voices reservations early&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No! Try not. Do, or do not. There is no try. (Some of us hope you’re a Star Wars fan too)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;It’s a plus if you’ve done some of the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;BIG data&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Language parsing and development&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Natural language processing&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Statistics&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;knows how to express himself in simple english and not academic language&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Netty server development / Java NIO&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Jetty customization&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Understands the problems communication agencies and social-media developers face&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;What we’re not looking for is someone who has little or no experience, community zealots and big framework lovers (I’m looking at you rails, lift, spring, …). We need doers!&lt;/p&gt;

&lt;p&gt;You do not have to live in the UK to work with/for us. We are firm believers in smarter remote-working, and our cloud-based infrastructure is designed to allow us to work from where we want.&lt;/p&gt;

&lt;h2&gt;Open-Source?&lt;/h2&gt;

&lt;p&gt;We use a lot of open source, and we believe in being good citizens and contribute back where we can. Some of the projects we use: &lt;a href=&quot;http://api.mongodb.org/scala/casbah/current/&quot;&gt;casbah&lt;/a&gt;, &lt;a href=&quot;http://akka.io/&quot;&gt;akka&lt;/a&gt;, &lt;a href=&quot;https://github.com/scalatra/scalatra&quot;&gt;scalatra&lt;/a&gt;, lift-mongodb-record, lift-json, codahale metrics, databinder dispatch, …
So far most of our contributions were to scalatra and peripheral to akka. If we come up with stuff that we all agree on should really be in an open source project then we will actually take the necessary steps to make that happen.&lt;/p&gt;

&lt;p&gt;Any open-source library we produce is licensed as MIT and uses as few dependencies as possible (be nice to people with complicated projects).&lt;/p&gt;

&lt;h2&gt;What’s the vision?&lt;/h2&gt;

&lt;p&gt;To build the best damned developer platform for social-media and real-time data! Quickly!&lt;/p&gt;

&lt;p&gt;Our service is primarily aimed at developers. We provide a metered, utility billing model. Depending on which bits and pieces of our infrastructure a developer uses we calculate a price per message for each incoming channel. At the end of the month they get a bill. This billing is updated in real-time so everybody knows exactly where they stand.
For corporate customers we provide a behind-firewall-install license. This license fee may or may not include bespoke development or integration into their systems.&lt;/p&gt;

&lt;p&gt;Our founding customer has been O2/Telefonica. They’re using our platform in cool ways, but we can’t talk about that just yet (ssshh).&lt;/p&gt;

&lt;h2&gt;Who are the company?&lt;/h2&gt;

&lt;p&gt;Adam Burmister is the CEO of the company and has previously worked as team lead for the bbc.com homepage. He has also done assorted javascript libraries and was nominated for a webby award for his work at xero.com. He’s a Kiwi, so be warned, he sounds funny.&lt;/p&gt;

&lt;p&gt;Ivan Porto Carrero is the CTO and has previously almost published a book on IronRuby and has been an MVP for the last 2 years. Worked as an architect/consultant in the .NET sphere and met Adam while he was working as a senior development at xero.com It helps to know that Ivan is from Belgium, as an extremely low bullshit tolerance and it’s best to feed him at regular times with pre-approved snacks. Also, his english sounds funny.&lt;/p&gt;

&lt;p&gt;Stefan De Boey was our very first helper and we haven’t managed to scare him off, he’s actually happy with his job, but won’t say so because he’s Belgian and compliments make people suspicious where he’s from (not to mention the thought of making a government).
Stefan typically starts his day between 11am and 12:30 and finishes around 20:00.
Also, his english sounds funny.&lt;/p&gt;

&lt;h2&gt;Ok, I’m sold. How do I apply?&lt;/h2&gt;

&lt;p&gt;Great! We’re looking forward to meeting you.&lt;/p&gt;

&lt;p&gt;If you could, please start by sending us your LinkedIn profile and preferably some recent open source projects you worked on.&lt;/p&gt;
</description>
        <published>2011-08-01 20:57:20 +0200</published>
        <link>http://flanders.co.nz/2011/08/01/backchat-developers/</link>
      </item>
      
    
      
      <item>
        <title>Radical language and platform shift</title>
        <description>&lt;p&gt;I realize it&amp;#8217;s been a really long time since I put something on this blog. And for those of you expecting more (iron)ruby posts I&amp;#8217;m going to have to dissapoint you. This is mostly a braindump of what I&amp;#8217;ve been working out the last months.&lt;/p&gt;

&lt;p&gt;A few months ago Adam Burmister, who I met at  &lt;a href=&quot;http://www.xero.com&quot;&gt;Xero&lt;/a&gt;, and I got incubated by &lt;a href=&quot;http://o2.co.uk&quot;&gt;O2&lt;/a&gt; to do a project that allowed me to push the boundaries and it required me to look outside what I already knew.  I had to go look for a new way of approaching problems, it isn&amp;#8217;t said that the problems couldn&amp;#8217;t be solved with a language like C# or Ruby. The solution would have been pretty much sub-par. In this quest for the best way to approach that problem it turned out that &lt;a href=&quot;http://scala-lang.org&quot;&gt;Scala&lt;/a&gt; was the language that hit a sweet spot for me.&lt;/p&gt;

&lt;p&gt;We needed something that resembled Erlang; and while I did my best to really get into &lt;a href=&quot;http://www.erlang.org/&quot;&gt;Erlang&lt;/a&gt; I never could (this could possibly be because of the eye bleeds because the language is just so friggin&amp;#8217; ugly). So it turns out there is a design pattern called &lt;a href=&quot;http://en.wikipedia.org/wiki/Active_object&quot;&gt;ActiveObject&lt;/a&gt; which is at the core the same as an erlang node (it&amp;#8217;s not I know a node has many other properties).   We also needed to be able to process humongous volumes of data (Terrabytes worth) at this point Ruby is out of the picture. I&amp;#8217;m sure I will upset many fanboys but face it ruby is slooooooooooooooow and advances slow, by the time you can properly program distributed systems in ruby the way I had in mind I&amp;#8217;ll be a great grand dad and have a long and pointy grey beard. .Net is lacking libraries and the ruby libraries often are good enough, but &lt;a href=&quot;http://www.startuplessonslearned.com/2010/09/good-enough-never-is-or-is-it.html&quot;&gt;good enough never is&lt;/a&gt;. And since I got tired of patching every single bloody library I touched I vowed to steer clear of ruby. We still use ruby but we use it for what it&amp;#8217;s great at: system automation scripts and sometimes quick prototyping.&lt;/p&gt;

&lt;p&gt;We basically needed hadoop, hadoop is a java project (I&amp;#8217;ll return to why not java and C# a little bit later). So once I entered the Java domain a new world opened up for me (old for most other people I realise that). Java has what can only be described as a SHITLOAD of great quality libraries. It&amp;#8217;s just a pithy that Java like C# suffers from what I call programmer masturbation. I&amp;#8217;ve certainly been guilty of that and during my time at Xero they suffered the grunt of it (sorry guys). So lets return to those problems.&lt;/p&gt;

&lt;p&gt;You read a book, nicknamed Gang of Four which then becomes &amp;#8220;the bible&amp;#8221;, it has this thing called design patterns and they need to be applied where ever you can.  I&amp;#8217;ll let you in on a little secret: They do next to nothing to make your code more maintainable (quite the opposite in fact) and definitely don&amp;#8217;t make it more understandable unless the next guy also knows &amp;#8220;the bible&amp;#8221;. If he doesn&amp;#8217;t he&amp;#8217;s a fucking retard, everybody knows those design patterns.  The thing that doesn&amp;#8217;t jive is: how is writing more code making your code more maintainable as you have to maintain more code (did I mention more code in this sentence?)The one thing ubiquitous use of design patterns from &amp;#8220;the bible&amp;#8221; does do is give you some job security. Pythonista&amp;#8217;s &lt;a href=&quot;http://us.pycon.org/2009/conference/schedule/event/51/&quot;&gt;shun design patterns&lt;/a&gt; and if not you should apparently.  Having programmed in many languages I tend to agree with the conclusion that having to use crutches like design patterns (I should really make this into a factory or manager of some sort) actually means your language is flawed.&lt;/p&gt;

&lt;p&gt;I still need to meet the person that can actually prove to me that your code is more maintainable than code that follows the following simple rules:
* Don&amp;#8217;t Repeat Yourself
* Don&amp;#8217;t write what you don&amp;#8217;t need right now
* write a couple of tests
*  Generalize as if there was no tomorrow.
* Write as little and as simple code as humanly possible (this kills double dispatch and the visitor pattern)
* Remember that you (as do I) have a bird brain, you will have forgotten what you did 2 weeks ago, let alone 6 months from now, so it needs to be understandable by the biggest idiot on the planet, namely the author of the code (in my case me).&lt;/p&gt;

&lt;p&gt;I don&amp;#8217;t want to write a post on why I left .NET but it&amp;#8217;s inevitable to mention it. I used to think .NET was the greatest thing since sliced bread and I still think it&amp;#8217;s a really cool piece of technology. However there is only a small minority of .NET programmers I actually get along with so some of the remarks I&amp;#8217;m going to make are not directed at those people. I have felt unhappy about the way .NET was evolving around the same time microsoft introduced the class designer tool. Don&amp;#8217;t even get me started on people advocating UML because that belongs in the same classification, a vertical one. Once Oslo got introduced or is it M I wanted to get out as quickly as possible. I happen to like writing code, if I wanted to drag and drop boxes and connect them with fancy lines I would have gone for a designer career.&lt;/p&gt;

&lt;p&gt;.NET also suffers from another problem, whatever the all-knowing company produces is innovation created by them (never mind if some of those things have been around for more than 20 years). And most developers on .NET suffer from that phenomenon that can only be called Stockholm Syndrome. It is mind boggling to me that you want to use tools you know suck, they don&amp;#8217;t make you do a better job faster in fact once you move past the hello world example they fall apart really quickly, not to mention having to debug a problem and submitting a bug (which will then be bounced back as by design).&lt;/p&gt;

&lt;p&gt;Enough slamming on .NET let&amp;#8217;s return to Java. Stephen Colebourne goes the next &lt;a href=&quot;http://www.jroller.com/scolebourne/entry/the_next_big_jvm_language1&quot;&gt;big JVM language is Java&lt;/a&gt;, but this time done right??? One of his arguments is 10.000.000 programmers world wide can&amp;#8217;t be wrong. I happen to think that 9,9 million of those programmers mostly likes to get paid, it has little or nothing to do with the fact that it&amp;#8217;s a great or not great language.  It&amp;#8217;s certainly easier than C and definitely C++, ask &lt;a href=&quot;http://artlung.com/smorgasborg/Invention_of_Cplusplus.shtml&quot;&gt;Bjarne&lt;/a&gt;. Most of the java code I read makes me sick to my stomach the boilerplate needed   (the next example is in C# the java one would most def be longer:  &lt;a href=&quot;http://code.google.com/p/fizzbuzz/source/browse/#svn/trunk/trunk&quot;&gt;fizzbuzz enterprise edition&lt;/a&gt;) is atrocious. Java date arithmetic (I know about joda-time) is an absolute nightmare. The fact that you need to write at least 6 (not counting import statements and the main definition) lines of code to be able to read input from the keyboard and  print it out just amplify my point.&lt;/p&gt;

&lt;p&gt;So no ruby, no .NET no java what&amp;#8217;s next. There is this cool thing people keep talking about: node.js it&amp;#8217;s crazy fast (if you compare it with languages like ruby and run the correct hello world benchmarks). however the libraries are subpar at best and generally feel like they&amp;#8217;ve been written by very young programmers (with the odd exception of course) who have little or no clue about what&amp;#8217;s going on outside of their blog or what their &amp;#8220;gods&amp;#8221; are saying. I&amp;#8217;m sure it has a place and I&amp;#8217;ve given it more than an honest chance but at the end of the day it would have required a big investment to write all kinds of things that just aren&amp;#8217;t there (yet).&lt;/p&gt;

&lt;p&gt;But you know it&amp;#8217;s event driven and asynchronous and that&amp;#8217;s why it&amp;#8217;s fast and only non-blocking IO is the right way to go because using blocking IO is slow. Ok now you got me, you&amp;#8217;re right but also wrong. It depends on your use case and how you work with blocking IO. We&amp;#8217;ve come to go by this simple rule: if you need many short-lived connections (like in say HTTP) then non blocking io is indeed better, however long lasting connections may benefit from blocking IO, because the throughput is a lot higher (although it&amp;#8217;s not quite as black and white as that).&lt;/p&gt;

&lt;p&gt;So back to we want erlang but without the bleeding eyes: enter scala + &lt;a href=&quot;http://www.akkasource.org&quot;&gt;akka&lt;/a&gt;. Boy was I happy camper when I started reading their docs. An open-source project, written in this language called scala that solves the same problems as Erlang only this language is beautiful, yes I&amp;#8217;ll repeat that beauuuutifuuuulll. Scala gives me what ruby was never able to give me, a fast, pretty language that supports multiple paradigms with a strong nudge towards functional programming. it can be run on .NET as well as on the JVM meaning we didn&amp;#8217;t have to forego the much needed libraries. And the libraries that are available are in a totally different league than those dinky toys node.js and ruby have to offer. It&amp;#8217;s like comparing the majors to the minors I guess.&lt;/p&gt;

&lt;p&gt;The downside is that we do need core i7 machines to get any decent compile times out of the thing and IDE support (while it gets better steadily) is still behind on other languages. If you&amp;#8217;re wondering about LOC count vs ruby I think they&amp;#8217;re about even once you know what you&amp;#8217;re doing. Scala is not an easy language but it&amp;#8217;s heaps of fun to work with and I&amp;#8217;m glad I get to use it the next couple of years.  if you&amp;#8217;re looking for an acceptable alternative on .NET that is supported by the all-knowing hugely innovative company you should look at F#.&lt;/p&gt;

&lt;p&gt;As an aside the next time somebody mentions enterprise ready as baked in to me; they will get a rope, chair and nail it&amp;#8217;s quicker and less painful.&lt;/p&gt;

&lt;p&gt;There the rant is over, I feel a lot better now. I already know I&amp;#8217;m an idiot so tell me something new.&lt;/p&gt;
</description>
        <published>2010-09-30 02:42:12 +0200</published>
        <link>http://flanders.co.nz/2010/09/30/radical-language-and-platform-shift/</link>
      </item>
      
    
      
      <item>
        <title>Video of FOSDEM IronRuby presentation</title>
        <description>&lt;p&gt;At FOSDEM 2010 I got the chance to talk in the mono dev room about ironruby.&lt;/p&gt;

&lt;p&gt;In this talk I extended the banshee application to work with IronRuby based plugins.&lt;/p&gt;

&lt;p&gt;So without further ado here&amp;#8217;s the link:
&lt;a href=&quot;http://andrius.six.lt/~bentkus/videos/mono-fosdem2010/mono-2010-02-07-1000-1100-(Ivan%20Porto%20Carrero&quot;&gt;IronRuby: The .NET and Ruby love child&lt;/a&gt;-(The%20Ruby%20and%20the%20.NET%20lovechild).mp4)&lt;/p&gt;
</description>
        <published>2010-03-12 13:24:55 +0100</published>
        <link>http://flanders.co.nz/2010/03/12/video-of-fosdem-ironruby-presentation/</link>
      </item>
      
    
      
      <item>
        <title>Adding a console to your IronRuby application</title>
        <description>&lt;p&gt;When building an application it might be very handy to have a REPL console that knows about the libraries of your application, but you don’t necessarily want to start your application to interact with it. In Rails they have a script/console command. Here’s how you create one that knows about ironruby. The example I’m going to use is taken from an IronRubyMVC application.&lt;/p&gt;

&lt;p&gt;I started out by creating a folder script.&lt;/p&gt;

&lt;p&gt;Then I created a file called console (on a unix system I would chmod +x this file). I also like to have completion in my console so I’ve added the irb/completion library. Then I’ll require the routes.rb file so that the libraries of my application get loaded.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;console script&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;sh&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env ir&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c&quot;&gt;# File: script/console&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nv&quot;&gt;irb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ENV&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;OS&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~ /^Windows/iu ? &lt;span class=&quot;s1&quot;&gt;&amp;#39;CALL iirb.bat&amp;#39;&lt;/span&gt; : &lt;span class=&quot;s1&quot;&gt;&amp;#39;iirb&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nv&quot;&gt;libs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&amp;quot; -r irb/completion&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c&quot;&gt;# Perhaps use a console_lib to store any extra methods I may want available in the console&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;libs &amp;lt;&amp;lt;  &lt;span class=&quot;s2&quot;&gt;&amp;quot; -r #{File.dirname(__FILE__) + &amp;#39;/../routes&amp;#39;}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;puts &lt;span class=&quot;s2&quot;&gt;&amp;quot;Loading Poll chat&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#{irb} #{libs} &#8211;simple-prompt&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;The 3rd line has CALL iirb.bat as a command on a windows system. The CALL command is needed for the next step because we’re going to execute a batch file from another batch file on windows. Otherwise it wouldn’t work for me. CALL is very similar to exec in ruby and gives control to another executable until its task is done.&lt;/p&gt;

&lt;p&gt;For windows to be able to use script/console (script\console) instead of ir script/console you also need to create a batch file called console.bat in the script folder.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;console script&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;bat&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ECHO&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OFF&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;IF&lt;/span&gt; NOT &lt;span class=&quot;s2&quot;&gt;&amp;quot;%~f0&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;~f0&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GOTO&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;:WinNT&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ir.exe&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;script/console&amp;quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%1&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%2&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%4&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%5&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%6&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%7&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%8&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%9&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;GOTO&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;:EOF&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nl&quot;&gt;:WinNT&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ir.exe&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;%~dpn0&amp;quot;&lt;/span&gt; %*
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;This is all there is to it to get rails like scripting abilities.&lt;/p&gt;

&lt;p&gt;IronRuby has another really cool feature built into IronRuby is the ability to provide REPL’s for your application at run-time. All you need to do is use Repl.new and give it an output and input stream.&lt;/p&gt;
</description>
        <published>2009-12-01 11:00:44 +0100</published>
        <link>http://flanders.co.nz/2009/12/01/adding-a-console-to-your-ironruby-application/</link>
      </item>
      
    
      
      <item>
        <title>A good url regular expression? (repost)</title>
        <description>&lt;p&gt;I&amp;#8217;m moving this post from &lt;a href=&quot;http://geekswithblogs.net/casualjim/archive/2005/12/01/61722.aspx&quot;&gt;http://geekswithblogs.net/casualjim/archive/2005/12/01/61722.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I started out blogging on geeks with blogs but I can&amp;#8217;t allow comments there anymore or I get too much spam, so I&amp;#8217;m moving the post from there to this place.  Various people have contributed through the comments in the other blog post. So here I have better control over the spam and can open the comments again.&lt;/p&gt;

&lt;p&gt;I have been looking for a good first layer of validating an url to see if it is valid.&lt;/p&gt;

&lt;p&gt;For checking the format of the url it seems to me to be the most logical approach to use regular expressions. Up until now I always discarded them as being to “geeky”, meaning i don&amp;#8217;t consider it my life&amp;#8217;s biggest goal to be typing (/?[]\w) all day long (so why did i become a programmer, aaaah yes to make life easier for other people)&lt;/p&gt;

&lt;p&gt;Anyway.. to find a good regular expression to that validates urls not url domains. One that doesn&amp;#8217;t allow spaces in the domainname and where the domain can be suffixed with the port number.  Also I need support for the ~/ paths&lt;/p&gt;

&lt;p&gt;This is what I came up with.. if somebody as a better idea&amp;#8230; or finds a mistake please let me know.. Always happy to learn something new.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;^(((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ht&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/)|~/|/)?([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}([&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-]+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.)+([&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})(:[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})?)/?(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})?((&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+)?(&amp;amp;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+)*)?&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;I was a bit quickly in using this regex. Simeon pilgrim indicated that the ftp urls won&amp;#8217;t validate when you add a username and a password.&lt;/p&gt;

&lt;p&gt;I don&amp;#8217;t really need to validate ftp so I should have removed the ftp protocol from the list of choices.  I need this just to validate urls for weblinks and the link element in an rss feed.  When I need them for ftp I will post the ftp version.. but for now I don&amp;#8217;t have time to spend on elaborating the regex.&lt;/p&gt;

&lt;p&gt;Anyway here is the right one :&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;^(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/|~/|/)?([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}([&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-]+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.)+([&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))(:[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})?/?(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})?((&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+)?(&amp;amp;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+)*)?&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;A full url validation would include resolving names through dns or making a webrequest to the provided url to see if we get a 200 response. The only way to be sure is to test if it is there in my opinion.&lt;/p&gt;

&lt;p&gt;Thanks Simeon.&lt;/p&gt;

&lt;p&gt;And for those who really want the ftp validation :&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;^((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ht&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/|~/|/)?([&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]+:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)?([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}([&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-]+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.)+([&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))(:[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})?/?(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})?((&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+)?(&amp;amp;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+)*)?&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;I am not sure about numbers in the username but I believe you can have a username of numbers alone.&lt;/p&gt;

&lt;p&gt;Comments don&amp;#8217;t seem to work on this blog engine.. so just send me a mail through the contact form. thanks&lt;/p&gt;

&lt;p&gt;Two days later &amp;#8230;&lt;/p&gt;

&lt;p&gt;I discovered there is still a problem with my regular expressions&amp;#8230; folders don&amp;#8217;t get parsed.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve solved the path issue, so now it should be finding all url&amp;#8217;s&lt;/p&gt;

&lt;p&gt;Expression:&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;^((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ht&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/|~/|/)?([&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]+:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)?([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}([&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-]+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.)+([&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))(:[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})?((/?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+/)+|/?)(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})?((&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+)?(&amp;amp;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+)*)?&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Should parse the url below&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hh-1hallo.msn.blabla.com:80800/test/test/test.aspx?dd=dd&amp;amp;id=dki&quot;&gt;http://hh-1hallo.msn.blabla.com:80800/test/test/test.aspx?dd=dd&amp;amp;id=dki&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But not :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hh-1hallo&quot;&gt;http://hh-1hallo&lt;/a&gt;. msn.blablabla.com:80800/test/test.aspx?dd=dd&amp;amp;id=dki&lt;/p&gt;

&lt;p&gt;Update 29/11/2008:&lt;/p&gt;

&lt;p&gt;Joe posted what seems to be a great regular expression in the comments&lt;/p&gt;

&lt;p&gt;he tested it with the following urls:&lt;/p&gt;

&lt;p&gt;http://www.google.com/search?q=good+url+regex&amp;amp;rls=com.microsoft:*&amp;amp;ie=UTF-8&amp;amp;oe=UTF-8&amp;amp;startIndex=&amp;amp;startPage=1&lt;/p&gt;

&lt;p&gt;ftp://joe:password@ftp.filetransferprotocal.com&lt;/p&gt;

&lt;p&gt;google.ru&lt;/p&gt;

&lt;p&gt;https://some-url.com?query=&amp;amp;name=joe?filter=&lt;em&gt;.&lt;/em&gt;#some_anchor&lt;/p&gt;

&lt;p&gt;Expression:&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;^(?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Protocol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(?:(?:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ht&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(?:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/|~/|/)?(?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(?:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)?(?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Subdomains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(?:(?:[-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.)+(?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TopLevel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Domains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(?:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gov&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;biz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mobi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;museum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;travel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))(?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(?::[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})?(?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Directories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(?:(?:(?:/(?:[-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;~!&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+|.,=]|%[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})+)+|/)+|&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?|&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)?(?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(?:(?:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?(?:[-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;~!&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+|.,*:]|%[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}])+=(?:[-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;~!&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+|.,*:=]|%[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})*)(?:&amp;amp;(?:[-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;~!&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+|.,*:]|%[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}])+=(?:[-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;~!&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+|.,*:=]|%[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})*)*)*(?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Anchor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(?:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(?:[-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;~!&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+|.,*:=]|%[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})*)?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Update 8/11/2009:&lt;/p&gt;

&lt;p&gt;Expression:&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;^(?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Protocol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(?:(?:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ht&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(?:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/|~&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/|&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/)?(?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(?:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)?(?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Subdomains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(?:(?:[-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.)+(?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TopLevel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Domains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(?:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gov&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;biz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mobi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;museum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;travel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))(?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(?::[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})?(?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Directories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(?:(?:(?:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/(?:[-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;~!&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+|.,=]|%[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})+)+|&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/)+|&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?|&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)?(?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(?:(?:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?(?:[-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;~!&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+|.,*:]|%[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}])+=?(?:[-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;~!&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+|.,*:=]|%[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})*)(?:&amp;amp;(?:[-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;~!&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+|.,*:]|%[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}])+=?(?:[-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;~!&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+|.,*:=]|%[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})*)*)*(?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Anchor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(?:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(?:[-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;~!&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+|.,*:=]|%[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})*)?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;There is a wave for this regex:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://wave.google.com/wave/?pli=1#restored:wave:googlewave.com!w%252BsFbGJUukA&quot;&gt;https://wave.google.com/wave/?pli=1#restored:wave:googlewave.com!w%252BsFbGJUukA&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Update 29/09/2010&lt;/p&gt;

&lt;p&gt;So people if you don&amp;#8217;t like it don&amp;#8217;t use it.
Now this regex is troubled it has a bunch of issues but it works most of the time.  If you want a more liberal regular expression to just capture urls from text, there is a really good one on the blog of John Gruber.
&lt;a href=&quot;http://daringfireball.net/2010/07/improved_regex_for_matching_urls&quot;&gt;Improved regex for matching urls @ daring fireball&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2009-11-08 12:02:37 +0100</published>
        <link>http://flanders.co.nz/2009/11/08/a-good-url-regular-expression-repost/</link>
      </item>
      
    
      
      <item>
        <title>Creating launcher scripts for IronRuby</title>
        <description>&lt;p&gt;It’s been a while since I blogged, I’ve been terribly busy going through some changes and prepping the book.&lt;/p&gt;

&lt;p&gt;Anyway lately a lot of blog posts have been written on how to ironruby with cucumber to test your .NET code. While I think it’s great people are using ironruby and cucumber, the guide you can find on aslak’s github wiki isn’t the most ideal solution as it will only work for windows and it requires MRI to be installed on your system. So I thought I’d write up how I’ve been creating launchers that work both on windows .NET and mono systems.&lt;/p&gt;

&lt;p&gt;Another problem the approach of setting the GEM_PATH to the MRI gem location is that if your gem requires a C-extension (which could easily be a C# extension in IronRuby) ruby will get confused about which one it’s going to need.&lt;/p&gt;

&lt;p&gt;I’m going to use cucumber as an example but this counts for most ruby libraries. I’ve been using this for a few months already so it really doesn’t matter which version of IronRuby you’ve got installed. I’ve compiled a fresh version from github and deployed that to C:\ironruby on windows and added C:\ironruby\bin to my PATH environment variable. I installed my ironruby version on my *nix boxes in /usr/local/ironruby and added /usr/local/ironruby/bin, /usr/local/ironruby/silverlight/bin and /usr/local/ironruby/silverlight/scripts to my PATH environment variable.&lt;/p&gt;

&lt;h5&gt;1. install the gem: igem install rspec cucumber &amp;#8211;no-rdoc &amp;#8211;no-ri&lt;/h5&gt;

&lt;p&gt;this will install the rspec and cucumber gems with their dependencies. And the gems process will actually install the launcher scripts in C:\ironruby\lib\ironruby\gems\1.8\bin and we’re going to use those scripts to create our launcher script&lt;/p&gt;

&lt;h5&gt;2. Get the launcher scripts into the bin dir&lt;/h5&gt;

&lt;p&gt;On windows you can now go:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;copy C:\ironruby\lib\ironruby\gems\1.8\bin\cucumber C:\ironruby\bin\icucumber
copy C:\ironruby\lib\ironruby\gems\1.8\bin\cucumber.bat C:\ironruby\bin\icucumber.bat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NTFS supports symlinks so you could also use the junction tool from the sysinternals toolkit to create those instead of copying the files. &lt;a href=&quot;http://technet.microsoft.com/en-us/sysinternals/bb896768.aspx&quot;&gt;http://technet.microsoft.com/en-us/sysinternals/bb896768.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On *nix based systems there is one more step to go through.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp /usr/local/ironruby/lib/IronRuby/gems/1.8/bin/cucumber /usr/local/ironruby/bin/icucumber
chmod +x /usr/local/ironruby/bin/icucumber
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And this is the easier way to properly use installed gems from the ironruby distribution, it will also make it a lot easier to upgrade your gems in 2 different ruby installations at different times etc.&lt;/p&gt;
</description>
        <published>2009-10-26 14:16:48 +0100</published>
        <link>http://flanders.co.nz/2009/10/26/creating-launcher-scripts-for-ironruby/</link>
      </item>
      
    
      
      <item>
        <title>A rant on a talk falling to pieces</title>
        <description>&lt;p&gt;Earlier this week I had the pleasure of doing a talk for the Belgian .NET user group. During this talk I ran in to all kinds of problems. I&amp;#8217;ve done presentations where I was royally underprepared and to avoid that this time I actually started prepping for this talk on time. I was done on time, was prepared had 5 backups of my presentation and samples. What did I learn from this, if you&amp;#8217;re prepared other things will go wrong.    &lt;br/&gt;
I&amp;#8217;ll share the story of stuff that can go wrong.&lt;/p&gt;

&lt;p&gt;Before starting the rant I have some links to share.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/casualjim/ruby-loves-dot-net&quot;&gt;Slides&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IronRubyMvc sample – &lt;a href=&quot;http://irtodo.koolkraft.net/&quot;&gt;live demo&lt;/a&gt; – &lt;a href=&quot;http://github.com/casualjim/ironrubymvc-sample/tree/master&quot;&gt;source&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Silverlight sample – &lt;a href=&quot;http://samples.koolkraft.net/picture_view/&quot;&gt;live demo&lt;/a&gt; – &lt;a href=&quot;http://samples.koolkraft.net/picture_view.zip&quot;&gt;source&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IronRubyMVC specs – &lt;a href=&quot;http://github.com/casualjim/ironrubymvc/tree&quot;&gt;source&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sinatra – &lt;a href=&quot;http://samples.koolkraft.net/sinatra.zip&quot;&gt;source&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Metaprogramming - &lt;a href=&quot;http://samples.koolkraft.net/metaprogramming.zip&quot;&gt;source&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I have a device that I call internet on a stick, which is a vodafone usb 3G modem that I plug in to my system and it gets me on the internet (mistake 1). Since I assumed that that thing would continue to work I made most of my demos internet enabled (mistake 2). For example I have a demo where I go download pics from flickr and then show them with some animations with silverlight.    &lt;br/&gt;
Before my presentation I changed the fonts, opened all the files I was going to talk about ran all the demos again to make sure they would work and everything went fine.     &lt;br/&gt;
I unplug the USB device and go into the room to hook up the projector etc. The presentation starts and for the first hour everything went really well (from my perspective at least don&amp;#8217;t know about the people attending).     &lt;br/&gt;
We have a break and I plug the USB device in, at this point the vodafone program hangs (first time ever I swear). What&amp;#8217;s more I can&amp;#8217;t make it go away at all so I reboot my pc (this is still during the break).&lt;/p&gt;

&lt;p&gt;Now I&amp;#8217;m getting a little desperate because it still doesn&amp;#8217;t work. With rebooting I also lost all my carefully opened files earlier (I&amp;#8217;m showing code in about 3 different environments and 2 different OS&amp;#8217;es).    &lt;br/&gt;
So during the presentation I apologise and try to reboot once more while taking questions from the audience and hoping somebody will try to start a discussion with me. After rebooting I got a message saying my date was set to 2001 which I thought was peculiar but clicked it away. I boot vmware fusion with windows 7 (this took fairly long and is a little bit funky as the screen resolution changes a lot during this process).     &lt;br/&gt;
Ok so far so good, by now I&amp;#8217;ve already skipped the silverlight demo promising that it will be available as a download on my blog and will be moving on to the ironrubymvc sample. To prove I do actually use visual studio at times I wanted to open my demo project in visual studio. I open visual studio only for it to tell me that my trial has expired and I can either upgrade or close the application. Oooooookay this is completely weird because i get my software through my msdn subscription and I had been using it earlier that day.&lt;/p&gt;

&lt;p&gt;Moral of the story: Either go vastly underprepared and wing it. Or don&amp;#8217;t rely on the internet and always take at least 2 laptops that have identical configurations but I&amp;#8217;m pretty sure those would or explode in my face or something will fall from the ceiling, building collapses or other mishaps.&lt;/p&gt;

&lt;p&gt;Instead of having one demo go bad on me now I&amp;#8217;m probably facing a reinstall of my mac because it lost a bunch of settings, for which I&amp;#8217;m holding the vodafone responsible. At this moment I&amp;#8217;m fairly certain that I should go less prepared and just wing it just out of fear for bigger disasters, people may die.&lt;/p&gt;
</description>
        <published>2009-07-02 14:45:21 +0200</published>
        <link>http://flanders.co.nz/2009/07/02/a-rant-on-a-talk-falling-to-pieces/</link>
      </item>
      
    
      
      <item>
        <title>Very simple IronRuby MVC sample application</title>
        <description>&lt;p&gt;Over the weekend I wrote a very simple task list application with IronRuby MVC and LightSpeed as an OR/M. And I’ve just put a demo live. This demo is running on a windows 2008 vps with IIS 7 as webserver. The source of this sample is also available.&lt;/p&gt;

&lt;p&gt;At this moment I’m working on the &lt;a href=&quot;http://github.com/jschementi/ironrubymvc/&quot;&gt;Ironruby mvc&lt;/a&gt; sample for my book. And while I was playing around to get some samples together I tried building the simplest application possible that has some degree relations in the db and does some crud. And I came up with the original idea of creating a task list application.&lt;/p&gt;

&lt;p&gt;As an OR/M I choose to use &lt;a href=&quot;http://www.mindscape.co.nz/products/LightSpeed/&quot;&gt;LightSpeed&lt;/a&gt; and it runs on a sqlite database so it should be immediately usable after checking out. There is one caveat though. If you’re using a 32-bit OS you’ll need to replace the sqlite dll that is included in the dependencies tree with a 32-bit version of the dll and rebuild the solution.&lt;/p&gt;

&lt;p&gt;The links:&lt;/p&gt;

&lt;p&gt;Demo:    &lt;br/&gt;
&lt;a href=&quot;http://irtodo.koolkraft.net/&quot;&gt;http://irtodo.koolkraft.net/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source of sample:   &lt;br/&gt;
&lt;a href=&quot;http://github.com/casualjim/ironrubymvc-sample&quot;&gt;http://github.com/casualjim/ironrubymvc-sample&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;IronRubyMVC source:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://github.com/jschementi/ironrubymvc&quot;&gt;http://github.com/jschementi/ironrubymvc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LightSpeed:   &lt;br/&gt;
&lt;a href=&quot;http://www.mindscape.co.nz/products/LightSpeed/&quot;&gt;http://www.mindscape.co.nz/products/LightSpeed/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Technorati Tags: &lt;a href=&quot;http://technorati.com/tags/IronRuby+MVC&quot;&gt;IronRuby MVC&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/IronRuby&quot;&gt;IronRuby&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/ASP.NET+MVC&quot;&gt;ASP.NET MVC&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2009-06-09 23:45:03 +0200</published>
        <link>http://flanders.co.nz/2009/06/09/very-simple-ironruby-mvc-sample-application/</link>
      </item>
      
    
      
      <item>
        <title>Getting started with Caricature and IronRuby</title>
        <description>&lt;p&gt;IronRuby 0.5 was released yesterday. You can download it on &lt;a href=&quot;http://ironruby.codeplex.com/Release/ProjectReleases.aspx?ReleaseId=25902#DownloadId=68919&quot;&gt;codeplex&lt;/a&gt;. This post will explain how you setup your ironruby environment to use it for testing existing CLR based assemblies. We’ll touch installing gems using rake and most importantly writing a test for a CLR based class where we’ll mock out the dependencies.&lt;/p&gt;

&lt;p&gt;The first thing you need to do is download &lt;a href=&quot;http://ironruby.codeplex.com/Release/ProjectReleases.aspx?ReleaseId=25902#DownloadId=68919&quot;&gt;IronRuby&lt;/a&gt;. After downloading you can extract it to a location on your hard drive. I extracted mine to C:\ironruby&lt;/p&gt;

&lt;p&gt;Now we need to add the path to ir.exe to our PATH variable so we can use it from the command-line. And that is all there is to it to install ironruby on your machine. Now we need to get the necessary gems onto our system. We’ll need bacon and caricature.&lt;/p&gt;

&lt;p&gt;Open a console and type the following:&lt;/p&gt;

&lt;p&gt;igem list will show you a list of the gems you have installed on your system.&lt;/p&gt;

&lt;p&gt;igem install will fetch and install a gem on your system. To install the gems we’re going to need we need to execute the command&lt;/p&gt;

&lt;p&gt;igem install bacon caricature&lt;/p&gt;

&lt;p&gt;That will result in the following output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+ C:\tools
» cmd
Microsoft Windows [Version 6.1.7100]
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

C:\tools&amp;gt;where ir
C:\ironruby\bin\ir.exe

C:\tools&amp;gt;exit
+ C:\tools
» igem list

*** LOCAL GEMS ***


+ C:\tools
» igem install bacon caricature
Successfully installed bacon-1.1.0
Successfully installed caricature-0.6.0
3 gems installed
Installing ri documentation for bacon-1.1.0&#8230;
Installing ri documentation for caricature-0.6.0&#8230;
Installing RDoc documentation for bacon-1.1.0&#8230;
Installing RDoc documentation for caricature-0.6.0&#8230;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you would try to execute ibacon at this point that would work. We’ll need to create 2 small files to get ibacon to work. In the bin directory of ironruby I created 2 files one called ibacon and the other one is ibacon.bat&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;ibacon&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;#!C:/ironruby/bin/ir.exe&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;# This file was generated by RubyGems.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;# The application &amp;#39;bacon&amp;#39; is installed as part of a gem, and&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;# this file is here to facilitate running it.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;gt;= 0&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ARGV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^_(.*)_$/&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Gem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;correct?&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$1&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;no&quot;&gt;ARGV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shift&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;bacon&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;bacon&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;




&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;ibacon.bat&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;bat&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ECHO&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OFF&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ir.exe&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;%~dpn0&amp;quot;&lt;/span&gt; %*
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;/p&gt;

&lt;p&gt;At this point you’re ready to start writing specs with bacon and caricature. Let’s look at an example I wrote for the controller factory for ironruby mvc.&lt;/p&gt;

&lt;p&gt;We’re going to test the following C# code.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;Models.cs    &lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IWeapon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Attack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IWarrior&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;warrior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Damage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IWarrior&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IsKilledBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IWeapon&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weapon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Attack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IWarrior&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IWeapon&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weapon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SurviveAttackWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IWeapon&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weapon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Sword&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IWeapon&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Attack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IWarrior&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;warrior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;warrior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SurviveAttackWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Damage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;I generally create a bacon_helper.rb file where I group my requires and helper functions etc. In the case of this test I have the following in the bacon_helper.rb:&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;bacon_helper.rb&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;# add some search paths to ironruby&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;# this first one adds the path with the assemblies&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;# this enables us not to have to specify a path to the assemblies everywhere.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;vg&quot;&gt;$:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/bin&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;# adds the path to the caricature library.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;vg&quot;&gt;$:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/../lib&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;# load the caricature library&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;caricature&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;caricature/clr&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;# load the bacon library&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;bacon&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;# Add the .NET framework&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;mscorlib&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;# load the assembly with the C# code&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;load_assembly&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ClrModels&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;/p&gt;

&lt;p&gt;At this point we’re ready to start writing the test. create a file called sword_spec.rb and we’ll add the following content to the file.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;swordspec.rb    &lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;31&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/bacon_helper.rb&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ClrModels::Sword&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@warrior&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Caricature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Isolation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ClrModels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;IWarrior&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;should call survive_attack on the mock&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@warrior&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;when_receiving&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:survive_attack_with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;sword&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ClrModels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Sword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;sword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@warrior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@warrior&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;did_receive?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:survive_attack_with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;be&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;successful&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;should return different results when expectation is defined with arguments&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;sword1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ClrModels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Sword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;sword2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ClrModels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Sword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@warrior&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;when_receiving&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:survive_attack_with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@warrior&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;when_receiving&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:survive_attack_with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sword2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;sword1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@warrior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;sword2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@warrior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@warrior&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;did_receive?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:survive_attack_with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sword2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;be&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;successful&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;So now we’ve got 2 tests for our Sword class. The only thing that is left to do is to run the specs. You can do that by executing the ibacon command and passing it the file you want to test.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+ C:\dev\caricature
(master) » ibacon spec/sword_spec.rb
ClrModels::Sword
- should call survive_attack on the mock
- should return different results when expectation is defined with arguments

2 specifications (5 requirements), 0 failures, 0 errors
&lt;/code&gt;&lt;/pre&gt;
</description>
        <published>2009-05-21 14:52:17 +0200</published>
        <link>http://flanders.co.nz/2009/05/21/getting-started-with-caricature-and-ironruby/</link>
      </item>
      
    
      
      <item>
        <title>Caricature ready for beta</title>
        <description>&lt;p&gt;The last couple of days I’ve been getting &lt;a href=&quot;http://github.com/casualjim/caricature&quot;&gt;Caricature&lt;/a&gt; to a more releasable state. The code got a thorough cleanup and refactor. Caricature now knows how to be a full mocking framework for Ruby classes and CLR classes that only interact with ruby objects. When I apply the 80/20 rule to caricature it’s definitely beta worthy.&lt;/p&gt;

&lt;p&gt;I’m not a huge fan of the 80/20 rule unless all the features I want are in the 80 part. In that case for me it’s a 100 rule ;).&lt;/p&gt;

&lt;p&gt;As for the latest changes:&lt;/p&gt;

&lt;p&gt;Adding &lt;code&gt;require &#8216;caricature&#8217;&lt;/code&gt; only gives you ruby mocking. If you want to use it to mock CLR classes or interact with the CLR you’ll need to add an extra require statement:&lt;code&gt;require &#8216;caricature/clr&#8217;&lt;/code&gt;. I’ve done it this way so that I can still add Java and MacRuby support later on.&lt;/p&gt;

&lt;p&gt;By default caricature will always give you an instance of an isolation, but there are times that you’ll want to substitute the result of a class method invocation. So the API got expanded with 2 methods, &lt;code&gt;when_class_receives&lt;/code&gt; and &lt;code&gt;did_class_receive?&lt;/code&gt; These methods enable you to setup substitutions for class method calls.&lt;/p&gt;

&lt;p&gt;I’m still waiting for IronRuby 0.5 to be released to give you a blow-by-blow tutorial on how to setup your environment.&lt;/p&gt;

&lt;p&gt;Basically you download the ironruby release from &lt;a href=&quot;http://ironruby.codeplex.com/Release/ProjectReleases.aspx&quot;&gt;Codeplex&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then you make sure the path to ir.exe is in your PATH variable&lt;/p&gt;

&lt;p&gt;After that you should be able to do igem list and get an empty result back.&lt;/p&gt;

&lt;p&gt;now you need to install bacon you can do that by executing&lt;/p&gt;

&lt;p&gt;  igem install bacon&lt;/p&gt;

&lt;p&gt;next you need the caricature gem&lt;/p&gt;

&lt;p&gt;  igem install caricature&lt;/p&gt;

&lt;p&gt;You will also need rake to be installed to build the cs files included in the sources.&lt;/p&gt;

&lt;p&gt;  igem install rake&lt;/p&gt;

&lt;p&gt;ok now you should be good to to&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;bacon&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;caricature&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;caricature/clr&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;when isolating Ruby classes with class members&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@dagger&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Dagger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@soldier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Caricature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Isolation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SoldierWithClassMembers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;should work without expectations&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@dagger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attack&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@soldier&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@soldier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;did_receive?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:survive_attack_with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@dagger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;be&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;successful&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;should work for expectations with an argument constraint&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@soldier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;when_receiving&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:survive_attack_with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@dagger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@dagger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@soldier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@soldier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;did_receive?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:survive_attack_with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;be&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;successful&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;you can get the gem from &lt;a href=&quot;http://rubyforge.org/projects/caricature/&quot;&gt;rubyforge&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Or from my github account: &lt;a href=&quot;http://github.com/casualjim/caricature&quot;&gt;http://github.com/casualjim/caricature&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2009-05-19 15:06:04 +0200</published>
        <link>http://flanders.co.nz/2009/05/19/caricature-ready-for-beta/</link>
      </item>
      
    
      
      <item>
        <title>An update on caricature</title>
        <description>&lt;p&gt;Yesterday I explained about caricature but I didn’t have it fully tested yet. Today I’ve written a bunch of integration specs for all the platform combinations Caricature currently supports so you should be able to use Caricature also for plain ruby object mocking in addition to CLR interop mocking.&lt;/p&gt;

&lt;p&gt;After having a very brief twitter discussion with Scott I decided it would be a good idea to change the name of the methods &lt;em&gt;when_told_to&lt;/em&gt; and &lt;em&gt;was_told_to?&lt;/em&gt; . In ruby objects receive messages so the wording now becomes &lt;em&gt;when_receiving&lt;/em&gt; and &lt;em&gt;did_receive? &lt;/em&gt;. I have a problem with the should naming because there is nothing conditional about it. Either you want the method to return something or you want it to return a default value for CLR value types or nil. And if you’re asserting if a method it called that is deterministic; it is either called or not there is no gray area there.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;ninja&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ClrModels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Ninja&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;vi&quot;&gt;@weapon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;when_receiving&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:attack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ninja&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;vi&quot;&gt;@ninja&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ninja&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@weapon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;vi&quot;&gt;@weapon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;did_receive?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:attack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;be&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;successful&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Before I call it 1.0 I want to at least give ruby objects also the ability to isolate static and sealed methods as well as mocking ruby class methods. So that for CLR to Ruby interaction you a get the full range of possibilities.&lt;/p&gt;

&lt;p&gt;I have also &lt;a href=&quot;http://casualjim.github.com/caricature/Caricature.html&quot;&gt;set up a site on github&lt;/a&gt; that contains the API documentation for Caricature. When IronRuby 0.5 releases I’ll publish a blog post that will talk you through testing your CLR assembly with IronRuby, bacon and Caricature.&lt;/p&gt;

&lt;p&gt;For now you can take a look &lt;a href=&quot;http://github.com/casualjim/caricature/blob/7ab1d513be74b26c95a1ca34cc1d01f6c850cc43/spec/integration_spec.rb&quot;&gt;here&lt;/a&gt; for example on how to use Caricature for isolating features.&lt;/p&gt;
</description>
        <published>2009-05-15 23:34:46 +0200</published>
        <link>http://flanders.co.nz/2009/05/15/an-update-on-caricature/</link>
      </item>
      
    
      
      <item>
        <title>IronRuby just got a mocking framework – kind of</title>
        <description>&lt;p&gt;As I mentioned in a previous &lt;a href=&quot;http://flanders.co.nz/2009/05/03/mocking-for-ironruby/&quot;&gt;post&lt;/a&gt;. I started working on a small mocking framework. It has now progressed far enough to handle the most common mocking tasks.&lt;/p&gt;

&lt;p&gt;Below I pasted the output of the integration tests for CLR interop.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;when isolating CLR interfaces        
- should work without expectations         
- should work with an expectation with any arguments         
- should work with an expectation getting different method call result         
- should work for an assertion on a specific argument 

when isolating CLR classes        
- should work without expectations         
- should work with an expectation for any arguments         
- should work with an assertion for specific arguments         
- should fail for an assertion with wrong arguments 

when isolating CLR instances        
- should work without expectations         
- should work with an expectation for any arguments         
- should fail for an assertion for specific arguments         
- should allow to delegate the method call to the real instance (partial mock)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;you will need bacon installed to run the specs:&lt;/p&gt;

&lt;p&gt;  igem install bacon&lt;/p&gt;

&lt;p&gt;you can then install the caricature gem in ironruby by issueing&lt;/p&gt;

&lt;p&gt;  igem install caricature&lt;/p&gt;

&lt;p&gt;To use it there are some examples in the file spec/integration_spec.rb&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;spec/integration_spec.rb &lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;bacon&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;caricature&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;ninja&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;when_told_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:survive_attack_with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;weapon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ninja&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;ninja&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;was_told_to?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:survive_attack_with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;be&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;successful&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;/p&gt;

&lt;p&gt;There is a gotcha though, when you use it in a CLR class you&amp;#8217;re bound to CLR rules and it only overrides the methods that are marked as virtual. We also can&amp;#8217;t isolate static or sealed types at the moment.&lt;/p&gt;

&lt;p&gt;I took the approach of doing away with the terminology of mocking and subbing and instead chose the much clearer Isolation. By default any method returns null or the default value of a value type. You can tell an isolation to return a specific value or raise an error etc. Later on you can then assert if the method was actually called.&lt;/p&gt;

&lt;p&gt;This fits in better with the way you probably structure your tests.&lt;/p&gt;

&lt;p&gt;I hope you like it.&lt;/p&gt;

&lt;p&gt;You can find the source in my github account.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://github.com/casualjim/caricature&quot;&gt;http://github.com/casualjim/caricature&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2009-05-14 23:31:50 +0200</published>
        <link>http://flanders.co.nz/2009/05/14/ironruby-just-got-a-mocking-framework-kind-of/</link>
      </item>
      
    
      
      <item>
        <title>Joined the lounge network</title>
        <description>&lt;p&gt;Today I received my invitation to the &lt;a href=&quot;http://thelounge.net&quot;&gt;Lounge&lt;/a&gt; network. I just finished changing my homepage to include their ads in my side bar.    &lt;br/&gt;
My reasons for joining the ad network are that on one hand I’ve been an ad-sense member for a really long time and although I’ve had ads on multiple sites it never actually made me any money. Eventually I gave up on putting those ads on my blog. So I’m not really doing it to make any money of this blog, but if it takes a small bite out of my hosting bill I’ll be a happy man :).&lt;/p&gt;

&lt;p&gt;The ads that are run by the lounge are .net centric and are a much better fit to the audience of this blog. It even may be helpful to somebody at times.&lt;/p&gt;

&lt;p&gt;Let’s see how this works out.&lt;/p&gt;
</description>
        <published>2009-05-11 20:14:30 +0200</published>
        <link>http://flanders.co.nz/2009/05/11/joined-the-lounge-network/</link>
      </item>
      
    
      
      <item>
        <title>Mocking for IronRuby</title>
        <description>&lt;p&gt;As you may or may not know I’m in the process of building IronRubyMvc. At one point I did write a bunch of tests in for the code I had at that point. However that test code was written in C# with xunit and moq. I wasn’t too happy about that so I deferred writing tests to a later date when I could use a Ruby library to write them.&lt;/p&gt;

&lt;p&gt;That time has come, I can use bacon and it’s acceptable performance wise now, not stellar but workable. So when I started to port some of my previously written tests to bacon I ran into a road block. Mocking isn’t as straightforward as my optimistic self was expecting. This lead me to think about what exactly does a mocking framework do?&lt;/p&gt;

&lt;p&gt;I’m pretty much a just stuff no fluff kind of guy when it comes to coding. So I tend to choose for solutions that have just the right amount of features and virtually no whistles and bells. I generally blame it on being slightly stupid so I can’t grok intensely complex solutions. Once you cross a treshold there is no way in hell I will ever look at it again.&lt;/p&gt;

&lt;p&gt;Anyway the no fluff approach to mocking would be to look at the core responsibilities of those frameworks, which are 2 as far as I can tell.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Generate a proxy for an object so you can intercept method calls&lt;/li&gt;
&lt;li&gt;Allow for verificatons of those intercepted method calls to do things like how many times was this method called, was it called at all etc.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;So I’m starting to implement a way to generate proxies today.. This should be a piece of cake with Ruby :) Then I’ll look at implementing some constraints and verifications.&lt;/p&gt;

&lt;p&gt;Thinking about how to approach the API for defining the mocks has also been an interesting experience. From the get-go a Record/Replay/Verify model is out. But then it comes to the following part, when do you define the verifications.&lt;/p&gt;

&lt;p&gt;Do you do that in the assertion fase, thus stubbing everything beforehand and just allowing the user to define return values when establishing the test context. Or do you define the verification (at least twice, ignore arguments etc) when you establish the test context. My vote goes to the first option.&lt;/p&gt;

&lt;p&gt;So a new project is born it’s called caricature and lives on github. Which will try to implement the ideas set forward in this blog post for &lt;a href=&quot;http://ironruby.net&quot;&gt;IronRuby&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://github.com/casualjim/caricature&quot;&gt;http://github.com/casualjim/caricature&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Technorati Tags: &lt;a href=&quot;http://technorati.com/tags/IronRuby&quot;&gt;IronRuby&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/Mocking&quot;&gt;Mocking&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2009-05-03 14:10:04 +0200</published>
        <link>http://flanders.co.nz/2009/05/03/mocking-for-ironruby/</link>
      </item>
      
    
      
      <item>
        <title>Using IronRuby with RubyMine</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.jetbrains.com/ruby/&quot;&gt;RubyMine&lt;/a&gt; was released earlier this week. I’ve used rubymine in the past and was very impressed with the IDE, so much that I’m silently hoping the guys from &lt;a href=&quot;http://www.jetbrains.com/&quot;&gt;Jetbrains&lt;/a&gt; would do a C# IDE too. I’d probably buy that one as well, but for now I’ll settle for &lt;a href=&quot;http://www.jetbrains.com/resharper&quot;&gt;Resharper&lt;/a&gt; with Visual studio.&lt;/p&gt;

&lt;p&gt;By default Rubymine won’t accept &lt;a href=&quot;http://ironruby.net&quot;&gt;IronRuby&lt;/a&gt; as a ruby SDK, but I asked for help in the twitterverse and got it (&lt;a href=&quot;http://twitter.com/iRomeo/statuses/1677867948&quot;&gt;http://twitter.com/iRomeo/statuses/1677867948&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://flanders.co.nz/wp-content/uploads/2009/05/settings-rubymine.jpg&quot;&gt;&lt;img src=&quot;http://flanders.co.nz/wp-content/uploads/2009/05/settings-rubymine-thumb.jpg&quot; alt=&quot;settings_rubymine&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just symlinking didn’t really work because the ruby.exe listens to &amp;#8211;version for getting its version number.  IronRuby on the other hand listens to –v to get its version number.  The solution to that is to create a batch file that will translate the &amp;#8211;version  modifier to –v.&lt;/p&gt;

&lt;p&gt;So instead of symlinking the ir.exe to a name that starts with ruby I created a batch file called ruby_iron.cmd with the following content.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@echo off
set IR_CMD=&quot;%~dp0ir.exe&quot;
if &quot;%1&quot;==&quot;&#8211;version&quot; ( GOTO RUBY_VERSION )
GOTO RUBY
:RUBY_VERSION
%IR_CMD% -v
goto QUIT
:RUBY
%IR_CMD%
:QUIT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With that ruby_iron.cmd file in place you can just add IronRuby as an SDK in RubyMine.&lt;/p&gt;

&lt;p&gt;Enjoy :)&lt;/p&gt;
</description>
        <published>2009-05-02 14:50:37 +0200</published>
        <link>http://flanders.co.nz/2009/05/02/using-ironruby-with-rubymine/</link>
      </item>
      
    
      
      <item>
        <title>Binder for ironruby mvc</title>
        <description>&lt;p&gt;I’ve progressed far enough with &lt;a href=&quot;http://ironruby.net&quot;&gt;IronRuby&lt;/a&gt; MVC to start thinking about a sample and I’ve decided to write 2 separate samples both on the same technologies. As an OR/M I will be using &lt;a href=&quot;http://www.mindscape.co.nz/products/LightSpeed/default.aspx&quot;&gt;LightSpeed&lt;/a&gt; from Mindscape, just because it’s an awesome piece of technology.&lt;/p&gt;

&lt;p&gt;At this moment I’m looking at creating a binder for objects that takes a hash as input. The default model binder of ASP.NET MVC doesn’t quite fit all that well with the ironruby implementation so I’m creating a ruby binder implementation. This stuff is just something that makes ruby shine.&lt;/p&gt;

&lt;p&gt;While doing so I came up with this little tidbit of code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class System::Object

  class &amp;lt;&amp;lt; self

    def create_from_hash(options)
      result = self.new
      result.populate_from_hash options
      result
    end

  end

  def populate_from_hash(options)
    options.each do |k, v|
      mn = &quot;#{k}=&quot;.to_sym
      self.send(mn, v) if self.respond_to?(mn)
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This code allows you to populate any .NET object from a hash.&lt;/p&gt;

&lt;p&gt;So doing Person.create_from_hash(:username =&gt; “joe”) would create a user instance with the property username set to joe.&lt;/p&gt;

&lt;p&gt;You do need to provide a hash where the values have the correct type.&lt;/p&gt;

&lt;p&gt;Technorati Tags: &lt;a href=&quot;http://technorati.com/tags/IronRuby+MVC&quot;&gt;IronRuby MVC&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/IronRuby&quot;&gt;IronRuby&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2009-04-08 19:07:22 +0200</published>
        <link>http://flanders.co.nz/2009/04/08/binder-for-ironruby-mvc/</link>
      </item>
      
    
      
      <item>
        <title>Git/Github survival guide</title>
        <description>&lt;p&gt;Lately I’ve been helping a few people to get started on &lt;a href=&quot;http://github.com&quot;&gt;Github&lt;/a&gt;. I use git at the command line and my survival guide is also based on that way of interacting with &lt;a href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt;. So I thought I’d write the procedure up so that I can just point people to this page.&lt;/p&gt;

&lt;p&gt;The first tip I can give you and most of what I’ll be talking about is in the &lt;a href=&quot;http://github.com/guides/home&quot;&gt;guides&lt;/a&gt; from github. When you’re used to Subversion or Team Foundation Server for example you’ll need to make a mental leap. That leap would be to realise that your local copy &lt;em&gt;is&lt;/em&gt; the master copy for you. The remote server like github.com is one is a little bit like an afterthought. I think it goes a little bit like this: “O cool I’ve built this really cool thing here and I’ve got it in this git repository on my machine. It would be cool if other people also had access. Wait a minute, I’ll just add a remote and push my stuff onto that server.” Problem solved.&lt;/p&gt;

&lt;p&gt;Most of this guide applies to both windows and *nix systems except for the next part because that will describe the install parameters for getting msysgit to behave nicely on your system.&lt;/p&gt;

&lt;p&gt;==== Windows only ====&lt;/p&gt;

&lt;p&gt;If you’re on windows I suggest you use &lt;a href=&quot;http://code.google.com/p/msysgit&quot;&gt;msysgit&lt;/a&gt; as your git client. You can probably use everything I’m about to explain from explorer too if you want to use &lt;a href=&quot;http://code.google.com/p/tortoisegit/&quot;&gt;tortoisegit&lt;/a&gt; or just prefer gui’s. I, personally, like having options so I’ll probably use a mix of those in the future. Ok onto the install procedure.&lt;/p&gt;

&lt;p&gt;Somewhere half-way through the install of msysgit it will ask you how far you want to integrate it. The correct choice is the middle one: Run Git from the Windows Command Prompt. For generating ssh keys etc you probably want to use OpenSSH.&lt;/p&gt;

&lt;p&gt;==== Windows only end ====&lt;/p&gt;

&lt;p&gt;When the install of msysgit is completed it is time to start configuring your git install for usage with github. The first step you need to take is to tell git your username and email address. You will also need your API token that you can find on your &lt;a href=&quot;http://github.com/account&quot;&gt;account page&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[~]$ git config &#8211;global user.name &amp;lt;span class=&quot;str&quot;&amp;gt;&quot;Ivan Porto Carrero&quot;&amp;lt;/span&amp;gt;
[~]$ git config &#8211;global user.email ivan@nowhere.com
[~]$ git config &#8211;global github.user casualjim
[~]$ git config &#8211;global github.token [[API TOKEN]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This information can be found in the github guides: &lt;a href=&quot;http://github.com/guides/tell-git-your-user-name-and-email-address&quot;&gt;http://github.com/guides/tell-git-your-user-name-and-email-address&lt;/a&gt;. The configuration above is global but you can still override that on a per project basis.&lt;/p&gt;

&lt;p&gt;Now that git knows how to deal with github it is time to formally introduce your machine to the github server. To do so you might have to create an ssh key private/public keypair. A tip I can give you before you start the creation is that you probably don’t want to type a password everytime you push to github. So when you create your ssh key don’t use a passphrase (leave it blank when asked for one).&lt;/p&gt;

&lt;p&gt;The procedure on how to create the ssh keys can againn be found in the github guides: &lt;a href=&quot;http://github.com/guides/providing-your-ssh-key&quot;&gt;http://github.com/guides/providing-your-ssh-key&lt;/a&gt;. On windows I would suggest that you use the openssh one. I use RSA keys but you can choose whichever flavor you want of course :) After generating the ssh keys you need to provide them to github in your &lt;a href=&quot;http://github.com/account&quot;&gt;account page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This should get you up and running with github. I’m assuming most people coming to github are familiar with subversion so I’ll try to map some common operations to the command sequence you need in git.&lt;/p&gt;

&lt;p&gt;First things first I have a couple of aliases defined for some common operations.&lt;/p&gt;

&lt;p&gt;You can just copy paste the aiases section below in the .gitconfig file that you can find in the root of your personal folder. C:\users\ivan.gitconfig on vista for me and ~/.gitconfig in bash.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[alias]
    ci = commit
    st = status
    co = checkout
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If all you need is read-only access to a repository you can just clone a repository by its public clone url ie. git clone git://github.com/casualjim/ironrubymvc.git&lt;/p&gt;

&lt;p&gt;The first operation you’ll need is how to get source code, make changes and send in a patch. In git lingo this is called forking.&lt;/p&gt;

&lt;p&gt;On github you fork the project you want to make changes too. Then you clone that project on your local machine and make your changes. You then push your changes back to your repository and send a pull request to the original project. That is all you need to do to send in a patch, issue a pull request.&lt;/p&gt;

&lt;p&gt;I forked ironrubymvc from Jimmy Schementi and send him pull requests regularly when I’ve completed a chunk of work on it. so here’s the sequence of commands I use to do this.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;git clone &lt;/strong&gt;&lt;/em&gt;&lt;a href=&quot;mailto:git@github.com:casualjim/ironrubymvc.git&quot;&gt;&lt;em&gt;&lt;strong&gt;git@github.com:casualjim/ironrubymvc.git&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;… make some changes …&lt;/p&gt;

&lt;p&gt;To start updating the repository with my changes I’ll generally first ask for a status to see if I need to add some files to ignore and if there are new files that need te be included&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;git st &lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If there are files that need to be ignored I’ll add them to the .gitignore file in my project root. If there are still some new files that need to be added:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;git add .&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Then I’m ready to commit the changes to my local repository:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;git ci –a –m “Made ironrubymvc do the dishes and ironing”&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now it’s time to push my changes to the github server.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;git push&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And now I need to go to the github website and send a pull request to Jimmy. He can then decide if he wants to apply the patch or make some changes.&lt;/p&gt;

&lt;p&gt;The next step is to keep your fork in sync with the forked repository, so that you can continue to pick up their changes and ensure that your changes still work.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;git remote add upstream git://github.com/jschementi/ironrubymvc.git&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;to automatically fetch and then merge the changes from the upstream repository you can pull from it. You have to tell pull the remote source it has to pull from and the target branch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;git pull upstream master&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A more detailed explanation of this process can be found in the github guides. &lt;a href=&quot;http://github.com/guides/fork-a-project-and-submit-your-modifications&quot;&gt;http://github.com/guides/fork-a-project-and-submit-your-modifications&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next thing we’re going to map is svn:externals. In git this is called submodules. They have a great explanation off that in the github guides &lt;a href=&quot;http://github.com/guides/developing-with-submodules&quot;&gt;http://github.com/guides/developing-with-submodules&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Suppose you made some changes and they aren’t really what you want and you want to restore the repository to the last commit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;git reset &amp;#8211;hard&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The last topic is branching and merging changes etc. As an example I will take the &lt;a href=&quot;http://ironruby.net&quot;&gt;IronRuby&lt;/a&gt; project for which Michael Letterle and myself maintain the linux branch. This branch ensures that IronRuby gets the fixes it needs to compile on mono. A typical workflow for me when I sync it with the source repository @ git://github.com/ironruby/ironruby.git from the ironruby project root on my local machine.&lt;/p&gt;

&lt;p&gt;Previously I did:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;git clone git@github.com:mletterle/ironruby.git&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;git remote add ironruby git://github.com/ironruby/ironruby.git&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And to create and track the remote linux branch I issued the following commands:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;git co –-track –b linux origin/linux&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;git pull&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This has now got my local copy set up with a linux branch and has pulled in the contents of the remote branch to my local repository.&lt;/p&gt;

&lt;p&gt;When there are changes in the source repository I issue the following commands:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;git co master&lt;/em&gt;&lt;/strong&gt; // Check out the master branch&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;git pull ironruby master&lt;/em&gt;&lt;/strong&gt; // Pull in changes from remote&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;git co linux&lt;/em&gt;&lt;/strong&gt; // Check out the linux branch&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;git merge master&lt;/em&gt;&lt;/strong&gt; // Merge in the changes from the master branch&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;mate .&lt;/em&gt;&lt;/strong&gt; // Open textmate to resolve conflicts&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;git add .&lt;/em&gt;&lt;/strong&gt; // Add the files with the resolved conflicts back to the repository&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;git ci –a –m “Synced with upstream”&lt;/em&gt;&lt;/strong&gt; // submit changes&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;git push&lt;/em&gt;&lt;/strong&gt; // update the github server&lt;/p&gt;

&lt;p&gt;The information above can be found in the github guides as well but in several places:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://github.com/guides/git-cheat-sheet&quot;&gt;http://github.com/guides/git-cheat-sheet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://github.com/guides/showing-and-tracking-remote-branches&quot;&gt;http://github.com/guides/showing-and-tracking-remote-branches&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://github.com/guides/push-a-branch-to-github&quot;&gt;http://github.com/guides/push-a-branch-to-github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://github.com/guides/keeping-a-git-fork-in-sync-with-the-forked-repo&quot;&gt;http://github.com/guides/keeping-a-git-fork-in-sync-with-the-forked-repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://beans.seartipy.com/2008/12/09/setting-up-ruby-on-rails-projects-with-git-and-github/&quot;&gt;http://beans.seartipy.com/2008/12/09/setting-up-ruby-on-rails-projects-with-git-and-github/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Those are the commands I use about 95% of the time when I’m working with git. I thought they might be useful to other people hence the share.&lt;/p&gt;

&lt;p&gt;If you combine the above with my previous post on how to git-enable your command-line &lt;a href=&quot;http://flanders.co.nz/2009/03/19/pimp-your-command-line-for-git/&quot;&gt;http://flanders.co.nz/2009/03/19/pimp-your-command-line-for-git/&lt;/a&gt; . I guess you’ve got a pretty sweet setup.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;There is one gotcha that I’d like to repeat one more time. When you’re branching you have to close the solution in visual studio or all kinds of nastiness will ensue. Visual studio will lock some files and if git wants to remove them it can’t. This results in a branch that is probably messed up.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fflanders.co.nz%2f2009%2f03%2f21%2fgitgithub-survival-guide%2f&quot;&gt;&lt;img src=&quot;http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fflanders.co.nz%2f2009%2f03%2f21%2fgitgithub-survival-guide%2f&quot; alt=&quot;kick it on DotNetKicks.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Technorati Tags: &lt;a href=&quot;http://technorati.com/tags/git&quot;&gt;git&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/github&quot;&gt;github&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/cheat+sheet&quot;&gt;cheat sheet&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2009-03-21 18:33:32 +0100</published>
        <link>http://flanders.co.nz/2009/03/21/gitgithub-survival-guide/</link>
      </item>
      
    
      
      <item>
        <title>Pimp your command-line for git</title>
        <description>&lt;p&gt;I do development on both the Mac and windows. I prefer to use git as my source control these days and have done so for the past year or so. Git is great, I love it. I love the ease of branching a lot too. I’ll often just branch of locally just to play around with an idea without affecting the master branch.&lt;/p&gt;

&lt;p&gt;But having many branches can be confusing at times, especially in my case as I can only remember what I was doing for 5 seconds. So sometimes I mess up a perfectly good branch because of the confusion.&lt;/p&gt;

&lt;p&gt;On windows I use Powershell as my command-line. I don’t know much of powershell scripting. To be honest I mainly started using it because then I wouldn’t constantly get an error when I typed ls instead of dir :) However since then I did explore that environment a little and it &lt;em&gt;does&lt;/em&gt; give me easy access to the CLR and a way to create very very powerful batch files, although I do most of my scripting in Ruby these days. It also allows you to customize your prompt. You need to allow scripts unrestricted access for this to work. You can do that by entering Set-ExecutionPolicy Unrestricted at a powershell prompt. Then you close powershell and create a file in %MYDOCUMENTS%\WindowsPowershell called profile.ps1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;span class=&quot;kwrd&quot;&amp;gt;function&amp;lt;/span&amp;gt; prompt





{





    $host.ui.rawui.WindowTitle = $(get-location)





    Write-Host (&amp;lt;span class=&quot;str&quot;&amp;gt;&quot;+ &quot;&amp;lt;/span&amp;gt; + $(get-location)) -foregroundcolor Yellow











        $branches = &amp;lt;span class=&quot;str&quot;&amp;gt;&quot;&quot;&amp;lt;/span&amp;gt;





        git branch | &amp;lt;span class=&quot;kwrd&quot;&amp;gt;foreach&amp;lt;/span&amp;gt; {





            &amp;lt;span class=&quot;kwrd&quot;&amp;gt;if&amp;lt;/span&amp;gt;($_ &amp;lt;span class=&quot;preproc&quot;&amp;gt;-match&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;str&quot;&amp;gt;&quot;^\*\s(.*)&quot;&amp;lt;/span&amp;gt;){





                $branches += $matches[1]





            }





        }





    &amp;lt;span class=&quot;kwrd&quot;&amp;gt;if&amp;lt;/span&amp;gt;($branches){





        Write-Host (&amp;lt;span class=&quot;str&quot;&amp;gt;&quot;(&quot;&amp;lt;/span&amp;gt; + $branches + &amp;lt;span class=&quot;str&quot;&amp;gt;&quot;) &quot;&amp;lt;/span&amp;gt;) -nonewline -fore Cyan





    }

















    Write-Host (&amp;lt;span class=&quot;str&quot;&amp;gt;&quot;»&quot;&amp;lt;/span&amp;gt;) -nonewline -foregroundcolor Green





    &amp;lt;span class=&quot;kwrd&quot;&amp;gt;return&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;str&quot;&amp;gt;&quot; &quot;&amp;lt;/span&amp;gt;





}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The result of this prompt looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://flanders.co.nz/wp-content/uploads/2009/03/picture2.png&quot;&gt;&lt;img src=&quot;http://flanders.co.nz/wp-content/uploads/2009/03/picture2-thumb.png&quot; alt=&quot;Picture 2&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In bash I use a .bashrc script that shows me the branch in my prompt. You need ttycolors enabled to enjoy the full prompt but this is the section that takes care of my prompt.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;span class=&quot;kwrd&quot;&amp;gt;if&amp;lt;/span&amp;gt; [ -n &amp;lt;span class=&quot;str&quot;&amp;gt;&quot;$force_color_prompt&quot;&amp;lt;/span&amp;gt; ]; then





    &amp;lt;span class=&quot;kwrd&quot;&amp;gt;if&amp;lt;/span&amp;gt; [ -x /usr/bin/tput ] &amp;amp;&amp;amp; tput setaf 1 &amp;gt;&amp;amp;/dev/null; then





    &amp;lt;span class=&quot;rem&quot;&amp;gt;# We have color support; assume it&#8217;s compliant with Ecma-48&amp;lt;/span&amp;gt;





    &amp;lt;span class=&quot;rem&quot;&amp;gt;# (ISO/IEC-6429). (Lack of such support is extremely rare, and such&amp;lt;/span&amp;gt;





    &amp;lt;span class=&quot;rem&quot;&amp;gt;# a case would tend to support setf rather than setaf.)&amp;lt;/span&amp;gt;





    color_prompt=yes





    &amp;lt;span class=&quot;kwrd&quot;&amp;gt;else&amp;lt;/span&amp;gt;





    color_prompt=





    fi





fi











parse_git_branch() {





  git branch 2&amp;gt; /dev/null | sed -e &amp;lt;span class=&quot;str&quot;&amp;gt;&#8217;/^[^*]/d&#8217;&amp;lt;/span&amp;gt; -e &amp;lt;span class=&quot;str&quot;&amp;gt;&#8217;s/* \(.*\)/(\1)/&#8217;&amp;lt;/span&amp;gt;





}

















&amp;lt;span class=&quot;rem&quot;&amp;gt;# export PS1=&#8217;\e[0;32m+ \u @ \w\e[m\e[0;33m »\e[m &#8216;&amp;lt;/span&amp;gt;





&amp;lt;span class=&quot;kwrd&quot;&amp;gt;if&amp;lt;/span&amp;gt; [ &amp;lt;span class=&quot;str&quot;&amp;gt;&quot;$color_prompt&quot;&amp;lt;/span&amp;gt; = yes ]; then





    PS1=&amp;lt;span class=&quot;str&quot;&amp;gt;&quot;\[\033[01;36m\]+\u@\h\[\033[00m\]:\[\033[01;32m\]\w\[\033[00m\]\[\033[01;33m\]\n\$(parse_git_branch)»\[\033[00m\] &quot;&amp;lt;/span&amp;gt;





&amp;lt;span class=&quot;kwrd&quot;&amp;gt;else&amp;lt;/span&amp;gt;





  PS1=&amp;lt;span class=&quot;str&quot;&amp;gt;&quot;\u@\h:\w\$(parse_git_branch)\$ &quot;&amp;lt;/span&amp;gt;





fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The result of the bash script looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://flanders.co.nz/wp-content/uploads/2009/03/picture1.png&quot;&gt;&lt;img src=&quot;http://flanders.co.nz/wp-content/uploads/2009/03/picture1-thumb.png&quot; alt=&quot;Picture 1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fflanders.co.nz%2f2009%2f03%2f19%2fpimp-your-command-line-for-git%2f&quot;&gt;&lt;img src=&quot;http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fflanders.co.nz%2f2009%2f03%2f19%2fpimp-your-command-line-for-git%2f&quot; alt=&quot;kick it on DotNetKicks.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Technorati Tags: &lt;a href=&quot;http://technorati.com/tags/Git&quot;&gt;Git&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/Powershell&quot;&gt;Powershell&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/Bash&quot;&gt;Bash&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2009-03-19 21:11:27 +0100</published>
        <link>http://flanders.co.nz/2009/03/19/pimp-your-command-line-for-git/</link>
      </item>
      
    
      
      <item>
        <title>Ninject knows a new trick</title>
        <description>&lt;p&gt;Earlier this week Nate &lt;a href=&quot;http://kohari.org/2009/03/13/ninject-github-crazy-delicious/&quot;&gt;already said&lt;/a&gt; that I was doing some work on &lt;a href=&quot;http://ninject.org&quot;&gt;Ninject&lt;/a&gt;, now I have it working :). Everything I’m about to talk about is currently in the master tree of the &lt;a href=&quot;http://github.com/enkari/ninject&quot;&gt;ninject github&lt;/a&gt; repository. Getting &lt;a href=&quot;http://ironruby.net&quot;&gt;IronRuby&lt;/a&gt; to play nice with &lt;a href=&quot;http://ninject.org&quot;&gt;Ninject&lt;/a&gt; was surprisingly easy :).&lt;/p&gt;

&lt;p&gt;There was only one place that required some kind of weird workaround and from that workaround I’m entirely sure that it will go away by the time .NET 4.0 will be here. The DLR duplicates a number of delegates from .NET 4.0 but .NET 3.5 also defines them (i.e. System.Func&amp;lt;T, TT&gt;) and then you get great exception messages like: System.Func is not of type System.Func. The solution is to not reference System.Core in your project. Except that Ninject expects the System.Core variant at some point and that was solved by aliasing the System.Core assembly and talking to the types in that assembly by their alias.&lt;/p&gt;

&lt;p&gt;Anyway the juicy stuff :) How can you take advantage of Ninjects newly found friendship with &lt;a href=&quot;http://ironruby.net&quot;&gt;IronRuby&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ninject.org&quot;&gt;Ninject&lt;/a&gt; now has 2 flavors of Kernels. We have a StandardKernel that knows how to deal with the module configuration system that uses a fluent interface defined in C#. And now we also have a DlrKernel that extends the StandardKernel with a RubyModuleLoader plugin. If you tell the DlrKernel to look inside a path for configuration files it will scan those folders for &lt;em&gt;.dll or &lt;/em&gt;.rb files. Those files should contain the configuration for the ninject bindings.&lt;/p&gt;

&lt;p&gt;So to create a Kernel that is ruby enabled you would use the following code:&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;IKernel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kernel&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DlrKernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;kernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AutoLoadModulesRecursively&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;samurai&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IWarrior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;samurai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Weapon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;The above snippet could then for example load a configuration file that has been defined like this:&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/../Ninject.Tests.dll&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Tests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Fakes&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;to_configure_ninject&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IWeapon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sword&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IWarrior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Samurai&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;The configuration above shows how most of a typical configuration would be defined by you the full configuration API at your disposal. All the options for the configuration can be specified in 2 ways. The first way is in a hash like syntax and the second way uses a more fluent syntax.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;to_configure_ninject&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IServiceA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ServiceA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:as&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:singleton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                          &lt;span class=&quot;ss&quot;&gt;:meta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;superservice&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                          &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;aaaaa&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                          &lt;span class=&quot;ss&quot;&gt;:with&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                            &lt;span class=&quot;ss&quot;&gt;:parameter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:my_param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;param_value&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                            &lt;span class=&quot;ss&quot;&gt;:constructor_arguments&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:const_arg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;56&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                            &lt;span class=&quot;ss&quot;&gt;:property_values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:property_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;94&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                          &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                          &lt;span class=&quot;ss&quot;&gt;:on_activation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;do_some_work&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                          &lt;span class=&quot;ss&quot;&gt;:on_deativated&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;do_some_cleanup&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                          &lt;span class=&quot;ss&quot;&gt;:when&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;a value&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# or&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                          &lt;span class=&quot;c1&quot;&gt;# :when =&amp;gt; { :injected_into =&amp;gt; ServiceB } or&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                          &lt;span class=&quot;c1&quot;&gt;# :when =&amp;gt; { :target_has =&amp;gt; AnAttribute } or&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                          &lt;span class=&quot;c1&quot;&gt;# :when =&amp;gt; { :member_has =&amp;gt; AnAttribute } or&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                          &lt;span class=&quot;c1&quot;&gt;# :when =&amp;gt; { :class_has =&amp;gt; AnAttribute }&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Or&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;to_configure_ninject&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IServiceA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ServiceA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:as&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:singleton&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;superservice&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;aaaaa&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:parameter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:my_param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;param_value&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:constructor_arguments&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:const_arg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;56&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:property_values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;property_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;94&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;on_activation&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;do_some_work&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;on_deativation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;do_some_cleanup&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;c1&quot;&gt;# or&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:injected_into&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SomeClass&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;c1&quot;&gt;# or &#8230;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Some of the nicer consequences of using Ruby as a configuration language is the syntax for open generics. The example below shows how to configure types with open generics.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/../Ninject.Tests.dll&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Tests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Fakes&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Tests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Integration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;StandardKernelTests&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;# IGeneric is a generic interface and GenericService is a generic type&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;# we don&amp;#39;t have to specify any special notation for open generics&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;to_configure_ninject&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IGeneric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;GenericService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:as&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:transient&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IGeneric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;GenericService2&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;To specify a condition the syntax would look like this&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/../Ninject.Tests.dll&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Tests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Fakes&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;to_configure_ninject&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IWeapon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Shuriken&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;             &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;             &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reflected_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Samurai&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_clr_type&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IWeapon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sword&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;ninject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IWarrior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Samurai&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Well that’s all. I hope you like it. I will be looking into more ways to integrate DLR stuff into &lt;a href=&quot;http://ninject.org&quot;&gt;Ninject&lt;/a&gt; the most obvious is allowing you to inject dynamic types into static classes.&lt;/p&gt;
</description>
        <published>2009-03-15 01:32:30 +0100</published>
        <link>http://flanders.co.nz/2009/03/15/ninject-knows-a-new-trick/</link>
      </item>
      
    
      
      <item>
        <title>IronRuby MVC progress</title>
        <description>&lt;p&gt;If you follow my tweets or the &lt;a href=&quot;http://ironruby.net&quot;&gt;IronRuby&lt;/a&gt; mailinglist then you would know that I’ve been working on taking &lt;a href=&quot;http://ironruby.net&quot;&gt;IronRuby&lt;/a&gt; ASP.NET MVC from the prototype stages to a more complete application. For me this has been a great experience getting familiar with the insides of ASP.NET MVC as well as playing around with integrating &lt;a href=&quot;http://ironruby.net&quot;&gt;IronRuby&lt;/a&gt; in an existing C# application.&lt;/p&gt;

&lt;p&gt;The guys over at MSFT (&lt;a href=&quot;http://www.iunknown.com&quot;&gt;John Lam&lt;/a&gt;, &lt;a href=&quot;http://blog.jimmy.schementi.com&quot;&gt;Jimmy Schementi&lt;/a&gt; and &lt;a href=&quot;http://haacked.com&quot;&gt;Phil Haack&lt;/a&gt;) had previously created a prototype and I built upon their work. You can read more about the previous versions of the prototype.     &lt;br/&gt;
&lt;a href=&quot;http://www.iunknown.com/2008/06/ironruby-and-aspnet-mvc.html&quot;&gt;http://www.iunknown.com/2008/06/ironruby-and-aspnet-mvc.html&lt;/a&gt;     &lt;br/&gt;
&lt;a href=&quot;http://blog.jimmy.schementi.com/2008/07/aspnet-and-dynamic-languages.html&quot;&gt;http://blog.jimmy.schementi.com/2008/07/aspnet-and-dynamic-languages.html&lt;/a&gt;     &lt;br/&gt;
&lt;a href=&quot;http://haacked.com/archive/2008/06/12/ironruby-and-asp.net-bffs-forever.aspx&quot;&gt;http://haacked.com/archive/2008/06/12/ironruby-and-asp.net-bffs-forever.aspx&lt;/a&gt;     &lt;br/&gt;
&lt;a href=&quot;http://haacked.com/archive/2008/07/20/ironruby-aspnetmvc-prototype.aspx&quot;&gt;http://haacked.com/archive/2008/07/20/ironruby-aspnetmvc-prototype.aspx      &lt;br/&gt;
&lt;/a&gt;&lt;a href=&quot;http://haacked.com/archive/2009/02/17/aspnetmvc-ironruby-with-filters.aspx&quot;&gt;http://haacked.com/archive/2009/02/17/aspnetmvc-ironruby-with-filters.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In a previous post I explained what I had done I explained how I found an entry point and how to get started building your own mvc framework on top of asp.net MVC.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://flanders.co.nz/2009/01/25/created-a-basic-integration-for-ironruby-and-aspnet-mvc/&quot;&gt;http://flanders.co.nz/2009/01/25/created-a-basic-integration-for-ironruby-and-aspnet-mvc/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How far am I now since my last post? Well we’ve got action filters, result filters, exception filters and authorization filters. We have an IronRubyMvcApplication as a base HttpApplication. Which should get you pretty far when building apps with &lt;a href=&quot;http://github.com/casualjim/ironrubymvc&quot;&gt;IronRuby MVC&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’m currently looking at implementing selectors and aliased actions. When I’m done with that I guess I’ve got a fairly working implementation of asp.net MVC and I’ll start developing a sample with it.&lt;/p&gt;

&lt;p&gt;I’ve actually started building the sample to find out if I’ve missed something. The sample will be using &lt;a href=&quot;http://www.mindscape.co.nz/products/LightSpeed/default.aspx&quot;&gt;LightSpeed&lt;/a&gt;, &lt;a href=&quot;http://github.com/jschementi/ironrubymvc&quot;&gt;IronRubyMVC&lt;/a&gt; as well as youtube and flickr.&lt;/p&gt;

&lt;p&gt;I would love to hear from people that submit bugs or even patches. I’d also like to get some discussion going on what is going to happen to it in the future :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fflanders.co.nz%2f2009%2f03%2f09%2fironruby-mvc-progress%2f&quot;&gt;&lt;img src=&quot;http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fflanders.co.nz%2f2009%2f03%2f09%2fironruby-mvc-progress%2f&quot; alt=&quot;kick it on DotNetKicks.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2009-03-09 19:18:22 +0100</published>
        <link>http://flanders.co.nz/2009/03/09/ironruby-mvc-progress/</link>
      </item>
      
    
      
      <item>
        <title>Attending TechDays Belgium 2009</title>
        <description>&lt;p&gt;On march 11 and 12 this year there will be &lt;a href=&quot;http://www.microsoft.com/belux/techdays/about.aspx&quot;&gt;TechDays Belgium&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m personally looking forward to the event because I will get to meet Laurent Bugnion in person.  I&amp;#8217;ve been following him on twitter for over a year now and it would be cool to finally put a face (apart from the avatar) to the author :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.microsoft.com/belux/techdays/about.aspx&quot;&gt;&lt;img src=&quot;http://www.microsoft.com/belux/techdays/img/toolkit/480x325ani.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are some really interesting sessions there. At least they are for me, mostly towards silverlight and WPF development.  I&amp;#8217;m mostly doing WPF dev work at the moment. Silverlight is just something that interests me naturally. I started development by writing code in flash and animating 3D generated models. I turned away from flash because of the dev tools support and fully went into .NET after that.  I was stoked to learn about silverlight and I even like the tools it has to design interfaces with, but of course I&amp;#8217;m not a designer so I minimize the time spent in there and hope for somebody to come along and make it look good.   I love javascript but css not that much and my velocity is higher in Silverlight to develop the complexer kind of UI so I&amp;#8217;m also very interested in the Silverlight stuff.&lt;/p&gt;

&lt;p&gt;Maybe it&amp;#8217;s harder for me to get excited about the new language features of C# 4.0 as for me there aren&amp;#8217;t that many new features to me although for the c# language the features are huge. Variance is something I&amp;#8217;ve been waiting for since the introduction of generics, for dynamic typing I can get my fix with IronRuby of course. I rarely do COM interop but it will be nice if it gets better support for that. Named parameters however are new and pretty interesting to me. While it will be a hard sell for me to introduce IronRuby into client work. I can still do lots of tricks with the dynamic typing support in C#4 which is pretty cool too.
I&amp;#8217;ve got my ticket have you got yours?&lt;/p&gt;

&lt;p&gt;If you&amp;#8217;re going too let me know so we can catch up for a beer.&lt;/p&gt;

&lt;p&gt;See you there :)&lt;/p&gt;
</description>
        <published>2009-03-03 00:05:25 +0100</published>
        <link>http://flanders.co.nz/2009/03/03/attending-techdays-belgium-2009/</link>
      </item>
      
    
      
      <item>
        <title>Ruby </title>
        <description>&lt;p&gt;2 weeks ago I had the chance to &lt;a href=&quot;http://flanders.co.nz/2009/01/25/participating-in-the-italian-altnet-user-group/&quot;&gt;talk to the Italian Alt.NET community about IronRuby&lt;/a&gt;. I&amp;#8217;m pretty excited about the Ruby language and I try to convey that enthusiasm onto my victims. From the talks I had afterwards it looks like I was able to infect at least one or two enough to make them go home and download IronRuby to have a play. It is the very first time that I get to see one of my presentations myself because this one got taped and put online.&lt;/p&gt;

&lt;p&gt;If there is one thing that watching this video has taught me then it will probably be that I need more practice and to prepare a lot better. Since I&amp;#8217;m a kid I have the habit of walking into things hugely underprepared. I take the big bullet points of what I&amp;#8217;m supposed to say and make a story around it when I start talking.  It was my belief that those things feel more natural. After having watched this presentation I may have to come back on my point of view and probably prepare better. I don&amp;#8217;t believe that learning everything you&amp;#8217;re going to say by heart is a good solution either because if you then forget one thing you&amp;#8217;re completely lost in your storyline and you may freeze.&lt;/p&gt;

&lt;p&gt;I guess it would probably be a good idea for me to get a video camera and tape a few practice runs of presentations so that I can improve and look way more professional next time I get on a stage.  That being said I really enjoy doing those things. The good thing about doing those sessions is that I get to talk to many interesting people about subjects close and dear to me.&lt;/p&gt;

&lt;p&gt;Anyway you&amp;#8217;re probably not waiting for me to completely dissect my performance so instead I&amp;#8217;ll leave you with the &lt;a href=&quot;http://vimeo.com/3059773&quot;&gt;link to the video&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2009-02-05 08:00:19 +0100</published>
        <link>http://flanders.co.nz/2009/02/05/ruby/</link>
      </item>
      
    
      
      <item>
        <title>Created a basic integration for IronRuby and Asp.NET MVC</title>
        <description>&lt;p&gt;As I can see the end of the chapter on Rails and I&amp;#8217;m looking ahead to see what will be next. I decided to start working on the chapter that talks about using IronRuby with Asp.NET MVC next.  &lt;a href=&quot;http://blog.jimmy.schementi.com/&quot;&gt;Jimmy Schementi&lt;/a&gt; and &lt;a href=&quot;http://haacked.com/&quot;&gt;Phil Haack&lt;/a&gt; created a proof of concept implementation a couple of months ago that actually did work.
The past weekend I&amp;#8217;ve been looking to build on the excellent work they did and to build a more complete integration. In this post I&amp;#8217;ll try to explain what I did to make it work.  The integration work is far from complete, so if you&amp;#8217;ve got some free time on your hands and you happen to be looking for an Open Source project to help with then this could be a candidate for you :).&lt;/p&gt;

&lt;h3&gt;Finding a place to start&lt;/h3&gt;

&lt;p&gt;Let me start off by saying that I&amp;#8217;m pretty happy with the internals of the asp.net mvc framework. The code was easy to read given that you start in the correct file and work your way through much in the same way a request would be executed. In my case I started at the MVC handler and immediately you see one of the classes that we&amp;#8217;ll definitely need to customize. The &lt;em&gt;RubyControllerFactory&lt;/em&gt; is the class in question and it needs to be customized because we&amp;#8217;re going to use a &lt;em&gt;RubyController&lt;/em&gt;.
ASP.NET MVC internally uses reflection to do its magic. In the futures project they have a couple of other implementations like async with reflection and so on. I decided to use the classes prefixed as Reflected as my guide for creating my own integration they were probably the simplest implementation of the class.
I kept the view engine Jimmy and Phil created and focussed on the controllers. Working with the DLR API&amp;#8217;s requires a bunch of classes and&lt;/p&gt;

&lt;h3&gt;Sweet now what does this mean in terms of IronRuby integration?&lt;/h3&gt;

&lt;p&gt;To limit some of the work I needed to be doing I decided that Ruby controller actions don&amp;#8217;t take any parameters we can bind to instead you will have to rely on the data that&amp;#8217;s available in the params hash to get to the input delivered by the request. Actually I made a decision to keep that from the POC implementation before.&lt;br/&gt;
In ASP.NET MVC there is a &lt;em&gt;ReflectedControllerDescriptor&lt;/em&gt; and a &lt;em&gt;ReflectedActionDescriptor&lt;/em&gt;. They are used to cache the information we need so it only has to perform the costly operations once, which is a good strategy IMHO.
For IronRuby that means we&amp;#8217;ll need to create a &lt;em&gt;RubyControllerDescriptor&lt;/em&gt; and &lt;em&gt;RubyActionDescriptor&lt;/em&gt;. The last class we&amp;#8217;ll going to need to customize in this exercise is the &lt;em&gt;ControllerActionInvoker&lt;/em&gt; which as the name hints at: invokes actions on your controller :)
For people that have been doing rails applications, you&amp;#8217;re not limited to Rails now. You could use Ruby but leverage the ASP.NET MVC infrastructure for implementing a mvc web app. When somebody would create the adapters for activerecord to leverage ADO.NET to talk to data sources you should be able to just use active record that comes with the rails framework in your app as models. The view engine in ironrubymvc is also erb based so I&amp;#8217;d imagine you would be able to just copy your view code in and making sure that you have replacement helpers if you&amp;#8217;ve used helpers.
Working on this code also opens up the question if it isn&amp;#8217;t possible to actually run rails via a similar mechanism&amp;#8230; mmm must investigate&lt;/p&gt;

&lt;h3&gt;Where can I find it?&lt;/h3&gt;

&lt;p&gt;I forked the git repository from &lt;a href=&quot;http://github.com/jschementi/ironrubymvc&quot;&gt;Jimmy Schementi&lt;/a&gt;. And I do send him pull requests when I&amp;#8217;ve pushed some changes. So you could potentially pick that repository to work out of. The disadvantage is that you won&amp;#8217;t pick up changes I make immediately. The good thing is that Jimmy&amp;#8217;s repo is probably a good place to follow because he can also take work that Phil did and add it to the repo. I will then have to sync my version with his.
Or you could use &lt;a href=&quot;http://github.com/casualjim/ironrubymvc&quot;&gt;my repo&lt;/a&gt; and pick up the changes I make immediately but you&amp;#8217;ll have to wait to merge it with the changes that have been applied into Jimmy&amp;#8217;s repo until I get around to merging that into mine.
I&amp;#8217;d say that over time it would probably be a better idea to get the repo from Jimmy while mine will be very active but just for a short period of time, when I&amp;#8217;m happy with it I&amp;#8217;ll move on.&lt;/p&gt;

&lt;h3&gt;What&amp;#8217;s left to do?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Implement action filters (before/after)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Implement authorization filters&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Implement an HttpApplicationBase class that will create the script runtime&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Implement a HttpModule that will take care of creating a RubyEngine object&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#8230;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For today I&amp;#8217;d say &lt;strong&gt;&lt;em&gt;go_to(&amp;#8220;http://github.com/casualjim/ironrubymvc&amp;#8221;).play.create.have_fun&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When my work stabilizes a little bit more I&amp;#8217;ll write a blog post explaining how I went about using the DLR hosting API&amp;#8217;s to host IronRuby in an ASP.NET application and how the implemenation of IronRubyMvc was put together.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fflanders.co.nz%2f2009%2f01%2f25%2fcreated-a-basic-integration-for-ironruby-and-aspnet-mvc%2f&quot;&gt;&lt;img src=&quot;http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fflanders.co.nz%2f2009%2f01%2f25%2fcreated-a-basic-integration-for-ironruby-and-aspnet-mvc%2f&quot; alt=&quot;kick it on DotNetKicks.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2009-01-25 14:42:13 +0100</published>
        <link>http://flanders.co.nz/2009/01/25/created-a-basic-integration-for-ironruby-and-aspnet-mvc/</link>
      </item>
      
    
      
      <item>
        <title>Participating in the Italian Alt.NET user group</title>
        <description>&lt;p&gt;I just finished my talk at the Italian &lt;a href=&quot;http://ugialt.net&quot;&gt;Alt.NET conference&lt;/a&gt;.
There were the following topics of discussion:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Domain Driven Design&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;User stories &amp;amp; planning game&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Advanced Unit Testing in the real world&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Acceptance testing (Fitness)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;And of course my topic was &lt;a href=&quot;http://ironruby.net&quot;&gt;IronRuby&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Because of the level of my italian or better yet the lack thereof I couldn&amp;#8217;t participate in many of the discussions. IMHO that was a pitty because I actually do like having discussions about programming and designing applications.&lt;/p&gt;

&lt;p&gt;My talk went alright judging by the reactions of the people that listened to my talk. &lt;a href=&quot;http://codeclimber.net.nz&quot;&gt;Simone&lt;/a&gt; filmed the whole day and told me he would put up the videos on vimeo for all to see.
What I thought was particularly good for IronRuby is that there definitely interest in for using IronRuby. The most obvious places for people to start using ruby are RSpec (when it works OTB) and rake as a replacement for nant or msbuild scripts.  Of course if you ask me then there are plenty of other reasons to use IronRuby like Silverlight and WPF.&lt;/p&gt;

&lt;p&gt;For the people that are interested in my presentation you can download it from &lt;a href=&quot;http://ugialtnet3.googlecode.com/svn/trunk/ironruby/Ruby_loves_dotNet.pptx&quot;&gt;google code&lt;/a&gt;. Most of the code that I&amp;#8217;ve showed is included in the presentation as notes.
All in all I had a great time and I hope the italian community will invite me again some time :). Italy has the benefit that they have great food and wine and that makes it very easy to convince me to take the plane :)&lt;/p&gt;

&lt;p&gt;I couldn&amp;#8217;t show everything because I got carried away at one point and lost track of time. So I had to drop my demo&amp;#8217;s about using bacon (as a replacement for RSpec) to start writing specs for your .NET code today. I also wanted to show some of the stuff &lt;a href=&quot;http://blog.jimmy.schementi.com/&quot;&gt;Jimmy Schementi&lt;/a&gt; did with &lt;a href=&quot;http://silverlight.net&quot;&gt;Silverlight&lt;/a&gt; and &lt;a href=&quot;http://ironruby.net&quot;&gt;IronRuby&lt;/a&gt;. Like &lt;a href=&quot;http://github.com/jschementi/agdlr&quot;&gt;agdlr&lt;/a&gt; and the integration for &lt;a href=&quot;http://rubyonrails.org&quot;&gt;Ruby on Rails&lt;/a&gt; he created with the &lt;a href=&quot;http://github.com/jschementi/silverline&quot;&gt;silverline plugin&lt;/a&gt;.  But unfortunately I ran out of time before I could show off some of those things.&lt;/p&gt;

&lt;p&gt;I had the opportunity to talk to the Italian member of the Mono team, &lt;a href=&quot;http://primates.ximian.com/~massi/blog/&quot;&gt;Massimiliano Mantione&lt;/a&gt;. And this is what I love about conferences, they are full of interesting people with all kind of ideas. When I go to an event like TechEd or something I generally don&amp;#8217;t actually attend many sessions because most of that content is available online anyway. Instead I will roam the hallways etc in search of good conversations and intersting people.  Meeting the member of the mono team made me slightly envious because he&amp;#8217;s doing what I would love to be doing too :) He&amp;#8217;s working from home and getting paid to work on FOSS. He mentioned some intersting stuff the mono guys are doing and explained from a high level how they got the C# eval to work.&lt;/p&gt;

&lt;p&gt;Some other notable facts about how they did the conference, which I liked a lot. The conference is free to attend, but they did have the possibility to accept donations. It were those donations that paid for my flight over here :). The way they organized the conference was in an Open Spaces format which is very open for discussion and they were completely transparent as to how the money had been spent. They still had some money left and donated that to an open source project. The open source project was chosen through voting.&lt;/p&gt;

&lt;p&gt;The open source projects on the list of possibilities were:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://castleproject.org&quot;&gt;Castle/Monorail&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://ayende.com/projects/rhino-mocks.aspx&quot;&gt;Rhino.Mocks&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://ninject.org&quot;&gt;Ninject&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://dev.dejardin.org/&quot;&gt;Spark View Engine&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.gallio.org/&quot;&gt;MbUnit/Gallio&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In the end it was Rhino.Mocks that won the vote and they have received the donation.&lt;/p&gt;

&lt;p&gt;I would like to thank the organizers of the conference for having me and the people that followed my talk for not falling asleep.&lt;/p&gt;
</description>
        <published>2009-01-25 12:42:13 +0100</published>
        <link>http://flanders.co.nz/2009/01/25/participating-in-the-italian-altnet-user-group/</link>
      </item>
      
    
      
      <item>
        <title>A new year&#8230; some changes</title>
        <description>&lt;p&gt;With 2009 starting, started actually, it might be time to look ahead at what&amp;#8217;s to come this year.&lt;/p&gt;

&lt;p&gt;I hope your holidays were better than mine with my grandfather dying on Christmas eve, I wasn&amp;#8217;t in much of a celebratory mood this year.&lt;/p&gt;

&lt;p&gt;After having tried being a consultant for a while I have a serious hang-over from enterprise style of development. At least the dev style that only listens to what microsoft has to say and swears by their judgment under the motto: &amp;#8220;You don&amp;#8217;t get fired for buying Microsoft&amp;#8221;. As if it wasn&amp;#8217;t bad enough all the CRUD went through stored procs over linq-2-sql. When somebody there told me to copy/paste instead of taking a little bit more care I made up my mind and left the place. This leaves me at the start of this year without a project/job, and as it looks now it might not be the best position to be in with the crisis and all.&lt;/p&gt;

&lt;p&gt;Another area that I desperately need to make some progress in is the &lt;a href=&quot;http://manning.com/carrero&quot;&gt;IronRuby in Action&lt;/a&gt; book. So far I have 4 chapters completed and the one on Rails is about half-way there. Because I&amp;#8217;m not making as much progress as I initially thought. This partly because I decided to turn my life&lt;a href=&quot;http://flanders.co.nz/2008/07/13/moving-back-to-belgium/&quot;&gt; upside down&lt;/a&gt; this year.
Now that I&amp;#8217;ve finally found a good place to live and my personal life isn&amp;#8217;t as messy as it used to be I&amp;#8217;ve returned to writing.&lt;/p&gt;

&lt;p&gt;More news on the IronRuby in Action front is that I&amp;#8217;ve got a co-author now. His name is &lt;a href=&quot;http://blog.prokrams.com/&quot;&gt;Michael Letterle&lt;/a&gt; and he has contributed to the IronRuby project.  Michael is very passionate about Ruby development and is currently working on the Silverlight chapter of the IronRuby in Action book.&lt;/p&gt;

&lt;p&gt;As part of the Chapter on Rails I&amp;#8217;ve built a twitter clone. In the wpf chapter I created a twitter client and to be ensure things continue to work both offline as online it seemed like a good idea to me to create the server side too.  The last couple of days I&amp;#8217;ve been implementing this limited version and you can find it at &lt;a href=&quot;http://codeplex.com/mocktwitter&quot;&gt;http://codeplex.com/mocktwitter&lt;/a&gt;. Finishing this application is on my to-do list for this year for now it does a little bit more than it needs to for the samples from the WPF chapter to work.&lt;/p&gt;

&lt;p&gt;More on the IronRuby subject. I&amp;#8217;ve also created a DBI layer for ADO.NET that you can use in conjection with IronRuby to talk to ADO.NET data sources. I don&amp;#8217;t know yet if I will base my activerecord adapters on this DBI layer or just with the providers immediately. I put a &lt;a href=&quot;http://rubydoes.net/2009/01/06/ironruby-dbi-connecting-to-adonet-datasources/&quot;&gt;post up&lt;/a&gt; on how to get started and where to get the sources etc on &lt;a href=&quot;http://rubydoes.net&quot;&gt;rubydoes.net&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I intend to spend some time on &lt;a href=&quot;http://github.com/jschementi/agdlr&quot;&gt;agdlr&lt;/a&gt; as well as on &lt;a href=&quot;http://github.com/casualjim/ironnails&quot;&gt;ironnails&lt;/a&gt; as well because ironnails has been a lot of fun to develop.&lt;/p&gt;
</description>
        <published>2009-01-06 19:46:37 +0100</published>
        <link>http://flanders.co.nz/2009/01/06/a-new-year-some-changes/</link>
      </item>
      
    
      
      <item>
        <title>Building IronRuby with Mono on OSX</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt; This is a duplicate post of &lt;a href=&quot;http://rubydoes.net/2008/12/30/building-ironruby-with-mono/&quot;&gt;http://rubydoes.net/2008/12/30/building-ironruby-with-mono/&lt;/a&gt; &lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;IronRuby comes in 2 flavours of SCM and apparently also with 2 flavours of project layout.&lt;/p&gt;

&lt;p&gt;I spend most of my time on the mac and I wanted to be able to test ironruby stuff on it too. I tried to build IronRuby on my mac which doesn’t work straight away you have to patch it a little to make it work.&lt;/p&gt;

&lt;p&gt;If you’re using the svn version then you can use the &lt;a href=&quot;http://sparcs.kaist.ac.kr/~tinuviel/download/IronRuby/&quot;&gt;patch&lt;/a&gt; created by Seo Sanghyeon.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.prokrams.com/&quot;&gt;Michael Letterle&lt;/a&gt; has forked the ironruby git repository and created a branch called &lt;strong&gt;linux&lt;/strong&gt;. You can find it on &lt;a href=&quot;http://github.com/TheProkrammer/ironruby&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For me the linux branch didn’t want to work and so I forked the ironruby repository too, created a branch called &lt;strong&gt;mono&lt;/strong&gt;. My version is also up on &lt;a href=&quot;http://github.com/casualjim/ironruby&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you’re going to use the git layout of IronRuby, which is practically the same as what the IronRuby team uses at Microsoft. You’ll have to set an environment variable &lt;em&gt;MERLIN_ROOT&lt;/em&gt; . I use a .bashrc file and added the following line to it:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;export MERLIN_ROOT=’/Users/ivan/src/ironruby/merlin/main’&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now how do you get to those git branches?&lt;/p&gt;

&lt;p&gt;Start a terminal session.&lt;/p&gt;

&lt;p&gt;I have a directory src in which i download and compile sources. So I navigated into that directory src.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;sh&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;src
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;git clone git://github.com/casualjim/ironruby.git
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ironruby
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;git checkout -b mono
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;git pull origin mono
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Compiling IronRuby&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;sh&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;merlin/main/Languages/Ruby
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;rake compile &lt;span class=&quot;nv&quot;&gt;mono&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Update:&lt;/p&gt;

&lt;p&gt;You will also need a version of ruby installed, rake and the pathname2 gem&lt;/p&gt;

&lt;p&gt;It won&amp;#8217;t work with the latest release of mono. I&amp;#8217;m using the trunk version of mono to build ironruby.
I&amp;#8217;ve got instructions that could show you how to compile mono &lt;a href=&quot;http://flanders.co.nz/2008/02/05/compiling-mono-and-ironruby-on-osx-leopard/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <published>2008-12-30 15:01:59 +0100</published>
        <link>http://flanders.co.nz/2008/12/30/building-ironruby-with-mono-on-osx/</link>
      </item>
      
    
      
      <item>
        <title>Beating a dead horse: Stored Procedures</title>
        <description>&lt;p&gt;I seem to be having the same conversations with the dev teams whenever I switch clients. The topic of this post is one that many people have written about before. I&amp;#8217;m just going to put my opinion on my blog so I can refer people to it in the future instead of having to repeat myself every time.
What prompted this post is that since I&amp;#8217;ve moved to Belgium I&amp;#8217;ve had to take a step back from living on the bleeding edge and using open source projects. Most of the work is concentrated in Brussels and is at big corporates or banks not exactly what you&amp;#8217;d see as the progressive thinkers (with reason).
I guess it would be safe to say that I&amp;#8217;ve been immersed in &amp;#8220;enterprise&amp;#8221; development. In short I still haven&amp;#8217;t seen anything that is more complicated than a web app like &lt;a href=&quot;http://www.xero.com&quot;&gt;Xero&lt;/a&gt;. But perhaps more about that in another post. This one is about stored procedures and their valid uses.&lt;/p&gt;

&lt;p&gt;My current client is pretty interested in the newer technologies (anything that is out of beta) and how to put them into production.  As such they use LINQ as their data layer. They follow the classic MS guidance of data logic, business logic and - the trigger for this post - stored procedures to encapsulate all the data access.
People that have worked with me in the past will be able to vouch for the fact that I feel strongly against stored procedures. But before we get to why I don&amp;#8217;t want to use them, let&amp;#8217;s look at some of the reasons people have given me in the past why they were using them.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Performance. Because stored procedures are (pre)compiled&lt;/li&gt;
&lt;li&gt;Security. They can lock down tables from being accessed by users directly but they can get to the database through the stored procedures layer&lt;/li&gt;
&lt;li&gt;Maintenance. You can change a stored procedure more easily than deploying a new build of your application because no compilation is needed.&lt;/li&gt;
&lt;li&gt;Less data to send over the wire because stored procedures can execute more sql statements at once.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All of that stuff sounds pretty great right? As I&amp;#8217;ve said before my current client has developed their data layer in their framework using Linq2Sql. I think Linq2Sql is not too bad, at least it gets the corporates into an ORM mindset because it comes from MS which makes it a vastly easier technology to sell than NHibernate for example.
But when you&amp;#8217;re going to use Linq in conjunction with stored procedures for basic CRUD operations I think you&amp;#8217;re kind of missing the whole point of Linq2Sql or ORM&amp;#8217;s altogether for that matter. So there you have it, this is why I cannot resist posting about this subject although many people have said pretty much the same as I&amp;#8217;m going to say in this post.&lt;/p&gt;

&lt;h3&gt;Credit where credit is due&lt;/h3&gt;

&lt;p&gt;The list of people below have helped me in forming my opinion on this subject. I&amp;#8217;ve had the pleasure of having lengthy discussion on this topic with the first 3 people on the list. I consider the people on this list to be authorities in .NET development and 4 of them have written their own ORM in the past. Alex James and Andrew Peters now both work on the Entity Framework team.
* &lt;a href=&quot;http://blogs.msdn.com/alexj&quot;&gt;Alex James&lt;/a&gt;
* &lt;a href=&quot;http://andrewpeters.net&quot;&gt;Andrew Peters&lt;/a&gt;
* &lt;a href=&quot;http://turtle.net.nz&quot;&gt;Jeremy Boyd&lt;/a&gt;
* &lt;a href=&quot;http://weblogs.asp.net/fbouma&quot;&gt;Frans Bouma&lt;/a&gt;
* &lt;a href=&quot;http://ayende.com/Blog&quot;&gt;Ayende (Oren Eini)&lt;/a&gt;
* &lt;a href=&quot;http://codebetter.com/jmiller&quot;&gt;Jeremy D. Miller&lt;/a&gt;
* &lt;a href=&quot;http://codinghorror.com&quot;&gt;Jeff Atwood&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s look at the reasons mentioned above and work our way through them seeing how they pan out in the end and you can draw your own conclusions on the matter.&lt;/p&gt;

&lt;h3&gt;Performance&lt;/h3&gt;

&lt;h4&gt;Stored procedures are precompiled&lt;/h4&gt;

&lt;p&gt;The fact that stored procedures are precompiled and dynamic queries aren&amp;#8217;t is a complete myth. Ever since Sql Server 7.0 the query plans are cached for both of them. If you change a parameter in a stored procedure it has to be recompiled too.You can check the Sql documentation to verify that.
IMHO this also falls in the category premature optimizations. It could be that you have a query that is so complex or that is a real bottleneck for your application then it might be worth it to invest the time and write a stored procedure for it that queries the database differently and as such get rid of the bottle neck but take on a higher maintenance cost.&lt;/p&gt;

&lt;h4&gt;Batching of queries and returning multiple result sets&lt;/h4&gt;

&lt;p&gt;Another argument people often bring to the table is that in a stored procedure I can issue many sql statements on the same database connection. I hate to break the news to you but you get the same benefits when you&amp;#8217;re using dynamic sql (preferably the parameterized kind). You could issue one command that returns multiple result sets just like the body of your stored procedure. Or you could issue more than one command on the same connection and still get a very similar result.&lt;/p&gt;

&lt;h3&gt;Security&lt;/h3&gt;

&lt;h4&gt;Sql Injection attacks&lt;/h4&gt;

&lt;p&gt;Another argument I keep hearing is the fact that when you build dynamic sql statements you open yourself up for sql injection attacks which isn&amp;#8217;t that case for stored procedures.
There is some truth in that but it definitely isn&amp;#8217;t the whole truth. What they mean by that is that if you&amp;#8217;re going to build your dynamic query by concatenating strings then you could indeed open yourself up to a sql injection attack but I&amp;#8217;ve seen this happen in stored procedures too it&amp;#8217;s just a little bit harder to do it there.
However if you build your sql statement by using a parameterized query you get the same security benefits as a stored procedure would give you.&lt;/p&gt;

&lt;h4&gt;Different permissions on tables and stored procedures&lt;/h4&gt;

&lt;p&gt;This isn&amp;#8217;t such a big problem. I&amp;#8217;ve mostly seen people use one dedicated user to access the database. Lots of times there is a SOA like architecture that allows the client application to not even know what type of database it&amp;#8217;s connecting too.  I haven&amp;#8217;t seen many places yet where they actually implement security that is that strict.
So the reasoning goes if you secure your application properly then this shouldn&amp;#8217;t be a big problem.
Ayende has a more elaborate post on the subject: &lt;a href=&quot;http://ayende.com/Blog/archive/2006/04/05/StoredProceduresForSecurity.aspx&quot;&gt;Stored Procedures for Security&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Maintenance&lt;/h3&gt;

&lt;p&gt;This is probably a very ambiguous problem. From a development point of view this might probably be the worst argument in favor for stored procedures. However if you look at it from the POV of the enterprise it might actually hold some value.
At my current client all the applications have to be distributed by a separate team, and that makes the deployment a costly scenario.
That is because once your application goes into production and something small needs to change the deployment team has to go around and deploy that application again on every workstation in the company. I know about click-once but nobody has any rights to install anything on their pc which makes that pretty hard to do.
Now from my POV this is the most invalid argument of all of them because of the maintenance overhead it adds.
When you give stored procs to a developer they see shiny quick shortcuts to quickly get some data out and perhaps already transform some of that data in their query. That is all good the first time you have to deploy the application. But the next person needs to add a column to a table and suddenly he will have to go through all the stored procedures (at least 3 of them for the C,R and D of CRUD) to add the column. Then he has to go in the data layer of your n-tiered application and modify the entity and perhaps the methods that map to the stored procedures.  Then comes time to deploy and you forgot to modify your update script with that one column you added to a stored proc. Of course this stored proc is the one that saves one of the core entities of your application and suddenly the new release is throwing errors all over the place.
I skipped the part of transforming some data. As &lt;a href=&quot;http://flanders.co.nz&quot;&gt;my previous post&lt;/a&gt; suggests: that stuff is business logic and doesn&amp;#8217;t belong in a stored procedure.&lt;/p&gt;

&lt;h3&gt;Some more reading on the subject&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Jeff Atwood claiming that T-SQL is the assembly language of contemporary development.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;a href=&quot;http://www.codinghorror.com/blog/archives/000117.html&quot;&gt;Who Needs Stored Procedures, Anyways?&lt;/a&gt;
* Frans Bouma explaining his point of view:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://weblogs.asp.net/fbouma/archive/2003/11/18/38178.aspx&quot;&gt;Stored procedures are bad, m&amp;#8217;kay?&lt;/a&gt;
* Jeremy Miller swearing this is really going to be his last post on stored procedures:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://codebetter.com/blogs/jeremy.miller/archive/2006/05/25/145450.aspx&quot;&gt;Why I do not use Stored Procedures&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2008-10-23 20:37:23 +0200</published>
        <link>http://flanders.co.nz/2008/10/23/beating-a-dead-horse-stored-procedures/</link>
      </item>
      
    
      
      <item>
        <title>If you ever wanted to play fur elise in the console</title>
        <description>&lt;p&gt;At work today we were playing around with the console.. here&amp;#8217;s one of our experiments whilst creating a stoplight workflow (WF).&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;31&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;32&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;33&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;34&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;35&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;36&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;37&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;38&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FurElise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;420&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;420&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;420&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;315&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;370&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;335&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;282&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;215&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;282&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;315&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;213&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;262&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;315&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;335&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;213&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;420&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;420&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;420&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;315&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;370&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;335&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;282&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;215&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;282&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;315&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;213&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;330&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;315&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Beep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;282&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;



</description>
        <published>2008-10-22 14:08:53 +0200</published>
        <link>http://flanders.co.nz/2008/10/22/if-you-ever-wanted-to-play-fur-elise-in-the-console/</link>
      </item>
      
    
      
      <item>
        <title>Common mistakes in software development (part 2): Mixing up the layers</title>
        <description>&lt;p&gt;In my &lt;a href=&quot;http://flanders.co.nz/2008/09/24/common-mistakes-in-software-development/&quot;&gt;previous post&lt;/a&gt; I explained some very quick wins to make your code a little bit cleaner. As I&amp;#8217;ve been appointed an &lt;a href=&quot;http://www.asp.net&quot;&gt;asp.net&lt;/a&gt; project at work at the moment I have the chance to get more ammunition for blogging :).
This time I&amp;#8217;d like to talk about properly separating your tiers so that the next person doesn&amp;#8217;t have to go through the complete application and make changes everywhere just to make a minor change to the application.&lt;/p&gt;

&lt;p&gt;One  of the problems; one of the most time consuming that is; I&amp;#8217;ve seen is that people are confused on what they have to put in the data logic layer and what is business logic. In my case this is fairly extreme because there isn&amp;#8217;t an ORM tool but rather every entity gets populated by calling a stored procedure and then in the code the graph objects get set. Whether this is a good approach for fetching your data or not is not within the scope of this blog post, but I&amp;#8217;m guessing there are more people who are facing this type of situation.&lt;/p&gt;

&lt;p&gt;Anyway let&amp;#8217;s start with the beginning and explain the typical &lt;a href=&quot;http://en.wikipedia.org/wiki/N-tier&quot;&gt;n-tier architecture&lt;/a&gt; people seem to follow. This is not a particular pattern like &lt;a href=&quot;http://en.wikipedia.org/wiki/Model-view-controller&quot;&gt;MVC&lt;/a&gt; or &lt;a href=&quot;http://en.wikipedia.org/wiki/Model-view-presenter&quot;&gt;MVP&lt;/a&gt; that people are talking about so much lately. This goes back to the guidance that can be found on the &lt;a href=&quot;http://msdn.microsoft.com&quot;&gt;msdn website&lt;/a&gt;.  This type of architecture is often used in combination with data sets but not in my example for this post. This architecture is generally divided in 3 parts that can, but don&amp;#8217;t have to, run on different machines if needs be.  When talking about this type of architecture people mostly talk about an n-tier application.&lt;/p&gt;

&lt;h2&gt;The first part is the data layer.&lt;/h2&gt;

&lt;p&gt;The golden rule for this one: this is the gateway between the rest of your application and the database. &lt;strong&gt;NONE&lt;/strong&gt; of the other layers should be talking directly to the database but instead should be doing their talking through this layer.  That means if you have stored procedures you provide wrappers for them in this layer. You populate your entities in this layer too.
Other functions you can perform in this layer is setting the graph members (populating relationships). IMHO if you&amp;#8217;re talking to the database (open/close connection) you&amp;#8217;re doing stuff that belongs in the data layer which includes populating relationships.&lt;/p&gt;

&lt;p&gt;Encapsulating this logic in it&amp;#8217;s own layer, which could potentially be walled off through only exposing it with remoting or WCF, allows you to reuse the code in different places of your applications or sharing this data access assembly with multiple applications.&lt;/p&gt;

&lt;h2&gt;The second part is the business logic layer.&lt;/h2&gt;

&lt;p&gt;This layer encapsulates all the operations you do on entities to express the business rules. That means you would probably do most of your work in this layer. Basically &lt;strong&gt;all&lt;/strong&gt; of the programming you will be doing for the business rules should be done here. Business logic doesn&amp;#8217;t live in stored procedures, it doesn&amp;#8217;t live in the UI or the data layer. Nope this layer is where it lives and nowhere else.  This statement may raise some eyebrows but only and only when you find that a certain routine is a bottleneck and it is really data intensive you can put it in a stored procedure but more on that subject in another blog post.
If you find yourself transforming data so you can display it in your GUI then you&amp;#8217;re probably expressing business rules that aren&amp;#8217;t explicitly stated as a business rule.
When you find yourself to be concatenating strings or writing logic to translate your pages in your GUI layer then you&amp;#8217;re probably expressing business logic (business logic doesn&amp;#8217;t have to come from business ;) in case that wasn&amp;#8217;t clear).
Another common find in business logic is validation for example because this generally expresses some kind of strict rule that comes from the business domain your application deals with. Validation is a tricky one but the rule is you should do &lt;strong&gt;all&lt;/strong&gt; validation in your business logic. To provide a better user experience you can maybe reuse that validation on the client side. In the case of web development you probably will have to duplicate that validation in javascript if you really need it.&lt;/p&gt;

&lt;p&gt;Separating these rules into their own layer allows you to reuse the methods and classes you create in the business logic layer, in different parts of your UI or even reuse it in different applications.
By separating this logic it should be easier for you to do some automated testing like unit testing and/or integration testing of that code.&lt;/p&gt;

&lt;h2&gt;The third and last layer&lt;/h2&gt;

&lt;p&gt;This is typically the UI layer but you could easily use web/WCF services as an interface to your logic. The UI doesn&amp;#8217;t have to be a GUI it can also be a CLI (Command-Line Interface) or something. But that is how you interact with the user or external application. The idea is that in this layer you have virtually no logic except for what&amp;#8217;s on the screen &lt;strong&gt;everything&lt;/strong&gt; else should be handled by your business logic. To clarify this statement: you can show/hide UI elements or add/remove elements to the UI and respond to events triggered by user actions but the data of that response and the processing really belongs in the business logic layer.&lt;/p&gt;

&lt;p&gt;The UI layer can talk to both the business logic and data logic layers. If for example you&amp;#8217;re getting a category list with just an id and name from the database chances are you won&amp;#8217;t need to transform that data so your UI can bind directly to the entities returned by your data layer. But more complex items like an invoice for example will probably need some processing and then it should probably pass through the business logic layer.&lt;/p&gt;

&lt;p&gt;This is typically a somewhat harder part of your application to provide tests for although there are some libraries out there that make it easier but still there are easier parts to test in your application.&lt;/p&gt;

&lt;p&gt;So that was a quick refresher on what the classic n-tier architecture is about an how it should be structured. I hope you will agree with me into stating that its not that hard and pretty straight-forward to implement, but what I find in the &amp;#8220;enterprise&amp;#8221; is far from the points mentioned above.
It is a bloody mix of everything everywhere, leaving me thinking -come on guys it&amp;#8217;s not that hard-:
&lt;em&gt;talking to the database =&gt; datalayer&lt;/em&gt;
&lt;em&gt;showing windows/adding UI elements,&amp;#8230; =&gt; UI layer&lt;/em&gt;
&lt;em&gt;everything else =&gt; business logic&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Failing to abide by the previous simple rules will result in hell freezing over, entire plagues will be released upon the world; to cut a long story short: the world as you know it will seize to exist and turn into complete chaos.
Following the rules should result in less code duplication, an instantaneously easier to maintain codebase and probably more happy successors for when you move on to the next project.  It should also give you a higher degree of code reuse.
If there is one thing you should take away from this article then it should be:
&lt;strong&gt;Don&amp;#8217;t mix your tiers&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Of course there are a couple of situations when you can diverge from the ideas presented in this post but you should always be able to justify why you break the rule. So you need a good reason to break the proposed architecture and that would probably also warrant a comment so the next guy also knows what&amp;#8217;s going on.
The most important part is to separate all non-UI logic out from the UI layer and put it in one of the lower layers.&lt;/p&gt;

&lt;p&gt;Thanks for reading
Ivan - writing for more maintainable software -&lt;/p&gt;
</description>
        <published>2008-10-01 05:10:54 +0200</published>
        <link>http://flanders.co.nz/2008/10/01/common-mistakes-in-software-development-part-2-mixing-up-the-tiers/</link>
      </item>
      
    
      
      <item>
        <title>Common mistakes in software development</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt; Rant Alert &lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;rant&gt;&lt;/p&gt;

&lt;p&gt;At my current client I&amp;#8217;ve got to do mainly maintenance on existing applications. This gives me the chance to look into codebases that have been created by other people and that don&amp;#8217;t really reflect how I would write things. That is all good though it gives me a chance to learn new ways of doing things and when I think their way is better I&amp;#8217;ll surely adopt.&lt;/p&gt;

&lt;p&gt;Anyway when I&amp;#8217;m browsing these codebases I do find a lot of things that could have been done better or more correctly and that&amp;#8217;s what I&amp;#8217;ll be writing about a little today.&lt;/p&gt;

&lt;p&gt;The first one is returning bools:&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve found this in just about every project I&amp;#8217;ve been in:&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IsNull&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;The snippet above is a very long winded way of writing. IMHO this hurts readability and you&amp;#8217;re saying the same thing twice. obj == null already returns a bool it makes no sense writing it again.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IsNull&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Another thing I keep seeing is very liberal use of try..catch blocks that catch all exceptions. Admittedly try..catch is cool but it should be used at times you are actually interested in the exception that is thrown. But it shouldn&amp;#8217;t be used as a safeguard to swallow exceptions you don&amp;#8217;t want to fix at this moment.  I keep seeing this code in projects:&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;myBLObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FindSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;someId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SomeMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;c1&quot;&gt;// Nothing to be done but error stops&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Now that can be easily written so that it won&amp;#8217;t throw an exeption and then the try catch isn&amp;#8217;t necessary anymore at all. Try..catch blocks most certainly have their use but throwing and catching exceptions definitely hurts performance because the system has to generate a complete stack trace etc. for every exception that is being thrown.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myBLObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FindSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;someId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SomeMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;The code becomes a lot more readable, not to mention faster. I&amp;#8217;ve seen this being used in OnRowDataBound events etc on grids with 500+ rows, removing the try catch blocks more than doubles the speed of that page.&lt;/p&gt;

&lt;p&gt;The next one on the list is using if,else and switch statements. They are sometimes a cause of code bloat. To put it in the words of &lt;a href=&quot;http://www.hanselman.com/blog/BackToBasicsLifeAfterIfForAndSwitchLikeADataStructuresReminder.aspx&quot;&gt;Scott Hanselman&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think that using only &lt;em&gt;if&lt;/em&gt;, &lt;em&gt;for &lt;/em&gt;and &lt;em&gt;switch &lt;/em&gt;is the Computer Programmer equivalent of using &amp;#8220;like&amp;#8221; in every sentence.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Scott does a great job explaining why they can be pretty evil so I&amp;#8217;ll just leave you with a &lt;a href=&quot;http://www.hanselman.com/blog/BackToBasicsLifeAfterIfForAndSwitchLikeADataStructuresReminder.aspx&quot;&gt;link&lt;/a&gt; to his post&lt;/p&gt;

&lt;p&gt;I have another couple of posts in the making on this subject but I had to get this out of my system. These are also very quick wins the other things I&amp;#8217;m going to talk about are application architecture and stored procs&amp;#8230;.
&lt;/rant&gt;&lt;/p&gt;
</description>
        <published>2008-09-24 11:31:44 +0200</published>
        <link>http://flanders.co.nz/2008/09/24/common-mistakes-in-software-development/</link>
      </item>
      
    
      
      <item>
        <title>White paper on IronRuby published</title>
        <description>&lt;p&gt;Manning published my white paper &amp;#8211; or green paper as they call it &amp;#8211; on IronRuby.&lt;/p&gt;

&lt;p&gt;You can find it here: &lt;a href=&quot;http://manning.com/free/green_carrero.html&quot;&gt;http://manning.com/free/green_carrero.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This paper tries to give you an introduction on what the ruby language is and how it could work for you. If you want to know more than what&amp;#8217;s on those pages there is always the book: &lt;a href=&quot;http://manning.com/carrero&quot;&gt;http://manning.com/carrero&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Technorati Tags: &lt;a href=&quot;http://technorati.com/tags/IronRuby&quot;&gt;IronRuby&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2008-08-26 06:14:15 +0200</published>
        <link>http://flanders.co.nz/2008/08/26/white-paper-on-ironruby-published/</link>
      </item>
      
    
      
      <item>
        <title>IronNails: Some progress</title>
        <description>&lt;p&gt;I thought it might be a good idea to update you guys on how IronNails is progressing. I think I&amp;#8217;ve got it so that you aren&amp;#8217;t exposed to writing many of the boring boilerplate code that comes with taking this approach (M - V - VM- C). Also to execute an action on a controller asynchronously you can by just adding :mode =&gt; :asynchronous to your view_action declaration.&lt;/p&gt;

&lt;p&gt;A lot is still left to do but this proves that it is possible to use IronRuby today to do some pretty cool stuff. From the top of my head here are some things that still need to be done:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The ability to load xaml from an assembly like the one that is generated when you use Blend for your design.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;More predefined behaviors&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Templated generators&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Silverlight support&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;But the core of the framework is working. Now it&amp;#8217;s a matter of extending the functionality. Some of the features the framework does support&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Binding to controller actions through commands&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Binding to controller actions through event handlers on the view proxy&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Asynchronous execution of actions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Timed execution of actions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Binding to models&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I will be developing my sample for my chapter against this framework and will add the pieces I&amp;#8217;m missing as I get on.&lt;/p&gt;

&lt;p&gt;Some of the things I foresee that might need to be added are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;support for controlling the application from an IronRuby console so that you can interact with the interface as it is running.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;support for a console to interact with the code of the application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;support for plugins&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So after all these lists how would an application look like when you are developing it?&lt;/p&gt;

&lt;p&gt;The controller:&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;demo_controller.rb    &lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DemoController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IronNails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;view_object&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:status_bar_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;The status bar message&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;view_action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:change_message&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change_message&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@status_bar_message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#@status_bar_message&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; appended&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;The ViewModel:&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;DemoViewModel.cs&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DemoViewModel&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IronNails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ViewModel&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;The View:&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;xml&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Window&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;na&quot;&gt;xmlns:x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.microsoft.com/winfx/2006/xaml&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;na&quot;&gt;xmlns:behaviors=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;clr-namespace:IronNails.Library.Behaviors;assembly=IronNails.Library&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;na&quot;&gt;Title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Window1&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;300&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;300&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;StackPanel&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextBlock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding Objects[StatusBarMessage].Value}&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/TextBlock&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Click me&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;behaviors:ClickBehavior.LeftClick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding Commands[ChangeMessage]}&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/StackPanel&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Window&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;There are currently 2 dictionaries available to the view. One that contains the models (Objects) and one that contains the commands (Commands). The value of an entry in the Objects needs to be observable by implementing INotifyPropertyChanged and that is what&amp;#8217;s responsible for the binding syntax Objects[ModelName].Value&lt;/p&gt;

&lt;p&gt;At this moment there are only a couple of behaviors implemented: LeftClick, RightClick, DoubleClick and Hover.&lt;/p&gt;

&lt;p&gt;The framework expects that you follow the basic naming conventions of the technology you&amp;#8217;re programming in. So in ruby you underscore names but in C# and xaml you camelcase them.&lt;/p&gt;

&lt;p&gt;By defining an object with view_object :object_name, default value you define it with a default value that you can change afterwards in the controller actions. By defining an action with view_action :action_name, :mode =&gt; :asynchronous you tell that framework that you want to link a method or a block as a controller action and execute it asynchronously.&lt;/p&gt;
</description>
        <published>2008-08-19 07:50:14 +0200</published>
        <link>http://flanders.co.nz/2008/08/19/ironnails-some-progress/</link>
      </item>
      
    
      
      <item>
        <title>Finally found the insert key on my macbook pro keyboard</title>
        <description>&lt;p&gt;I finally managed to figure out what the insert key is on my macbook pro. I missed it a lot because in Resharper the standard command to generate code is Alt+Ins. This key combination seems to be engraved in my brain because it was really hard for me to use it with a different key combination. Anyway the winning combinations are:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Insert: &lt;strong&gt;fn+return&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Alt+Insert: &lt;strong&gt;fn + alt/option + return&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
</description>
        <published>2008-08-11 11:38:19 +0200</published>
        <link>http://flanders.co.nz/2008/08/11/finally-found-the-insert-key-on-my-macbook-pro-keyboard/</link>
      </item>
      
    
      
      <item>
        <title>IronNails : Rails like development for IronRuby with WPF/Silverlight</title>
        <description>&lt;p&gt;For my book IronRuby I&amp;#8217;m working on chapter 4. That chapter is about doing WPF development with IronRuby. I started out with a straight port of &lt;a href=&quot;http://code.google.com/p/wittytwitter&quot;&gt;Witty&lt;/a&gt; to IronRuby. As I was doing that the cogs started turning and I came up with a way to bring the rails style of development to WPF. I decided to investigate that route a little bit further and now I have a small framework that enables you to write WPF applications with the MVC paradigm. I decided to open that code up as open source and host it on github.&lt;/p&gt;

&lt;p&gt;At first I used the name Sails for my framework but it turns out there is java clone of rails that is called opensails. So to avoid confusion David M. Peterson proposed the name IronNails.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;On Sat, 02 Aug 2008 08:00:44 -0600, Charles Oliver Nutter wrote:&lt;/p&gt;

&lt;p&gt;FYI, there&amp;#8217;s already a framework named &amp;#8220;Sails&amp;#8221; for Java:      &lt;br/&gt;
&lt;a href=&quot;http://www.opensails.org/&quot;&gt;http://www.opensails.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the sake of sticking to the &amp;#8220;Iron&amp;#8221; theme, why not replace the &amp;#8216;S&amp;#8217; with an &amp;#8216;N&amp;#8217; and go with IronNails. ;-) Maybed it&amp;#8217;s just me, but if given the choice, I&amp;#8217;d much rather nail it than sail it any day of the week. :D&lt;/p&gt;

&lt;p&gt;&amp;#8211;      &lt;br/&gt;
/M:D&lt;/p&gt;

&lt;p&gt;M. David Peterson&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You can find the project here: &lt;a href=&quot;http://github.com/casualjim/ironnails&quot;&gt;http://github.com/casualjim/ironnails&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this moment it&amp;#8217;s definitely not finished at all, but it does work. The remainder of the week I&amp;#8217;ll move my previous demo code onto this framework, update the code samples in my chapter and finish the content. I hope I will have all of this done by the end of next week.&lt;/p&gt;

&lt;p&gt;Back to the IronNails project:&lt;/p&gt;

&lt;p&gt;Because DLR objects cannot be used to bind to in WPF you have to define a skeleton of the ViewModel in C#, but this will change in the future. When that changes I&amp;#8217;ll look at extending the framework to make use of some other WPF patterns like defining a DependencyObject and Behaviors. Once those are defined you get a very clean separation between design and behavior.&lt;/p&gt;

&lt;p&gt;This is abstracted away from you but in the background the framework works with the View - ViewModel - Model - Controller pattern although I&amp;#8217;ve tried to keep your exposure to the view model to a minimum. The framework follows naming conventions per language. So in C# and XAML you camel case stuff and in IronRuby you underscore stuff.&lt;/p&gt;

&lt;p&gt;The very core of the framework is defined in C# but most of the code is IronRuby, depending on how hard it will be after the DLR RTM&amp;#8217;s I may look at adding support for all the DLR languages.&lt;/p&gt;

&lt;blockquote&gt;&lt;h1&gt;IronNails        &lt;/h1&gt;

&lt;p&gt;IronNails is a framework inspired by the Rails and rucola frameworks. It offers a rails-like way of developing      &lt;br/&gt;
applications with IronRuby and Windows Presentation Foundation (WPF).       &lt;br/&gt;
This framework uses the pattern Model - ViewModel - View - Controller (M-VM-V-C). It should be able to run on both WPF       &lt;br/&gt;
and Silverlight.       &lt;br/&gt;
The idea is that the views can be created using a design tool like Blend for example and just save that xaml as is. The       &lt;br/&gt;
designer should not need to use anything else than drag and drop to create a GUI design. The behaviors are then added to       &lt;br/&gt;
the view by using predefined behaviors in the framework or by defining your own behavior.       &lt;br/&gt;
The framework then generates a proxy for the view which will be used to transparently wire up the commands in the       &lt;br/&gt;
behaviors to controller actions.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You are now able to write the following code for a controller:&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IronNails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;view_action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:show_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:triggers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:my_button&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;no&quot;&gt;MessageBox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;This is the great message from a block&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;view_action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:change_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:triggers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:my_text_block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mouse_enter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;view_action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:reset_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:triggers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:my_text_block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mouse_leave&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_text_block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foreground&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:black&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_brush&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;view_object&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:people&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_text_block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foreground&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:red&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_brush&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;At this moment the project has 0 unit tests, it has below minimal documentation and it still needs a work like defining the behaviors. I have to move on with my book but intend to continue developing this framework after my book is finished and IronRuby RTM&amp;#8217;s. There are some more workarounds in the project that will all disappear as IronRuby progresses.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fflanders.co.nz%2f2008%2f08%2f07%2fironnails-introduction%2f&quot;&gt;&lt;img src=&quot;http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fflanders.co.nz%2f2008%2f08%2f07%2fironnails-introduction%2f&quot; alt=&quot;kick it on DotNetKicks.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Technorati Tags: &lt;a href=&quot;http://technorati.com/tags/IronRuby&quot;&gt;IronRuby&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/IronRubyInAction&quot;&gt;IronRubyInAction&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/IronNails&quot;&gt;IronNails&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/WPF&quot;&gt;WPF&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2008-08-07 15:23:43 +0200</published>
        <link>http://flanders.co.nz/2008/08/07/ironnails-introduction/</link>
      </item>
      
    
      
      <item>
        <title>Moving back to belgium</title>
        <description>&lt;p&gt;Tonight is my last night in New Zealand. Tomorrow I will fly back to Belgium to see what has changed in the 3 years that I&amp;#8217;ve been away. I already know that my home city Antwerp has changed a lot because they were completely redoing the place when I left. I think it might still too soon for a reflective post on my experiences in New Zealand. What I can say is that I had a great time here and I made some great friendships with some extraordinary people. Depending on who you ask this is a good or bad thing but I&amp;#8217;ll surely be back in a couple of years :)&lt;/p&gt;

&lt;p&gt;The first one on my list of great Kiwi personalities is &lt;a href=&quot;http://blogs.msdn.com/alexj/&quot;&gt;Alex James&lt;/a&gt;. We had a whole bunch of architectural discussions and many of his ideas are still sitting in the back of my mind every day I write code. I met him at a point in my programming career when I was looking for something new. I didn&amp;#8217;t want to use datasets any more, was looking for a replacement for webforms and he had quite a clever project Base4. This project is what got me started on Open Source and at this point I wouldn&amp;#8217;t mind making a living working on open source projects I just don&amp;#8217;t know quite yet how to start that :)&lt;/p&gt;

&lt;p&gt;The second one is &lt;a href=&quot;http://blog.bittercoder.com/&quot;&gt;Alex Henderson&lt;/a&gt;, he knew and probably knows a lot more about Castle&amp;#8217;s windsor than I do and through some kind of blog conversation about using Base4 with Castle I finally got what Alex James meant when he said my code was quite monolithic at times. Alex Henderson showed me how to write readable code for other people than me. Very sometimes I know still catch myself writing big chuncks of code in one go but thanks to resharper I can quickly fix that now.&lt;/p&gt;

&lt;p&gt;Furthermore there is the wonderful bunch of people at &lt;a href=&quot;http://www.xero.com&quot;&gt;Xero&lt;/a&gt;. I had a great time working with them and figuring out what my strengths are as a developer. Although we didn&amp;#8217;t always saw eye to eye &lt;a href=&quot;http://pageofwords.com&quot;&gt;Kirk&lt;/a&gt; taught me that security goes way further than just the data. Security has to flow through from the whole company and all the way into the lowest level of your application. He was probably the voice of reason I often need and when I was programming other projects after I left Xero. I still thought to myself: would I be able to get away with uploading this and seeing what happens or should I really test this on a different non-dev machine. Then I see that look he gets and will dilligently grumble and test the thing, which, as it turns out, is almost always a good idea.&lt;br/&gt;
Everybody at Xero were really great collegues and there are times that I regretted going away there even if it was just for the cool bunch of people that work there. Craig for letting me see that &amp;#8220;the Hutt&amp;#8221; is the closest thing Wellington has to &amp;#8220;the hood&amp;#8221; and that the word box has more than one meaning.&lt;/p&gt;

&lt;p&gt;Of course there are the guys from &lt;a href=&quot;http://www.mindscape.co.nz&quot;&gt;Mindscape&lt;/a&gt;, all brilliant programmers. I don&amp;#8217;t think you&amp;#8217;ll find another company in New Zealand that has that big of a brains/person ratio. I&amp;#8217;d say if they can&amp;#8217;t solve it for you nobody can. I&amp;#8217;m sure we will stay in touch. The discussions I had with &lt;a href=&quot;http://andrewpeters.net/&quot;&gt;Andrew Peters&lt;/a&gt;, &lt;a href=&quot;http://hestia.typepad.com/&quot;&gt;Ivan Towlson&lt;/a&gt;, &lt;a href=&quot;http://turtle.net.nz/blog/&quot;&gt;JB&lt;/a&gt; and &lt;a href=&quot;http://blog.bluecog.co.nz/&quot;&gt;JD&lt;/a&gt; really upped my game as a programmer. I think it&amp;#8217;s always great to have discussions with people that have a different point of view, although I can get quite passionate about things, but I think it&amp;#8217;s even more great if you can do it with brilliant people. That&amp;#8217;s what my lunches with geeks were about :).
Not to forget the poker nights, they were always good fun. I think I still lost some money but I now understand the game of Poker :) It&amp;#8217;s much like real life and in my case the best advice there is don&amp;#8217;t get too ballsy and enthusiastic too early in the game it can prove to be disastrous. Another memory from poker is &amp;#8220;the blue stuff&amp;#8221;, an alcoholic beverage easily mistaken for anti-freeze but it works really well ;). The hangover the day after wasn&amp;#8217;t always that great but that&amp;#8217;s the price you pay :)&lt;/p&gt;

&lt;p&gt;Then there are some people that aren&amp;#8217;t necessarily kiwi but I met them here in New Zealand. &lt;a href=&quot;http://bgeek.net/&quot;&gt;Owen Evans&lt;/a&gt; for showing me the light on mocking :) &lt;a href=&quot;http://codeclimber.net.nz&quot;&gt;Simone Chiaretta&lt;/a&gt;, a very smart Italian programmer, his contributions to the community are quite invaluable.&lt;/p&gt;

&lt;p&gt;I realise I left out a whole bunch of people like Keith Archibald, &lt;a href=&quot;http://www.jwegesin.com/&quot;&gt;Jeff Wegesin&lt;/a&gt;, Vicky Rawsthorne and Ross McWhannel a.o. but I wanted to constrain myself to the programming experiences. I apologise too all the people I left out like the Kiwis that went to Europe before I got back: &lt;a href=&quot;http://www.flog.co.nz/&quot;&gt;Adam Burmister&lt;/a&gt; and &lt;a href=&quot;http://www.fastchicken.co.nz/&quot;&gt;Nic Wise&lt;/a&gt; I guess we&amp;#8217;ll catch up soonish :)&lt;/p&gt;

&lt;p&gt;Furthermore if you haven&amp;#8217;t been to New Zealand yet. I think it&amp;#8217;s about high time you order that ticket and get yourself over here. It&amp;#8217;s absolutely drop dead gorgeous, the natives are friendly and it&amp;#8217;s probably one of the safest places in the world. The atmosphere here is great it&amp;#8217;s a huge mix of people coming from all over the world, which leads to some very interesting friendships and discussions.  I think the rest of the world can learn a lot from the kiwi&amp;#8217;s on the matter of tolerance and not taking yourself too serious, as well as their acceptance and openness to different cultures and new experiences. So get over here and get yourself some kiwi outlook on life.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ll finish off this post with: It&amp;#8217;s been absolutely magic mate ;)&lt;/p&gt;

&lt;p&gt;Hei konaa raa&lt;/p&gt;
</description>
        <published>2008-07-13 00:41:58 +0200</published>
        <link>http://flanders.co.nz/2008/07/13/moving-back-to-belgium/</link>
      </item>
      
    
      
      <item>
        <title>How I Got Started in Software Development</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.michaeleatonconsulting.com/blog/Default.aspx&quot;&gt;Michael Eaton&lt;/a&gt; started a meme with the question: &lt;a href=&quot;http://www.michaeleatonconsulting.com/blog/archive/2008/06/04/how-did-you-get-started-in-software-development.aspx&quot;&gt;How did you get started in software development?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yesterday &lt;a href=&quot;http://codeclimber.net.nz/&quot;&gt;Simone Chiaretta&lt;/a&gt; &lt;a href=&quot;http://codeclimber.net.nz/archive/2008/07/10/How-I-Got-Started-in-Software-Development.aspx&quot;&gt;tagged me in his post&lt;/a&gt;, so it’s now my turn to answer the questions and tag other bloggers:&lt;/p&gt;

&lt;h2&gt;How old were you when you started programming?&lt;/h2&gt;

&lt;p&gt;Like many other programmers I started at an early age. I learnt to read and write when I was 6 years old. By the time I was 8 a friend of my mother showed how to use the DOS command line and how to create batch scripts. This got me started to create the menu system so that my mother could also use the computer, I&amp;#8217;ve been supporting my parents on their pcs ever since.  All the books I could find in those days were in English and I&amp;#8217;m a Dutch speaker which made reading them at 8 years old quite hard.&lt;/p&gt;

&lt;h2&gt;How did you get started in programming?&lt;/h2&gt;

&lt;p&gt;That same friend also showed me windows 1.0 and paint which was nice but more cool to me was the gwbasic command he gave me. That thing opened up a wonderful world of line numbers and goto statements which made the computer do stuff. Hmmmmm do stuff. Suddenly I could understand the books because they had code in them and I understood code.&lt;/p&gt;

&lt;p&gt;As a kid I was more interested in soccer and playing than programming but I came back to it from time to time.&lt;br/&gt;
A couple of years later I got interested in girls which was disastrous for my programming time, not much later I could drink alcohol so I abandonned programming as a hobby for a couple of years. In school however I got taught Turbo Pascal which revived my interest around the age of 15. I wrote blackjack in it that year and that was my big achievement for that year.&lt;/p&gt;

&lt;p&gt;The next couple of years I had to make do with a very old computer that wouldn&amp;#8217;t do much. In school I got 2 hours a week of programming dBase IV (joy joy) and MS Access in my graduation year. After my graduation I started working in the hospitality sector and started partying hard, no programming for the next couple of years :).&lt;/p&gt;

&lt;h2&gt;What was your first language?&lt;/h2&gt;

&lt;p&gt;I guess it was batch scripting, the fancy menus back in those days with drop shadow boxes etc.&lt;/p&gt;

&lt;p&gt;But I wrote snake and such around the same time in GW-BASIC which I really consider to be my first language.&lt;/p&gt;

&lt;h2&gt;What was the first real program you wrote?&lt;/h2&gt;

&lt;p&gt;I won&amp;#8217;t count the little batch scripts etc. I guess the first program I wrote completely from scratch and without the help of a manual of some sort must be BlackJack at the age of 15 in Turbo Pascal.&lt;/p&gt;

&lt;h2&gt;What languages have you used since you started programming?&lt;/h2&gt;

&lt;p&gt;Batch scripting, GW-BASIC, qBasic, Borland Turbo Pascal, VB6, VB.NET, C#, Javascript, HTML, CSS, XML, XSL, Bash&lt;/p&gt;

&lt;h2&gt;What was your first professional programming gig?&lt;/h2&gt;

&lt;p&gt;I guess that would mean the first time I got paid. I wrote a couple of scripts and a little bit of Access for a company my father worked for when I was 16.  After that it took me until I was 22 to get started as a web developper after my day job.&lt;/p&gt;

&lt;h2&gt;If you knew then what you know now, would you have started programming?&lt;/h2&gt;

&lt;p&gt;Hell yeah :) I loooooove programming :-D. While I took prolonged break during the early years of my programming life it has always been there silently calling my name. I don&amp;#8217;t know if there is anything else in the world I love doing more as a profression.&lt;/p&gt;

&lt;h2&gt;If there is one thing you learned along the way that you would tell new developers, what would it be?&lt;/h2&gt;

&lt;p&gt;RTFM and consequently go forth and explore. And never stop communicating with the team and users.&lt;/p&gt;

&lt;h2&gt;What&amp;#8217;s the most fun you&amp;#8217;ve ever had&amp;#8230; programming?&lt;/h2&gt;

&lt;p&gt;While there are many things in programming I love like learning new stuff and such. I guess for me programming is about getting into the zone. You code away and a couple of hours later you wrote something great. I also love the constant little victories :)&lt;/p&gt;

&lt;h2&gt;Now on to others&lt;/h2&gt;

&lt;p&gt;This is the time where I get to pick a couple of people. Uhmm, I pick:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://andrewpeters.net&quot;&gt;Andrew Peters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.bittercoder.com&quot;&gt;Alex Henderson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://hestia.typepad.com&quot;&gt;Ivan Towlson&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <published>2008-07-12 07:52:15 +0200</published>
        <link>http://flanders.co.nz/2008/07/12/how-i-got-started-in-software-development/</link>
      </item>
      
    
      
      <item>
        <title>Dynamic Script Control</title>
        <description>&lt;p&gt;Both Silverlight and WPF use XAML markup to describe their user interface. As I&amp;#8217;m currently writing my chapter on WPF for my book IronRuby In Action and I want to use some xaml that has been generated before for a different project but with an IronRuby class to load the xaml I&amp;#8217;m in trouble. This is because you can declare assembly references in the xml namespace declarations so you can use the types in that assembly from xaml.&lt;/p&gt;

&lt;p&gt;The DLR based languages don&amp;#8217;t compile into static assemblies and this means that you can&amp;#8217;t use those xml namespace definitons to reference your assemblies. I wrote a fairly trivial control that acts like a hook for DLR based controls in the XAML tree.&lt;/p&gt;

&lt;p&gt;You can check it out at codeplex.    &lt;br/&gt;
&lt;a href=&quot;http://codeplex.com/dynamicscriptcontrol&quot;&gt;http://codeplex.com/dynamicscriptcontrol&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The idea behind this control is that you can &amp;#8220;hook&amp;#8221; your DLR based control into the visual tree by setting some properties. You can set properties on the DLR based control by setting the Attributes property on the DynamicScriptControl&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s look at a quick example:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The ruby file defining a custom TextBox. But you can do whatever you want in that ruby file of course.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;a href=&quot;http://flanders.co.nz/wp-content/uploads/2008/06/dynamic-script-control-rubyscript.png&quot;&gt;&lt;img src=&quot;http://flanders.co.nz/wp-content/uploads/2008/06/dynamic-script-control-rubyscript-thumb.png&quot; alt=&quot;dynamic_script_control_rubyscript&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All this textbox does is preset it&amp;#8217;s text property to &amp;#8220;I&amp;#8217;m prefilled&amp;#8221;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The xaml for the window&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;a href=&quot;http://flanders.co.nz/wp-content/uploads/2008/06/dynamic-script-control-window-xaml.png&quot;&gt;&lt;img src=&quot;http://flanders.co.nz/wp-content/uploads/2008/06/dynamic-script-control-window-xaml-thumb.png&quot; alt=&quot;dynamic_script_control_window_xaml&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You first declare a namespace for the assembly that has the DynamicScriptControl. Next I have a StackPanel that contains 2 DynamicScriptControls. The first just contains the 2 mandatory properties. We need to know which class you want to instantiate in the file you provide by setting the ScriptFile property. This script file property is a path to your ruby file in my case prefilled_text_box.rb.    &lt;br/&gt;
The second DynamicScriptControl is one where I want to initialize the control with my own text property. To declare those properties you have to add them to the Attributes collection of the DynamicScriptControl. At this moment it&amp;#8217;s not smart enough to know which datatype you give it so you can specify a format string which was necessary in this case because text is a string.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The result&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;a href=&quot;http://flanders.co.nz/wp-content/uploads/2008/06/dynamic-script-control-window.png&quot;&gt;&lt;img src=&quot;http://flanders.co.nz/wp-content/uploads/2008/06/dynamic-script-control-window-thumb.png&quot; alt=&quot;dynamic_script_control_window&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Michael Foord the author of IronPython In Action will provide the python integration in this control.&lt;/p&gt;

&lt;p&gt;There was a release of the Dynamic Silverlight SDK earlier this week which contained the necessary source code files to compile a common DLR for both IronRuby and IronPython. That is what makes it possible to support multiple scripting languages from the start.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve hosted the source code on google and you can find that at:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://code.google.com/p/dynamic-script-control&quot;&gt;http://code.google.com/p/dynamic-script-control&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Technorati Tags: &lt;a href=&quot;http://technorati.com/tags/ironruby&quot;&gt;ironruby&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/WPF&quot;&gt;WPF&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/DLR&quot;&gt;DLR&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/ironpython&quot;&gt;ironpython&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/Silverlight&quot;&gt;Silverlight&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2008-06-12 18:13:42 +0200</published>
        <link>http://flanders.co.nz/2008/06/12/dynamic-script-control/</link>
      </item>
      
    
      
      <item>
        <title>The IronRuby in Action book went into EAP today</title>
        <description>&lt;p&gt;It&amp;#8217;s been a bit of journey but my &lt;a href=&quot;http://manning.com/carrero&quot;&gt;IronRuby in Action&lt;/a&gt; book finally went into EAP today. EAP means exactly what it means in the software world, still very much subject to change. This could be seen as a public review :)  I welcome any suggestions you may have.&lt;/p&gt;

&lt;p&gt;You can find the book at &lt;a href=&quot;http://manning.com/carrero&quot;&gt;http://manning.com/carrero&lt;/a&gt;
There is also a forum there where you can post suggestions and/or problems you may encounter when running the code samples. I look at it as my issue tracker :)&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m currently working on a chapter where I build a complete twitter client with IronRuby and WPF (not silverlight as indicated on the current TOC). It is based on Witty but uses IronRuby instead of C# to drive the xaml. Also some storyboards have been replaced by IronRuby instead of by xaml stuff. It&amp;#8217;s also not a straight port of Witty because I haven&amp;#8217;t really looked at their code apart from the xaml that is.&lt;/p&gt;

&lt;p&gt;Happy reading :)&lt;/p&gt;

&lt;p&gt;Update: Some people started calling it the &amp;#8220;jugs book&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fflanders.co.nz%2f2008%2f05%2f16%2fthe-ironruby-i%e2%80%a6to-eap-today-2&quot;&gt;&lt;img src=&quot;http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fflanders.co.nz%2f2008%2f05%2f16%2fthe-ironruby-i%e2%80%a6to-eap-today-2&quot; alt=&quot;kick it on DotNetKicks.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2008-05-16 10:52:46 +0200</published>
        <link>http://flanders.co.nz/2008/05/16/the-ironruby-in-action-book-went-into-eap-today-2/</link>
      </item>
      
    
      
      <item>
        <title>Using the mini spec framework that comes with IronRuby</title>
        <description>&lt;p&gt;I&amp;#8217;ve set out to build my first &amp;#8220;real&amp;#8221; application (still playground material) with IronRuby today and for me no application can be built without having the unit tests or specs to give me that warm fuzzy feeling that things should work. That being said the first thing on my list of things to do is figure out how to use the minispec framework that IronRuby currently uses to write my specs.&lt;/p&gt;

&lt;p&gt;Since my application will be doing a fair bit of http requests I want to be able to mock that out so I don&amp;#8217;t have to rely on the webservers to be up and running or being online to run the specs.&lt;/p&gt;

&lt;p&gt;The first thing I did was copy a couple of files from the &lt;strong&gt;tests\IronRuby\Specs &lt;/strong&gt;directory in the directory where you downloaded the IronRuby source code into &lt;code&gt;C:\tools\IronRuby&lt;/code&gt; in my case. I copied those files in a specs subdirectory of my application directory. The files we&amp;#8217;re going to need are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;mini_mock.rb&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mini_rspec.rb&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mspec_helper.rb&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;rspec_helper.rb&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;simple_mock.rb&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;spec_helper.rb&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;spec_runner.rb&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The next thing on my to-do list is then to change some of the files so that we can run our own specs on our terms.&lt;/p&gt;

&lt;p&gt;The first changes I made are in spec_helper.rb. I replace require &amp;#8216;mini_mock&amp;#8217; on line 18 with &lt;code&gt;require File.dirname(__FILE__) + &#8216;/mini_mock&#8217;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The next bit is in the spec_runner.rb file. I just removed the word &lt;em&gt;core/&lt;/em&gt; in that file because our specs will just live in a directory structure under the specs folder.&lt;/p&gt;

&lt;p&gt;Now to create the first spec and mock with that spec framework:&lt;/p&gt;

&lt;p&gt;I created a folder models in my specs folder. In that folder I created a file &lt;code&gt;spec_test_spec.rb&lt;/code&gt; with the following content&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/../spec_helper.rb&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Specs&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;should work&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;c1&quot;&gt;# puts &amp;quot;Yay!!! It works&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;should mock methods&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;mock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;mock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should_receive&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mocked_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:returning&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Yay!!! I&amp;#39;m mocking&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mocked_method&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Yay!!! I&amp;#39;m mocking&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;c1&quot;&gt;# puts result&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;no&quot;&gt;Mock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;verify&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;This just has a test method to see if it will run the rspec syntax and the second is where I tested to see if I could mock methods on objects. In the future we&amp;#8217;ll be able to use mocha and rspec for example and then we&amp;#8217;ll have a nicer syntax for mocking stuff. But this will do for now.&lt;/p&gt;

&lt;p&gt;Then I opened up a command console and navigated to the folder that contains my application&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+ C:\projects\lumpr\src\Sylvester.DesktopEdition\Sylvester.IronRuby\specs

» **ir spec_runner.rb models - pass**

Specs should work
Specs should mock methods
Total pass: 2 out of 2 examples
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I may post an example later this week with some real tests but this shows you how to get going with the mini spec framework to test your .NET stuff today.&lt;/p&gt;
</description>
        <published>2008-05-13 19:27:27 +0200</published>
        <link>http://flanders.co.nz/2008/05/13/using-the-mini-spec-framework-that-comes-with-ironruby/</link>
      </item>
      
    
      
      <item>
        <title>Taking Ninject to new places</title>
        <description>&lt;p&gt;When I started looking at &lt;a href=&quot;http://ninject.org&quot;&gt;Ninject&lt;/a&gt; I was pretty impressed by how nice the code looks and how well the project has been put together.  &lt;a href=&quot;http://kohari.org&quot;&gt;Nate&lt;/a&gt; had been profiling the project yesterday and it performs slightly better than its cousin from the &lt;a href=&quot;http://castleproject.org&quot;&gt;Castle framework&lt;/a&gt; but that difference is almost negligible.
However I recommend you download the Ninject framework and just look at its codebase because it may teach you some new tricks or give you some new insights. The rest of this post will explain a small MVP framework for Ninject and WPF that I added to &lt;a href=&quot;http://code.google.com/p/ninject-contrib/&quot;&gt;Ninject contrib&lt;/a&gt; last weekend.&lt;/p&gt;

&lt;p&gt;When I downloaded the Ninject code for the first time I immediately saw that it had integration points for &lt;a href=&quot;http://castleproject.org&quot;&gt;Monorail&lt;/a&gt;, &lt;a href=&quot;http://asp.net&quot;&gt;ASP.NET&lt;/a&gt; and Winforms but sadly I was looking at it for a WPF application. For doing the type of MVP I wanted to do with WPF I couldn&amp;#8217;t straight copy what was there for Winforms and neither what was there for Webforms. It looked like it walked some middle ground. So I looked very closely at what Nate had done before me and learned.&lt;/p&gt;

&lt;p&gt;Apart from the occasional IronRuby demo I had never used WPF with the intent of building a moderately sized system on top of it. I did have a couple of design guidelines that helped me through my voyage but most of my what I applied comes from Jeremy Miller&amp;#8217;s blog in his excellent build your own CAB series. I looked at 1 post in particular the &lt;a href=&quot;http://codebetter.com/blogs/jeremy.miller/archive/2007/05/25/build-you-own-cab-part-3-the-supervising-controller-pattern.aspx&quot;&gt;third one&lt;/a&gt; about the Supervising controller.&lt;/p&gt;

&lt;p&gt;I figured out that I didn&amp;#8217;t want to make my view now anything or as little as possible about my presenter or at least as little as possible. The way I have it now allows one view per presenter; they are mapped one-to-one. In the repository of the contrib project there is the framework and a little sample application. A log viewer that uses the framework to demonstrate its usage.
I was going to tell you about Modules etc. but all that stuff is nicely explained in the ninject wiki so I don&amp;#8217;t really feel the need to write it all up again. I will however explain you how to get started with the MVP framework that now comes with Ninject.&lt;/p&gt;

&lt;p&gt;We need to tell our application that we want to use Ninject and to do that there are 2 ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inherit of &lt;code&gt;Ninject.Framework.PresentationFoundation.NinjectWpfApplication&lt;/code&gt; which also makes you change the XAML of the application. I didn&amp;#8217;t really like that so I came up with a second way.&lt;/li&gt;
&lt;li&gt;Initialize the application through the KernelContainer static helper class.&lt;/li&gt;
&lt;/ul&gt;


&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;[LogMyCalls]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;partial&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;App&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnStartup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StartupEventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;c1&quot;&gt;// KernelContainer.InitializeApplicationWith(this, new LinFuModule(), new NLogModule(), new WpfModule(), new LoggingModule());&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InitializeApplicationWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LinFuModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NLogModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WpfModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoggingModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnStartup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;This tells our application that we are going to use Ninject in this application. And should initialize all the services we will need in our application.
Next on the list is the View. There is probably a better way to do this (read I&amp;#8217;m not entirely happy with this but have a rather small brain). We need to tell the view which presenter we will be using, for that I added a PresentedBy attribute that takes a type (the presenter type).  And you also have to override the OnInitialized event and again use the KernelContainer helper class to initialize the presenter. There is a reason for this, at a certain point during my testing I had it so that the view was agnostic of the controller but that meant I would have to skip a couple of checks before running the window. I may add that later again not sure.  The views aren&amp;#8217;t decorated with the service attribute so they won&amp;#8217;t get picked up by the AutoModule instead we inject it manually through its initialisation procedure.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;[PresentedBy(typeof(LogsPresenter))]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;partial&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LogsView&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;ILogsView&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LogsView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;InitializeComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnInitialized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnInitialized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WireUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// KernelContainer.WireUp(this);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [PublishAction]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EventHandler&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GenerateLogs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [PublishAction]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EventHandler&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FilterLogs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;So far we&amp;#8217;ve got a view that knows how to initialize a presenter but it also needs to be able to communicate with the presenter. I chose to expose the relevant items I will need in my presenter through properties on the view and I chose to use a Publish/Subscribe model through a customized Ninject MessageBroker to handle my events. This allowed me to not couple my view too tightly to the presenter. You can customize the name of the published action but not the publisher at this moment. And that&amp;#8217;s what the PublishAction is for.  It uses a standard event handler but will ignore the arguments that you would send to it. The presenter should go back to the view to interrogate it about its state.&lt;/p&gt;

&lt;p&gt;And the last piece we need to talk about is the Presenter. The Ninject presentation foundation project holds a Generic PresenterBase class that takes the interface/type of the view as a type parameter. I let Ninject auto-register my components so I just decorated the presenter class with [Service] and it will get picked up by the Ninject Kernel. You can subscribe to an action from the view by using a [SubscribeToAction] attribute. That attribute takes the class name of the view as a parameter as well as the name of the action you want to subscribe to.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;[Service, LogMyCalls]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LogsPresenter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PresenterBase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ILogsView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ILogService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_logService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IRandomDataService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_randomDataService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [Inject]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LogsPresenter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ILogService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IRandomDataService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomDataService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;_logService&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;_randomDataService&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomDataService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [SubscribeToAction(typeof(LogsView), &amp;quot;GenerateLogs&amp;quot;)]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GenerateLogs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;_randomDataService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddRandomData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;SetFindAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;And that should be all you need to know to get started. It&amp;#8217;s not a hell of a lot of code in the presentation framework and the sample application contains NSpecify specs in combination with Moq for mocking.&lt;/p&gt;
</description>
        <published>2008-04-23 06:36:15 +0200</published>
        <link>http://flanders.co.nz/2008/04/23/taking-ninject-to-new-places/</link>
      </item>
      
    
      
      <item>
        <title>Ninject (Part 2): Customizing your infrastructure for logging</title>
        <description>&lt;p&gt;Yesterday we had a little introduction to &lt;a href=&quot;http://ninject.org&quot;&gt;Ninject&lt;/a&gt;. Today I&amp;#8217;d like to examine what&amp;#8217;s involved in getting some &lt;a href=&quot;http://en.wikipedia.org/wiki/Aspect-oriented_programming&quot;&gt;AOP&lt;/a&gt; style logging going for your application. I find that there are only very few places where I&amp;#8217;m logging something that steps out of the bounds of being called at the end of the method when things succeed. I&amp;#8217;m generally more interested in what happens when things go wrong and that&amp;#8217;s when I log the exception. In some cases I&amp;#8217;ll be interested in the actual parameters.&lt;/p&gt;

&lt;p&gt;The code I&amp;#8217;m going to show you will take care of basic logging needs but if you want more information about what happens inside your method you&amp;#8217;re either going to need to extend my implementation or log the call from within your method body. We&amp;#8217;re going to implement logging that when run with the debug level turned on will tell us that a method is going to execute, whether it finished successfully or with an error and if there was an error it will also log the exception.&lt;/p&gt;

&lt;p&gt;To get this thing on the road, on the &lt;a href=&quot;http://mindscape.co.nz&quot;&gt;LightSpeed&lt;/a&gt; road that is. We&amp;#8217;re going to use &lt;a href=&quot;http://nlog-project.com&quot;&gt;NLog&lt;/a&gt; to get flexible routing of log messages. We&amp;#8217;re first going to create a LightSpeedTarget that is a customized NLog target (route destination) for your log messages.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;31&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;32&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;33&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;34&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;35&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;36&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;LoggingDemo.UI.Integration&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;c1&quot;&gt;/// This class represents a NLog target that we can reference in the NLog.config file&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;c1&quot;&gt;/// You can use this to use Lightspeed to log to the database just like a file target etc.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [Target(&amp;quot;LightSpeedTarget&amp;quot;)]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LightSpeedTarget&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TargetWithLayout&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LightSpeedTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;Layout&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;${message}&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LogEventInfo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logMessage&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CompiledLayout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetFormattedMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appEvent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ApplicationEvent&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;n&quot;&gt;Sequence&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SequenceID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;n&quot;&gt;EventTime&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TimeStamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;n&quot;&gt;Level&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Level&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;n&quot;&gt;LoggerName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoggerName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logMessage&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StackTrace&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StackTrace&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StackTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserStackFrame&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserStackFrame&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserStackFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;Repository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;appEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;Repository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CompleteUnitOfWork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;The class above overrides the TargetWithLayout class from the NLog project. The attribute tells NLog how to find this target. In the constructor I override the default message layout because it was a bit too verbose to my liking.&lt;/p&gt;

&lt;p&gt;We then override the Write method where we map the properties to our ApplicationEvent. And lastly we add the event to the repository and commit it.
Now if we want our application to use this we&amp;#8217;re going to have to tell it how. Nlog does this by looking for an nlog.config file in your application directory. So let&amp;#8217;s go ahead and add an nlog.config file to our project. I&amp;#8217;ll show you the nlog.config file for the application. In my unit test project I&amp;#8217;m using the console logger so I can see what&amp;#8217;s going on :)&lt;/p&gt;

&lt;p&gt;The NLog.config file for the application:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://flanders.co.nz/wp-content/uploads/2008/04/image.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My NLog.config file for my test project:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://flanders.co.nz/wp-content/uploads/2008/04/image1.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This enables our application to use the target we just created. Moving on now to the Interceptor which is Ninject specific (You can do the same with other DI frameworks). In Ninject you can tell the kernel to intercept a method on a class and execute some logic before and after invocation of the method. We can tell Ninject to intercept all methods on a class, specific methods or when we say all methods we can still exclude some of them. For our logging example I chose to use all methods on a class. You can do this by decorating the class with an [Intercept] attribute. If you would want a method not to be intercepted you can by decorating that method with an [DoNotIntercept] attribute.&lt;/p&gt;

&lt;p&gt;I took the liberty of inheriting of that attribute first.. that makes the rest of my code look a little bit prettier.&lt;/p&gt;

&lt;p&gt;The LogMyCallsAttribute:&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Ninject.Core&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;LoggingDemo.UI.Interceptors&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LogMyCallsAttribute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InterceptAttribute&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LogMyCallsAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoggingInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;The LoggingInterceptor:&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;31&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;32&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;33&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;34&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;35&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;36&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;37&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;38&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;39&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Ninject.Core.Interception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Ninject.Core.Logging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;LoggingDemo.UI.Interceptors&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LoggingInterceptor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SimpleFailureInterceptor&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ILogger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_hasError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LoggingInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ILogger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;_logger&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;_hasError&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BeforeInvoke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInvocation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;_logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;About to invoke {0}&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MethodNameFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInvocation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;_logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;There was an error invoking {0}.\r\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MethodNameFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;_hasError&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AfterInvoke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInvocation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;_logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;invocation of {0} finished {1}.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MethodNameFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_hasError&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;with an error state&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;successfully&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MethodNameFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInvocation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;This class only overrides a couple of callbacks from its base class the &lt;code&gt;SimpleFailureInterceptor&lt;/code&gt;. This is where the actual interception takes place.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;31&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;32&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;33&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;34&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;35&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;36&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;37&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;38&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;39&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;40&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;41&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;42&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;43&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;44&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Ninject.Core&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Ninject.Core.Interception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;LoggingDemo.UI.Interceptors&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleFailureInterceptor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IInterceptor&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;cp&quot;&gt;#region IInterceptor Members&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Intercept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInvocation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;n&quot;&gt;BeforeInvoke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Proceed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;n&quot;&gt;OnError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;n&quot;&gt;AfterInvoke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;cp&quot;&gt;#endregion&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;         &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BeforeInvoke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInvocation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AfterInvoke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInvocation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInvocation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;This is al the work that is involved in the actual implementation of our logger. Now I&amp;#8217;d like to get some confirmation that things actually do work. Unit testing to the rescue I&amp;#8217;d say ;)&lt;/p&gt;

&lt;p&gt;The first thing we&amp;#8217;re going to need is way to verify that stuff actually got intercepted. I did that by subclassing the LoggingInterceptor with a LoggingCounterInterceptor in my unit test project.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;31&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;32&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;33&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;34&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;35&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;36&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LoggingCounterInterceptor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoggingInterceptor&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ErrorCount&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Reset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ErrorCount&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LoggingCounterInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ILogger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BeforeInvoke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Ninject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Interception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInvocation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BeforeInvoke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Ninject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Interception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInvocation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;ErrorCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;c1&quot;&gt;//The attribute for testing&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LogMyCallsCounterAttribute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InterceptAttribute&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LogMyCallsCounterAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoggingCounterInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;In the code above we&amp;#8217;re just adding 2 counter properties to the interceptor and adding their counts at the appropriate time. Next we&amp;#8217;re going to need some kind of service class or something on which we can use our interceptor, enter the InterceptedServiceMock.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IInterceptedServiceMock&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MethodWithoutBody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MethodThatThrowsAnException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;[LogMyCallsCounter]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InterceptedServiceMock&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IInterceptedServiceMock&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MethodWithoutBody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;c1&quot;&gt;// Nothing to do here&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MethodThatThrowsAnException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Because I can.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;The code above has one method that should execute and one method that throws an exception so we can verify things get picked up accordingly. Now all that&amp;#8217;s left to do is write the appropriate specs for them and see if they pass :)&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;31&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;32&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;33&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;34&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;35&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;36&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;37&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;38&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;39&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;40&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;41&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;42&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;43&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;44&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;45&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;46&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;47&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;48&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;49&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;50&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;51&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;52&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;53&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;54&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;55&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;56&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;57&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;58&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;59&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;60&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;61&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;62&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;63&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;64&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;65&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;66&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;67&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;68&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;69&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;70&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;71&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;72&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;73&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;74&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;75&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;76&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;77&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;78&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;79&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;80&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;81&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;82&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;83&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;84&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;85&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;86&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;87&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;88&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;89&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;90&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;91&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;92&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;93&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;94&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;95&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;96&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;97&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;98&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;99&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;100&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;101&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;102&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;103&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;104&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;105&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;106&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;107&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;108&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;109&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;110&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;111&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;112&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;113&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;114&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;115&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;116&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;117&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;118&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;119&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;120&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;121&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;122&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;123&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;124&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;125&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;126&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;127&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;128&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;129&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;130&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;131&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;132&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;133&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;134&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;[Context(Description = &amp;quot;Specifies the behavior for the LogMyCallsInterceptor&amp;quot;)]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LogMyCallsInterceptorSpec&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IKernel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_kernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [BeforeEach]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inlineModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InlineModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInterceptedServiceMock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;To&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InterceptedServiceMock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;());&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;_kernel&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StandardKernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LinFuModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NLogModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inlineModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [AfterEach]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;_kernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dispose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [Specification(&amp;quot;All this should do is show the calls in the test runner. It should log to the console&amp;quot;)]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ShouldShowCallsInConsole&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_kernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInterceptedServiceMock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;IContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StandardContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_kernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInterceptedServiceMock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;IRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StandardRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InterceptedServiceMock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MethodWithoutBody&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interceptors&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_kernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInterceptorRegistry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetInterceptors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enumerator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interceptors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetEnumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;enumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MoveNext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Specify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interceptors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Must&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;There should be 1 interceptor registered&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Specify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Must&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Be&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InstanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoggingCounterInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interceptor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoggingCounterInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MethodWithoutBody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Specify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Must&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Not&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Be&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Specify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Must&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;There should be 1 invocation counted.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [Specification(&amp;quot;Should show valid counts for a number of invocations&amp;quot;)]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Should_Show_Correct_Counts_For_Number_Of_Invocations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_kernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInterceptedServiceMock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;IContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StandardContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_kernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInterceptedServiceMock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;IRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StandardRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InterceptedServiceMock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MethodWithoutBody&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interceptors&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_kernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInterceptorRegistry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetInterceptors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enumerator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interceptors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetEnumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;enumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MoveNext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Specify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interceptors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Must&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;There should be 1 interceptor registered&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Specify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Must&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Be&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InstanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoggingCounterInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interceptor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoggingCounterInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MethodWithoutBody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MethodWithoutBody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MethodWithoutBody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Specify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Must&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Not&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Be&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Specify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Must&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;There should be 3 invocations counted.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Specify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ErrorCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Must&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;There should be no errors counted.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [Specification(&amp;quot;Should have the correct count of invocations and the correct error count.&amp;quot;)]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Should_Have_Correct_Invocation_And_Error_Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_kernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInterceptedServiceMock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StandardContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_kernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInterceptedServiceMock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StandardRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InterceptedServiceMock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MethodWithoutBody&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errorRequest&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StandardRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InterceptedServiceMock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MethodThatThrowsAnException&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interceptors&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_kernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInterceptorRegistry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetInterceptors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errorInterceptors&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_kernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IInterceptorRegistry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetInterceptors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errorRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enumerator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interceptors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetEnumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;enumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MoveNext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errorEnumerator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errorInterceptors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetEnumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;errorEnumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MoveNext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Specify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interceptors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Must&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;There should be 1 interceptor registered&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Specify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Must&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Be&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InstanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoggingCounterInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Specify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errorInterceptors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Must&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;There should be 1 error interceptor registered&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Specify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errorEnumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Must&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Be&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InstanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoggingCounterInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interceptor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoggingCounterInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errorInterceptor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errorEnumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoggingCounterInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MethodWithoutBody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MethodWithoutBody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MethodWithoutBody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MethodThatThrowsAnException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Specify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Must&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Not&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Be&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Specify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Must&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;There should be 3 invocations counted.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Specify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errorInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Must&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;There should be 1 invocation counted.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Specify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errorInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ErrorCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Must&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;There should be 1 error counted.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Testing this got a little messy I have to admit that. Now for a concrete example of how that looks in my application:&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;[Service(typeof(IBlogService))]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;[LogMyCalls]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BlogService&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataServiceBase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Blog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IBlogService&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;And that&amp;#8217;s how I implemented logging for my application :) Needless to say it was the testing that took me the longest to write. And from now on I don&amp;#8217;t have to worry anymore about forgetting that logger call. I always have minimal logging going. AOP is usefull in a lot more cases but this seemed like a good and easy example.&lt;/p&gt;

&lt;p&gt;Our next post will deal with initializing the modules in your application and their respective behaviors.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fflanders.co.nz%2f2008%2f04%2f18%2fninject-part-2-customizing-your-infrastructure-for-logging%2f&quot;&gt;&lt;img src=&quot;http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fflanders.co.nz%2f2008%2f04%2f18%2fninject-part-2-customizing-your-infrastructure-for-logging%2f&quot; alt=&quot;kick it on DotNetKicks.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;del.icio.us Tags: &lt;a href=&quot;http://del.icio.us/popular/LightSpeed&quot;&gt;LightSpeed&lt;/a&gt;,&lt;a href=&quot;http://del.icio.us/popular/Ninject&quot;&gt;Ninject&lt;/a&gt;,&lt;a href=&quot;http://del.icio.us/popular/NLog&quot;&gt;NLog&lt;/a&gt;,&lt;a href=&quot;http://del.icio.us/popular/Dependency%20Injection&quot;&gt;Dependency Injection&lt;/a&gt;,&lt;a href=&quot;http://del.icio.us/popular/IoC&quot;&gt;IoC&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2008-04-18 11:09:18 +0200</published>
        <link>http://flanders.co.nz/2008/04/18/ninject-part-2-customizing-your-infrastructure-for-logging/</link>
      </item>
      
    
      
      <item>
        <title>Ninject: Getting all the stuff you&#8217;ll need</title>
        <description>&lt;p&gt;I have a new project I started and I could reevaluate my toolset :) I decided to take a closer look at &lt;a href=&quot;http://ninject.org&quot;&gt;Ninject&lt;/a&gt;, &lt;a href=&quot;http://code.google.com/p/moq/&quot;&gt;Moq&lt;/a&gt; and &lt;a href=&quot;http://https//nspecify.svn.sourceforge.net/svnroot/nspecify&quot;&gt;NSpecify&lt;/a&gt;. &lt;a href=&quot;http://code.google.com/p/moq/&quot;&gt;Moq&lt;/a&gt; has been talked about enough I think, a really nice way of mocking and I will definitely be using more of it. My original plan was to write one big blog post.. but it is going to be far too long, so I&amp;#8217;m breaking it up in smaller bite size pieces.&lt;/p&gt;

&lt;p&gt;What I did was download the code, have it rest on my pc for about a week, updated again when I really got round to using it. I read the &lt;a href=&quot;http://dojo.ninject.org/wiki/display/NINJECT/Ninject+Manual&quot;&gt;wiki&lt;/a&gt; which gives a short introduction on what&amp;#8217;s what in Ninject and everybodies jobs. Decided that the wiki was cool for some more theoretical knowledge but I really needed to see more code.&lt;/p&gt;

&lt;p&gt;I opened the project and something rare happened: I was actually very happy with the code I found, not always the case I can tell you ;). Anyway the gold is in the unit tests, it&amp;#8217;s got great test coverage and it shows lots of the possibilities of Ninject. It&amp;#8217;s like a great big manual for you to get really advanced with it really quickly. I was slightly disappointed to see that there was no &lt;a href=&quot;http://nlog-project.com&quot;&gt;NLog&lt;/a&gt; support for Ninject, that disappointment quickly turned in to joy when I figured out it only took me 20 minutes to plug NLog in. And it was added to the trunk the same day.&lt;/p&gt;

&lt;p&gt;Now I don&amp;#8217;t want to make this post about which DI framework is better Windsor, Spring, Structuremap or Ninject. I just know that Ninject and I will become good friends over the next couple of months I like it. Ninject outsources its proxy generation to either Castle&amp;#8217;s DynamicProxy2 or to LinFu DynamicProxy. LinFu seemed like an interesting choice after reading &lt;a href=&quot;http://www.codeproject.com/KB/cs/LinFuPart1.aspx&quot;&gt;this codeproject article&lt;/a&gt;. It&amp;#8217;s supposedly faster than castle&amp;#8217;s dynamic proxy. Luckily Ayende is there to put this in &lt;a href=&quot;http://www.ayende.com/Blog/archive/2007/10/16/Trusting-the-benchmark.aspx&quot;&gt;perspective&lt;/a&gt;. And I can confirm that the error messages etc castle&amp;#8217;s dynamic proxy generates are a lot more useful than LinFu.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.codeproject.com/KB/cs/LinFuPart1/LinFuGraph.png&quot; alt=&quot;Screenshot - LinFuGraph.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Anyway I&amp;#8217;m using LinFu at the moment as the proxy generator for Ninject. I will walk you through a sample application I built that will deal with the following subjects of Ninject, Lightspeed and NLog. For Ninject we will use the dependency injection and it&amp;#8217;s interceptor possibilities to implement AOP style logging. For Lightspeed we will create our own logger to plug into the context so that we can log what Lightspeed does too. And we want NLog to log through Lightspeed to our database so we&amp;#8217;ll be creating a custom target for NLog as well.&lt;/p&gt;

&lt;p&gt;But let&amp;#8217;s start at the beginning doing DI with Ninject :).&lt;/p&gt;

&lt;p&gt;The most important thing to remember: &lt;strong&gt;MAKE YOUR METHODS VIRTUAL&lt;/strong&gt;. Once again &lt;strong&gt;make your methods virtual &lt;/strong&gt;otherwise Ninject has a hard time generating proxies for your classes.&lt;/p&gt;

&lt;p&gt;Ninject is different from most other DI Containers in that it doesn&amp;#8217;t have XML-configuration, its configuration is done through code (wouldn&amp;#8217;t be hard to add an XML configuration for it tho but what&amp;#8217;s the point). No XML ?? Suits me fine, everybody that ever worked with me will agree : Ivan no like XML editing. Ninject takes a modular approach by using modules that you pass to a kernel. This is pretty nice that means that an assembly can have a couple of different sets of Modules and all the caller of that assembly needs to do is add the module with the appropriate configuration to their kernel.&lt;/p&gt;

&lt;p&gt;Ninject supports DI on constructors, properties, methods and fields: &lt;a href=&quot;http://dojo.ninject.org/wiki/display/NINJECT/Injection+Patterns&quot;&gt;http://dojo.ninject.org/wiki/display/NINJECT/Injection+Patterns&lt;/a&gt;.    &lt;br/&gt;
It basically boils down to decorating the item you want to inject with the attribute &lt;em&gt;[Inject]&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ninject allows you to do a lot of configuration through the use of attributes. But I think I&amp;#8217;ll leave it at that for today and continue this tomorrow.   &lt;br/&gt;
Let&amp;#8217;s look at a concrete class from what we&amp;#8217;ve seen so far. The class below is the Logger implementation to plug into the LightSpeedContext. We will finish this later on but for now this will be enough to summarize today&amp;#8217;s post.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;31&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;32&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;33&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;34&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;35&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;36&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;37&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;38&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;39&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;40&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;41&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Ninject.Core&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Ninject.Core.Logging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ILightSpeedLogger&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Mindscape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LightSpeed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Logging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ILogger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;INinjectLogger&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ninject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Logging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ILogger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;LoggingDemo.UI.Integration&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;c1&quot;&gt;///&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;c1&quot;&gt;/// This class intercepts logging messages from the LightSpeed context and&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;c1&quot;&gt;/// sends them to our NLog logger.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;c1&quot;&gt;///&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LightSpeedLogger&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ILightSpeedLogger&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INinjectLogger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NullLogger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LightSpeedLogger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;        &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;        [Inject]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LightSpeedLogger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INinjectLogger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;cp&quot;&gt;#region ILogger Members&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LogSql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LogDebug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;cp&quot;&gt;#endregion&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Let me know what you think :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fflanders.co.nz%2f2008%2f04%2f17%2fninject-getting-all-the-stuff-youll-need%2f&quot;&gt;&lt;img src=&quot;http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fflanders.co.nz%2f2008%2f04%2f17%2fninject-getting-all-the-stuff-youll-need%2f&quot; alt=&quot;kick it on DotNetKicks.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2008-04-17 11:13:48 +0200</published>
        <link>http://flanders.co.nz/2008/04/17/ninject-getting-all-the-stuff-youll-need/</link>
      </item>
      
    
      
      <item>
        <title>Minimal IronRuby/silverlight examples online</title>
        <description>&lt;p&gt;I just posted the first post in my series on getting started with Silverlight and IronRuby on the &lt;a href=&quot;http://rubydoes.net/&quot;&gt;rubydoes.net&lt;/a&gt; website&lt;/p&gt;

&lt;p&gt;You can read more about it here: &lt;a href=&quot;http://rubydoes.net/2008/04/14/silverlight-minimal-examples/&quot;&gt;http://rubydoes.net/2008/04/14/silverlight-minimal-examples/&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2008-04-15 00:34:25 +0200</published>
        <link>http://flanders.co.nz/2008/04/15/minimal-ironrubysilverlight-examples-online/</link>
      </item>
      
    
      
      <item>
        <title>Started blogging on rubydoes.net</title>
        <description>&lt;p&gt;I just put my first post on &lt;a href=&quot;http://rubydoes.net&quot;&gt;http://rubydoes.net&lt;/a&gt; &lt;br/&gt;
I&amp;#8217;m starting a series there on using Silverlight and IronRuby to develop applications. &lt;a href=&quot;http://rubydoes.net/2008/04/12/getting-started-with-silverlight-and-ironruby/&quot;&gt;This post&lt;/a&gt; is an introduction and announcement of my series on the topic.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m porting the &lt;a href=&quot;http://www.voidspace.org.uk/ironpython/silverlight/index.shtml&quot;&gt;IronPython examples&lt;/a&gt; from Michael Foord to IronRuby and will do a new example every day of this week.&lt;/p&gt;

&lt;p&gt;See you there :)&lt;/p&gt;

&lt;p&gt;UPDATE: I didn&amp;#8217;t make it clear but this blog will still be active. Just most of my IronRuby stuff will go on rubydoes.net&lt;/p&gt;
</description>
        <published>2008-04-13 19:32:51 +0200</published>
        <link>http://flanders.co.nz/2008/04/13/started-blogging-on-rubydoesnet/</link>
      </item>
      
    
      
      <item>
        <title>Updated my lightspeed model generator</title>
        <description>&lt;p&gt;This week I could start a project that has a database that goes somewhat beyond a blog. This seemed to me like the best way to improve my model generator that &lt;a href=&quot;http://flanders.co.nz/2008/02/09/using-ruby-to-generate-lightspeed-models-part-4-again/&quot;&gt;I built earlier&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And as expected I needed to tweak it a little so that it would work properly, and I added a feature.&lt;/p&gt;

&lt;p&gt;Seen as there are 2 files generated for an entity if you add a private field that exists in the database there then the generator will skip it so that you can add more attributes than the ones this script generates for you. If you override a field you also have to put the property in the user file.&lt;/p&gt;

&lt;p&gt;I also added support for generating a datacontext. If you want to use the Linq support that Lightspeed is getting then that is a starting point. The same goes for this class with user files and generated file as above, the user file takes precedence.&lt;/p&gt;

&lt;p&gt;I hosted this project on &lt;a href=&quot;http://code.google.com/p/model-generator-ruby/&quot;&gt;google code&lt;/a&gt; so you can check it out from there. Or you can download &lt;a href=&quot;http://model-generator-ruby.googlecode.com/files/generate_ls_models.zip&quot;&gt;todays version&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fflanders.co.nz%2f2008%2f04%2f09%2fupdated-my-lightspeed-model-generator%2f&quot;&gt;&lt;img src=&quot;http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fflanders.co.nz%2f2008%2f04%2f09%2fupdated-my-lightspeed-model-generator%2f&quot; alt=&quot;kick it on DotNetKicks.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2008-04-09 18:53:06 +0200</published>
        <link>http://flanders.co.nz/2008/04/09/updated-my-lightspeed-model-generator/</link>
      </item>
      
    
      
      <item>
        <title>An IronRuby Digg Client</title>
        <description>&lt;p&gt;Scott Guthrie has a &lt;a href=&quot;http://weblogs.asp.net/scottgu/archive/2008/02/22/first-look-at-silverlight-2.aspx&quot;&gt;series of tutorials&lt;/a&gt; on how to consume the Digg API with Silverlight and C#. I wanted to know if I could convert that tutorial to IronRuby.&lt;/p&gt;

&lt;p&gt;What I came up has the same end result but due to the fact that IronRuby and its Silverlight implementation isn&amp;#8217;t complete yet I can&amp;#8217;t mimic the structure of that tutorial yet. I couldn&amp;#8217;t yet figure out how to load external xaml files so I put all the xaml in one file.&lt;/p&gt;

&lt;p&gt;I have one C# file that resides in the lib folder, this file is called DigStory.cs and contains a DiggStory class which represents a story on digg. It uses XLinq to parse the xml document and return a list of stories.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://flanders.co.nz/wp-content/uploads/2008/04/digg.zip&quot;&gt;Download the complete code&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The code contained in that file:&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DiggStory&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Description&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NumDiggs&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HrefLink&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThumbNail&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UserName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IEnumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diggstory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ParseFeed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feedContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diggFeed&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;feedContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;story&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diggFeed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Descendants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;story&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                     &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;story&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;thumbnail&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;story&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;thumbnail&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;src&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EndsWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;.gif&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                     &lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DiggStory&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                     &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                         &lt;span class=&quot;n&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;story&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                         &lt;span class=&quot;n&quot;&gt;Title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;story&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                         &lt;span class=&quot;n&quot;&gt;Description&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;story&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                         &lt;span class=&quot;n&quot;&gt;ThumbNail&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;story&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;thumbnail&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;src&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                         &lt;span class=&quot;n&quot;&gt;HrefLink&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;story&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;link&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                         &lt;span class=&quot;n&quot;&gt;NumDiggs&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;story&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;diggs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                         &lt;span class=&quot;n&quot;&gt;UserName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;story&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                     &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;I won&amp;#8217;t post the xaml file because it&amp;#8217;s a bit too long. I will however post the app.rb file and offer a little bit more explanation on that file.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;app.rb&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;31&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;32&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;33&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;34&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;35&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;36&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;37&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;38&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;39&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;40&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;41&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;42&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;43&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;44&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;45&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;46&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;47&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;48&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;49&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;50&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;System&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Silverlight&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;System.ServiceModel.Web&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Contract&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Net&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Windows&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SilverlightApplication&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;use_xaml&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_topic_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://services.digg.com/stories/topic/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topic&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;?count=20&amp;amp;appkey=http%3A%2F%2Fflanders.co.nz%2Fblog&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;search_button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;topic&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search_textbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WebClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;download_string_completed&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;n&quot;&gt;stories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DiggStory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_feed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;n&quot;&gt;stories_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selected_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;n&quot;&gt;stories_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items_source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;download_string_async&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_topic_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;stories_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selection_changed&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;story&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stories_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selected_item&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;story_detail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;story&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;story_detail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visibility&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Visibility&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Visible&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;close_button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;story_detail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visibility&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Visibility&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Collapsed&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;  
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;no&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;The above code contains all the code necessary for our application.&lt;/p&gt;

&lt;p&gt;We first tell the application to use the app.xaml file. Next we define a method that builds us the request url for the digg api. I chose to use the xml format to stay as close as possible to the sample of Scott.&lt;/p&gt;

&lt;p&gt;Like in the C# sample we&amp;#8217;re also downloading the file asynchronous. In the callback for when the request completes we parse the returned string into a list of stories and set that as the item source of our Listbox in the app.xaml file.&lt;/p&gt;

&lt;p&gt;We handle the selection_changed event of the ListBox to display a detail view on a story with a link to the digg page.&lt;/p&gt;

&lt;p&gt;More explanation on the xaml can be found on &lt;a href=&quot;http://weblogs.asp.net/scottgu/archive/2008/02/22/first-look-at-silverlight-2.aspx&quot;&gt;Scotts blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Make sure you get the bits you need from the &lt;a href=&quot;http://dynamicsilverlight.net&quot;&gt;dynamic silverlight website&lt;/a&gt; needed for running dynamic silverlight applications.&lt;/p&gt;

&lt;p&gt;Put the path to chiron.exe in your PATH variable and extract the contents of the downloaded sample. open a command prompt and go to the location where you extracted the files to. type chiron /b and click on index.html&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://flanders.co.nz/wp-content/uploads/2008/04/digg.zip&quot;&gt;Download the complete code&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fflanders.co.nz%2f2008%2f04%2f06%2fan-ironruby-digg-client%2f&quot;&gt;&lt;img src=&quot;http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fflanders.co.nz%2f2008%2f04%2f06%2fan-ironruby-digg-client%2f&quot; alt=&quot;kick it on DotNetKicks.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2008-04-06 16:45:49 +0200</published>
        <link>http://flanders.co.nz/2008/04/06/an-ironruby-digg-client/</link>
      </item>
      
    
      
      <item>
        <title>Made some changes: The macbook 5 weeks in</title>
        <description>&lt;p&gt;I&amp;#8217;ve been using my macbook as my personal and work pc. So I&amp;#8217;ve had windows vista installed on it for all this time. While in the beginning everything seemed to work just fine. This week my vista box didn&amp;#8217;t want to move if its live depended on it. So I upgraded my vista install to an XP install. So far the XP machine is heaps faster than the vista box. It has the same software installed as my vista box and yet it works suprisingly better.&lt;/p&gt;

&lt;p&gt;The only thing that kept me on vista was IIS7 because I like to use my projects as roots not as virtualdirs. I do most of my development as webdevelopment, but then again it&amp;#8217;s rare that I&amp;#8217;m working on a project that needs more than one root website, so I let that go.&lt;/p&gt;

&lt;p&gt;I care most about speed or lack thereof and in my previous setup it was definitely lack thereof.&lt;/p&gt;

&lt;p&gt;So I thought I&amp;#8217;d share some of my thoughts around switching.&lt;/p&gt;

&lt;p&gt;OSX and windows is the combination that can do it all. I use visual studio with resharper through parallels and with XP it seems to be able to keep up with my typing.&lt;/p&gt;

&lt;p&gt;Explorer on Vista is the best file browser I&amp;#8217;ve ever used. Finder on OSX is utter crap, the UI is crappy and the UX is just egregious (thanks to sbellware for teaching me this word).&lt;/p&gt;

&lt;p&gt;I use paid for and use Pathfinder on my OSX and that is more usable although a bit heavyweight for something that should just enumerate the filesystem.&lt;/p&gt;

&lt;p&gt;Somebody didn&amp;#8217;t think that menubar through properly because people nowadays use 2 monitors or more, having consistent shortcuts would make this less of an issue.&lt;/p&gt;

&lt;p&gt;Consistency on keyboard shortcuts is something I miss but got over it and have a post where I explain what I did to make it work slightly better &lt;a href=&quot;http://flanders.co.nz/2008/02/07/more-on-mac-keybindings/&quot;&gt;http://flanders.co.nz/2008/02/07/more-on-mac-keybindings/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that was about all the bad news I have apart from the fact that my macbook pro can get incredibly hot. This can be remedied to some extent by installing &lt;a href=&quot;http://homepage.mac.com/holtmann/eidac/software/smcfancontrol2/index.html&quot;&gt;smcfancontrol&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now onto the good news.&lt;/p&gt;

&lt;p&gt;Configuration on the filesystem is so much better than having a registry hive that gets corrupted now and again.&lt;/p&gt;

&lt;p&gt;The speed of my OSX is great, startup time is much shorter.&lt;/p&gt;

&lt;p&gt;The whole experience of organising my personal stuff like photos, music and how it integrates in the OS and other programs is fantastic. I don&amp;#8217;t want to go back to a broken model for this.&lt;/p&gt;

&lt;p&gt;Sleep just works and i&amp;#8217;m not hoping and praying that when i use it my box will recover from it. It&amp;#8217;s incredibly light and the battery life of 4 hours without windows running or 2.5 hours with windows running is still very ok for me.&lt;/p&gt;

&lt;p&gt;In terms of UI slickness I have to give the advantage to a linux distro with Compiz enabled they give you the freedom to choose how your computer behaves on certain actions instead of no options on windows and 2 choices on OSX.&lt;/p&gt;

&lt;p&gt;I don&amp;#8217;t think Apple has innovated much on an OS level apart from the Dock. IMHO OSX isn&amp;#8217;t perfect but it is really great at its job and stays out of my way.&lt;/p&gt;
</description>
        <published>2008-03-19 14:05:20 +0100</published>
        <link>http://flanders.co.nz/2008/03/19/made-some-changes-the-macbook-5-weeks-in/</link>
      </item>
      
    
      
      <item>
        <title>Made some changes: moved blogs</title>
        <description>&lt;p&gt;First off. Maybe you haven&amp;#8217;t noticed but I switched my blogging engine from Subtext to wordpress. I did this not because I think Subtext is bad. I actually liked it, but because of my host. I was hosting my blog with webhost4life. I get a very very modest amount of people over my blog daily but even that wouldn&amp;#8217;t work. It doesn&amp;#8217;t have anything to do with the blogging engine and everything with them. I tried using that server as a stagingserver for an app I built for a client and in the end we staged it from my pc over and adsl line (NZ to Belgium) and that was faster.&lt;/p&gt;

&lt;p&gt;I wasn&amp;#8217;t looking forward to moving blogging engines because I don&amp;#8217;t want my permalinks to change etc. The whole move was less painful than expected because somebody had already done the work and made a nice write-up. &lt;a href=&quot;http://www.aaronlerch.com/blog/2007/08/23/breaking-up-moving-blog-engines/&quot;&gt;http://www.aaronlerch.com/blog/2007/08/23/breaking-up-moving-blog-engines/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the moment I&amp;#8217;m running wordpress. Everything seems to work ok and I don&amp;#8217;t have to restart it 2 or 3 times a day by &amp;#8220;changing&amp;#8221; my web.config. So in short long live more reliable hosting.&lt;/p&gt;
</description>
        <published>2008-03-19 13:03:21 +0100</published>
        <link>http://flanders.co.nz/2008/03/19/made-some-changes-moved-blogs/</link>
      </item>
      
    
      
      <item>
        <title>A status report on the IronRuby in Action book</title>
        <description>&lt;p&gt;The last couple of months I&amp;#8217;ve been fairly busy writing my book. I had a first draft ready and that was submitted for review.&lt;/p&gt;

&lt;p&gt;At this moment I&amp;#8217;m working through all the remarks that the reviewers gave me. Some of them were quite good and made me realise that not everybody expects what I&amp;#8217;m expecting from an IronRuby book. So I&amp;#8217;ve been expanding some explanations and rewriting big chunks. I expect that we will have another review round soon. I have to process those remarks again and at that stage we&amp;#8217;ll probably be ready to publish it in and EAP style.&lt;/p&gt;

&lt;p&gt;Now that my first 3rd is done I&amp;#8217;m starting at actually developing applications with IronRuby. I&amp;#8217;m pretty curious to a couple of things from the community.&lt;/p&gt;

&lt;p&gt;At this stage I have the following things planned for DataAccess.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ll include a brief tutorial on how to use IronRuby with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SubSonic&lt;/li&gt;
&lt;li&gt;Castle ActiveRecord&lt;/li&gt;
&lt;li&gt;Linq2Sql&lt;/li&gt;
&lt;li&gt;Rails ActiveRecord&lt;/li&gt;
&lt;li&gt;LightSpeed&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I would like to know which one I should emphasize most and focus on most.&lt;/p&gt;

&lt;p&gt;After that I&amp;#8217;m starting on WPF and/or Winforms. At this stage I&amp;#8217;ve only planned to talk about WPF and not about Winforms. But I&amp;#8217;d like to confirm if that is the general idea from the people that are going to take this IronRuby ride with me.&lt;/p&gt;

&lt;p&gt;When I start talking about ASP.NET which topics are of most interest ?&lt;/p&gt;

&lt;p&gt;That are all the questions I have for now. When I have more questions I&amp;#8217;ll surely post them. And I would like to thank everybody that puts his 2c in.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ll post more when I have more news around the book.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fflanders.co.nz%2fblog%2farchive%2f2008%2f03%2f18%2fa-status-report-on-the-ironruby-inaction-book.aspx&quot;&gt;&lt;img src=&quot;http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fflanders.co.nz%2fblog%2farchive%2f2008%2f03%2f18%2fa-status-report-on-the-ironruby-inaction-book.aspx&quot; alt=&quot;kick it on DotNetKicks.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2008-03-18 06:16:29 +0100</published>
        <link>http://flanders.co.nz/2008/03/18/a-status-report-on-the-ironruby-inaction-book/</link>
      </item>
      
    
      
      <item>
        <title>Color scheme for visual studio with resharper and Ruby in Steel support</title>
        <description>&lt;p&gt;This is certainly an exciting time for me. A release of dynamic silverlight that supports IronRuby, Asp.NET MVC that can be used to in conjunction with that.&lt;/p&gt;

&lt;p&gt;I think that web applications and the way the web looks will severely change in the near future.&lt;/p&gt;

&lt;p&gt;Anyway not only the people at Microsoft have been busy also the guys from &lt;a href=&quot;http://www.sapphiresteel.com&quot;&gt;sapphiresteel&lt;/a&gt; have been busy lately. They releases a really cool update to their Ruby In Steel product. A visual rails work bench and support for developing IronRuby apps with visual studio !&lt;/p&gt;

&lt;p&gt;I finally got round to doing some installs/upgrades on my machine and played around with the color scheme until it suited me. I&amp;#8217;ll post that here.&lt;/p&gt;

&lt;p&gt;I use Resharper 4 as well as IronRuby and in Resharper I have code analysis turned on with color identifiers. So my scheme needs to support those.&lt;/p&gt;

&lt;p&gt;I don&amp;#8217;t like bright colors nor a totally black background, they have the same effect as a white background on me. I get migraines and can&amp;#8217;t concentrate as long as I need to. (the latter may also be due to undiagnosed ADD).&lt;/p&gt;

&lt;p&gt;So in C# with resharper the code looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://flanders.co.nz/blog/images/Colorschemeforvisualstudiowithresharpera_1257D/CsharpColors.png&quot;&gt;&lt;img src=&quot;http://flanders.co.nz/blog/images/Colorschemeforvisualstudiowithresharpera_1257D/CsharpColors_thumb.png&quot; alt=&quot;CsharpColors&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I do lot&amp;#8217;s of webdevelopment but I haven&amp;#8217;t tuned the colors for xaml yet. Will probably get round to doing that next weekend. This is how the html colors look (this is from rails html but html looks the same).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://flanders.co.nz/blog/images/Colorschemeforvisualstudiowithresharpera_1257D/html.png&quot;&gt;&lt;img src=&quot;http://flanders.co.nz/blog/images/Colorschemeforvisualstudiowithresharpera_1257D/html_thumb.png&quot; alt=&quot;html&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then there still is ruby to show and a config file.&lt;/p&gt;

&lt;p&gt;Here&amp;#8217;s ruby:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://flanders.co.nz/blog/images/Colorschemeforvisualstudiowithresharpera_1257D/rubyscheme.png&quot;&gt;&lt;img src=&quot;http://flanders.co.nz/blog/images/Colorschemeforvisualstudiowithresharpera_1257D/rubyscheme_thumb.png&quot; alt=&quot;rubyscheme&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And lastly the config files:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://flanders.co.nz/blog/images/Colorschemeforvisualstudiowithresharpera_1257D/webconfigscheme.png&quot;&gt;&lt;img src=&quot;http://flanders.co.nz/blog/images/Colorschemeforvisualstudiowithresharpera_1257D/webconfigscheme_thumb.png&quot; alt=&quot;webconfigscheme&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Get &lt;a href=&quot;http://koolkraft.net/DimmedInkResharperRubyInSteel.zip&quot;&gt;DimmedInkResharperRubyInSteel (Visual Studio 2008)&lt;/a&gt;&lt;br/&gt;
Get &lt;a href=&quot;http://koolkraft.net/DimmedInkResharperRubyInSteel_vs2k5.zip&quot;&gt;DimmedInkResharperRubyInSteel (Visual Studio 2005)&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2008-03-08 07:52:43 +0100</published>
        <link>http://flanders.co.nz/2008/03/08/color-scheme-for-visual-studio-with-resharper-and-ruby-in/</link>
      </item>
      
    
      
      <item>
        <title>Visual studio gallery</title>
        <description>&lt;p&gt;This morning I found an announcement for the &lt;a href=&quot;http://visualstudiogallery.com&quot;&gt;visual studio tools gallery&lt;/a&gt;. I went and had a look they have collected heaps of tools, some free most of them not into a website.&lt;/p&gt;

&lt;p&gt;I promptly downloaded a couple of tools. One of them is something I recently discovered I need, local history. That is in between check-ins a file can also change but that isn&amp;#8217;t recorded in source control so i can&amp;#8217;t revert or view differences. Turns out that there is a &lt;a href=&quot;http://www.codeplex.com/VLH2005/&quot;&gt;project on codeplex&lt;/a&gt; that allows you to do just that. It&amp;#8217;s called local history :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.codeplex.com/Project/Download/FileDownload.aspx?ProjectName=VLH2005&amp;amp;DownloadId=26632&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <published>2008-02-27 18:56:45 +0100</published>
        <link>http://flanders.co.nz/2008/02/27/visual-studio-gallery/</link>
      </item>
      
    
      
      <item>
        <title>Consuming YouTube using XLinq</title>
        <description>&lt;p&gt;I had to implement an integration with youtube for a client yesterday. Google provides API&amp;#8217;s but they are for Java and PHP. I&amp;#8217;m using C# for this project. So I decided to use XLinq to fetch the feeds and parse them into classes for what I needed.&lt;/p&gt;

&lt;p&gt;I only need titles, movies and a thumbnail for each item. So I haven&amp;#8217;t implemented all of the properties. And I am impressed. From having no exposure to XLinq whatsoever to having it parse feeds and being able to use those feeds in my monorail application took me about an hour. Since this is the very first time I use XLinq I imagine there is room for improvement, please tell me so when I&amp;#8217;m wrong.&lt;/p&gt;

&lt;p&gt;The classes I show here can be used as follows:&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;31&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;32&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;33&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;34&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;35&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;36&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;37&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;38&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;39&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;40&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;41&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;42&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;43&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;44&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;45&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;46&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;47&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;48&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;49&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;50&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;51&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;52&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;53&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;54&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;55&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;56&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;57&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;58&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;59&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;60&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;61&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;62&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;63&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;64&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;65&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;66&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;67&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;68&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;69&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;70&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;71&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;72&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;73&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;74&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;75&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;76&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;77&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;78&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;79&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;80&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;81&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;82&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;83&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;84&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;85&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;86&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;87&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;88&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;89&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;90&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;91&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;92&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;93&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;94&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;95&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;96&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;97&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;98&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;99&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;100&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;101&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;102&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;103&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;104&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;YouTubePlayList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoadForUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;&amp;lt;username&amp;gt;&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ForEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;span style=&amp;quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//gdata.youtube.com/feeds/api/playlists/&amp;lt;&amp;lt;playlistid&amp;gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;YouTubeCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoadFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ForEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;, &amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MovieUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;YouTubeCollection&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;YouTubeItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;YouTubeCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;YouTubeCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IEnumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;YouTubeItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YouTubeCollection&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LoadFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feed&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;XNamespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.w3.org/2005/Atom&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;XNamespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;http://search.yahoo.com/mrss/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YouTubeCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Elements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;entry&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Elements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                    &lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YouTubeItem&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                        &lt;span class=&quot;n&quot;&gt;Title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                        &lt;span class=&quot;n&quot;&gt;MovieUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;el&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Elements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                                 &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;application/x-shockwave-flash&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                                 &lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                         &lt;span class=&quot;n&quot;&gt;ThumbnailUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;el&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Elements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;thumbnail&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                                         &lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;YouTubePlayList&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;YouTubePlayListItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;YouTubePlayList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;YouTubePlayList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IEnumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;YouTubePlayListItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YouTubePlayList&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LoadForUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://gdata.youtube.com/feeds/api/users/{0}/playlists&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feed&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;XNamespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.w3.org/2005/Atom&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;XNamespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.google.com/g/2005&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YouTubePlayList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Elements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;entry&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                                       &lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YouTubePlayListItem&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                                         &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                                             &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                                             &lt;span class=&quot;n&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;feedLink&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;href&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                                         &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;[DataContract]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;YouTubePlayListItem&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [DataMember]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [DataMember]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;[DataContract]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;YouTubeItem&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [DataMember]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Id&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MovieUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [DataMember]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [DataMember]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MovieUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [DataMember]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThumbnailUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;

</description>
        <published>2008-02-27 02:28:51 +0100</published>
        <link>http://flanders.co.nz/2008/02/27/consuming-youtube-using-xlinq/</link>
      </item>
      
    
      
      <item>
        <title>Using Ruby to Generate LightSpeed Models - Part 4</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://flanders.co.nz/2008/04/09/updated-my-lightspeed-model-generator/&quot;&gt;UPDATE&lt;/a&gt;: I have an update &lt;a href=&quot;http://flanders.co.nz/2008/04/09/updated-my-lightspeed-model-generator/&quot;&gt;here&lt;/a&gt; with a new version and the location on google code where the project is hosted now.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the previous 3 parts (&lt;a href=&quot;http://flanders.co.nz/blog/archive/2008/02/05/using-ruby-to-generate-lightspeed-models&#8212;part-1.aspx&quot;&gt;part 1&lt;/a&gt;, &lt;a href=&quot;http://flanders.co.nz/blog/archive/2008/02/05/using-ruby-to-generate-lightspeed-models.aspx&quot;&gt;part 2&lt;/a&gt;, &lt;a href=&quot;http://flanders.co.nz/blog/archive/2008/02/06/using-ruby-to-generate-lightspeed-models&#8212;part-3.aspx&quot;&gt;part 3&lt;/a&gt;) we talked about getting the meta data out of the database and generating the lightspeed entities in memory.&lt;/p&gt;

&lt;p&gt;I won&amp;#8217;t put the code listings up in this blog post but instead will give you a &lt;a href=&quot;http://flanders.co.nz/wp-content/uploads/2008/04/generate_ls_models.zip&quot;&gt;link&lt;/a&gt; to the complete code :) You can download the express edition of &lt;a href=&quot;http://www.mindscape.co.nz/Products/lightspeed/default.aspx&quot;&gt;LightSpeed&lt;/a&gt; and try it for yourself if you want.&lt;/p&gt;

&lt;p&gt;Instead I&amp;#8217;ll talk about how you can use the ruby script to generate the models from an existing database.&lt;/p&gt;

&lt;p&gt;It adds the generated files to the visual studio project file in the same directory or you can specify one.&lt;/p&gt;

&lt;p&gt;Currently it only supports Sql Server 2005. You need to create a project first in visual studio so we have a project file to add items to.&lt;/p&gt;

&lt;p&gt;To use it you have to tell it which database it has to find by putting a database.yml file in your visual studio project directory.&lt;/p&gt;

&lt;p&gt;The content of that database.yml file may look as follows&lt;/p&gt;

&lt;h1&gt;on windows you can use the following connection string&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;#
# sqlserver:
# database: northwind
# host: localhost
# username: sa
# password: MaybePassword123
#
#
# on OSX and Linux you can connect to sql server through odbc (iODBC or unixODBC in combination with FreeTDS)
#
# sqlserver:
# dsn: NorthwindSql
# username: sa
# password: MaybePassword123
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;when you&amp;#8217;ve done that you can execute it like shown in the screenshot below:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://flanders.co.nz/blog/images/UsingRubytoGenerateLightSpeedModelsPart4_1018B/Terminalscreenshot.jpg&quot;&gt;&lt;img src=&quot;http://flanders.co.nz/blog/images/UsingRubytoGenerateLightSpeedModelsPart4_1018B/Terminalscreenshot_thumb.jpg&quot; alt=&quot;Terminal-screenshot&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have a database.yml file in the directory and I execute the command ruby &amp;lt;&gt; on linux and OSX you can chmod +x that path and then you don&amp;#8217;t have to type ruby anymore.&lt;/p&gt;

&lt;p&gt;That will generate the models for your database provided that your database conforms to the conventions needed for LightSpeed.&lt;/p&gt;

&lt;p&gt;The next step would be to open visuals studio and build the project. The files got added in visual studio every entity are 2 files one with the generated code and one empty one that you can use to implement behavior on the model if you would want to.&lt;/p&gt;

&lt;p&gt;The first picture shows how the solution explorer looks and the second one shows the results of the build without having touched one file after generation.&lt;/p&gt;

&lt;p&gt;In the download there is a folder db which contains a slightly modified script from the Northwind database that comes with the samples for lightspeed. I used that database because it has every type of relationship and the script did conform to the lightspeed conventions :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://flanders.co.nz/blog/images/UsingRubytoGenerateLightSpeedModelsPart4_1018B/LightSpeedGenerateTest.jpg&quot;&gt;&lt;img src=&quot;http://flanders.co.nz/blog/images/UsingRubytoGenerateLightSpeedModelsPart4_1018B/LightSpeedGenerateTest_thumb.jpg&quot; alt=&quot;LightSpeedGenerateTest&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://flanders.co.nz/blog/images/UsingRubytoGenerateLightSpeedModelsPart4_1018B/LightSpeedGenerateTestBuildResult.jpg&quot;&gt;&lt;img src=&quot;http://flanders.co.nz/blog/images/UsingRubytoGenerateLightSpeedModelsPart4_1018B/LightSpeedGenerateTestBuildResult_thumb.jpg&quot; alt=&quot;LightSpeedGenerateTestBuildResult&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fflanders.co.nz%2fblog%2farchive%2f2008%2f02%2f09%2fusing-ruby-to-generate-lightspeed-models&#8212;part-4-again.aspx&quot;&gt;&lt;img src=&quot;http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fflanders.co.nz%2fblog%2farchive%2f2008%2f02%2f09%2fusing-ruby-to-generate-lightspeed-models&#8212;part-4-again.aspx&quot; alt=&quot;kick it on DotNetKicks.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2008-02-09 05:27:42 +0100</published>
        <link>http://flanders.co.nz/2008/02/09/using-ruby-to-generate-lightspeed-models-part-4-again/</link>
      </item>
      
    
      
      <item>
        <title>More on Mac KeyBindings</title>
        <description>&lt;p&gt;The biggest problem so far I&amp;#8217;ve had when switching from windows to a mac were the shortcut keys, and mostly the inconsistency thereof. It turns out there is a way to manipulate the keybindings for all cocoa apps, which should make them consistent across all good cocoa citizens. Firefox isn&amp;#8217;t one of those citizens neither is firefox 3.0.&lt;/p&gt;

&lt;p&gt;I uninstalled quicksilver because I couldn&amp;#8217;t work out what it would do for me and didn&amp;#8217;t want to spend time figuring it out either. This liberated my ctrl-space for visual studio.  I remapped alt-insert to alt-i and that works for me. Then I brought some consistency in the way my keys behave across all cocoa apps.&lt;/p&gt;

&lt;p&gt;I solved my problem with the shortcut keys by following the instructions that can be found in the following posts.    &lt;br/&gt;
They talk about editing a file by hand and saving it, but for those that like a GUI there is one for it.&lt;/p&gt;

&lt;p&gt;The GUI application: &lt;a href=&quot;http://www.cocoabits.com/KeyBindingsEditor/&quot;&gt;KeyBindingsEditor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The links with some instructions and background information.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.macromates.com/2005/key-bindings-for-switchers/&quot;&gt;http://blog.macromates.com/2005/key-bindings-for-switchers/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.hcs.harvard.edu/~jrus/site/cocoa-text.html&quot;&gt;http://www.hcs.harvard.edu/~jrus/site/cocoa-text.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The last post lists a couple of predefined keybinding files like one for emacs&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.hcs.harvard.edu/~jrus/site/KeyBindings/Emacs%20Esc%20Bindings.dict&quot;&gt;http://www.hcs.harvard.edu/~jrus/site/KeyBindings/Emacs%20Esc%20Bindings.dict&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;or windows key bindings&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.hcs.harvard.edu/~jrus/site/KeyBindings/Emacs%20Esc%20Bindings.dict&quot;&gt;http://www.hcs.harvard.edu/~jrus/site/KeyBindings/Emacs%20Esc%20Bindings.dict&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Guess which ones I took and it&amp;#8217;s not emacs ;) I actually just took a couple of keybindings. The ones that I use the most&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/***** ARROWS *****/ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;    &amp;#8221;&lt;sup&gt;\UF700&amp;#8221;  &lt;/sup&gt; = &amp;#8220;moveToBeginningOfParagraph:&amp;#8221;;    /&lt;em&gt; C-up         Move to beginning of paragraph &lt;/em&gt;/   &lt;br/&gt;
    &amp;#8221;&lt;sup&gt;\UF701&amp;#8221;  &lt;/sup&gt; = &amp;#8220;moveToEndOfParagraph:&amp;#8221;;          /&lt;em&gt; C-down       Move to end of paragraph &lt;/em&gt;/&lt;/p&gt;

&lt;p&gt;    &amp;#8221;&lt;sup&gt;$\UF700&amp;#8221; &lt;/sup&gt; = &amp;#8220;moveToBeginningOfParagraphAndModifySelection:&amp;#8221;;   &lt;br/&gt;
                                                    /&lt;em&gt; C-Shft-up    Select to beginning of paragraph &lt;/em&gt;/    &lt;br/&gt;
    &amp;#8221;&lt;sup&gt;$\UF701&amp;#8221; &lt;/sup&gt; = &amp;#8220;moveToEndOfParagraphAndModifySelection:&amp;#8221;;    &lt;br/&gt;
                                                    /&lt;em&gt; C-Shft-down  Select to end of paragraph &lt;/em&gt;/&lt;/p&gt;

&lt;p&gt;    &amp;#8221;&lt;sup&gt;\UF702&amp;#8221;  &lt;/sup&gt; = &amp;#8220;moveWordLeft:&amp;#8221;;                  /&lt;em&gt; C-left       Move word left &lt;/em&gt;/   &lt;br/&gt;
    &amp;#8221;&lt;sup&gt;\UF703&amp;#8221;  &lt;/sup&gt; = &amp;#8220;moveWordRight:&amp;#8221;;                 /&lt;em&gt; C-right      Move word right &lt;/em&gt;/&lt;/p&gt;

&lt;p&gt;    &amp;#8220;$&lt;sup&gt;\UF702&amp;#8221; &lt;/sup&gt; = &amp;#8220;moveWordLeftAndModifySelection:&amp;#8221;;   &lt;br/&gt;
                                                    /&lt;em&gt; C-Shft-left  Select word left &lt;/em&gt;/    &lt;br/&gt;
    &amp;#8220;$&lt;sup&gt;\UF703&amp;#8221; &lt;/sup&gt; = &amp;#8220;moveWordRightAndModifySelection:&amp;#8221;;    &lt;br/&gt;
                                                    /&lt;em&gt; C-Shft-right Select word right &lt;/em&gt;/&lt;/p&gt;

&lt;p&gt;/&lt;strong&gt;&lt;strong&gt;&lt;em&gt; CTRL + LETTERS &lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;/&lt;/p&gt;

&lt;p&gt;    &amp;#8221;&lt;sup&gt;a&amp;#8221;       &lt;/sup&gt; = &amp;#8220;selectAll:&amp;#8221;;                     /&lt;em&gt; C-a          Select all &lt;/em&gt;/&lt;/p&gt;

&lt;p&gt;    &amp;#8221;&lt;sup&gt;x&amp;#8221;       &lt;/sup&gt; = &amp;#8220;cut:&amp;#8221;;                           /&lt;em&gt; C-x          Cut &lt;/em&gt;/   &lt;br/&gt;
    &amp;#8221;&lt;sup&gt;c&amp;#8221;       &lt;/sup&gt; = &amp;#8220;copy:&amp;#8221;;                          /&lt;em&gt; C-c          Copy &lt;/em&gt;/    &lt;br/&gt;
    &amp;#8221;&lt;sup&gt;v&amp;#8221;       &lt;/sup&gt; = &amp;#8220;paste:&amp;#8221;;                         /&lt;em&gt; C-v          Paste &lt;/em&gt;/&lt;/p&gt;

&lt;p&gt;    &amp;#8221;&lt;sup&gt;z&amp;#8221;       &lt;/sup&gt; = &amp;#8220;undo:&amp;#8221;;                          /&lt;em&gt; C-z          Undo &lt;/em&gt;/   &lt;br/&gt;
    &amp;#8221;&lt;sup&gt;y&amp;#8221;       &lt;/sup&gt; = &amp;#8220;redo:&amp;#8221;;                          /&lt;em&gt; C-y          Redo &lt;/em&gt;/&lt;/p&gt;

&lt;p&gt;    &amp;#8221;&lt;sup&gt;s&amp;#8221;       &lt;/sup&gt; = &amp;#8220;save:&amp;#8221;;                          /&lt;em&gt; C-s          Save &lt;/em&gt;/   &lt;br/&gt;
    &amp;#8221;&lt;sup&gt;S&amp;#8221;       &lt;/sup&gt; = &amp;#8220;saveAs:&amp;#8221;;                        /&lt;em&gt; C-Shft-s     Save as &lt;/em&gt;/    &lt;br/&gt;
 &lt;/p&gt;
</description>
        <published>2008-02-07 10:35:01 +0100</published>
        <link>http://flanders.co.nz/2008/02/07/more-on-mac-keybindings/</link>
      </item>
      
    
      
      <item>
        <title>On software development: the myth of no maintenance etc.</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://codebetter.com/blogs/jeremy.miller/&quot;&gt;Jeremy Miller&lt;/a&gt; put a very intersting post up about the &lt;a href=&quot;http://codebetter.com/blogs/jeremy.miller/archive/2008/02/06/173994.aspx&quot;&gt;First causes in software development&lt;/a&gt;  &lt;br/&gt;
While I don&amp;#8217;t always like the how of delivering his messages, I think Jeremy is generally spot on. In fact he seems to voice my thoughts much more eloquently than I ever could. Anyway his post or series of posts is dealing with some of the choices he made concerning tools and development philosophy and it also tries to explain that while these tools seem to work today, there won&amp;#8217;t be anything stopping him if something better comes along.&lt;/p&gt;

&lt;p&gt;Now in that article he links to an article by the pragmatic programmers on the principle of DRY and orthogonality. For me the biggest problem of software development is not the techniques or the patterns but it&amp;#8217;s the actual language people use. Till this day I still don&amp;#8217;t know what orthogonality means although I understand what that word means in a development context. There are countless examples where people overcomplicate things by using difficult words, this is just one more. Anyway I digress :)&lt;/p&gt;

&lt;p&gt;The article series he&amp;#8217;s referring to is pretty interesting. If you have some time to kill I suggest you read them. It are 10 articles:   &lt;br/&gt;
&lt;a href=&quot;http://www.artima.com/intv/fixit.html&quot;&gt;Part I - Don&amp;#8217;t live with broken windows&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.artima.com/intv/dry.html&quot;&gt;Part II - Orthogonality and the DRY Principle&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.artima.com/intv/goodenough.html&quot;&gt;Part III - Good enough software&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.artima.com/intv/metadata.html&quot;&gt;Part IV - Abstraction and Detail&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.artima.com/intv/adapt.html&quot;&gt;Part V - Building adaptable systems&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.artima.com/intv/domain.html&quot;&gt;Part VI - Programming close to the domain&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.artima.com/intv/garden.html&quot;&gt;Part VII - Programming is gardening, not engineering&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.artima.com/intv/tracer.html&quot;&gt;Part VIII - Tracer Bullets and Prototypes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.artima.com/intv/defense.html&quot;&gt;Part IX - Programming defensively&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.artima.com/intv/plain.html&quot;&gt;Part X - Plain text and xml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The reason that I put these links up is not only because they are a great read but also because one of the things they say in one of the articles is that after you wrote 10 lines of code or so you&amp;#8217;re effectively in maintenance mode the green field is gone. And that couldn&amp;#8217;t be more true after I had some internal discussion about it I definitely agree with that statement and as such one of the primary goals of your development should not be on getting it out the door as quickly as possible but building it in such a way that you or somebody else can get in there and make changes without throwing away half the code base.&lt;/p&gt;

&lt;p&gt;I hope you enjoy them as much as I did&lt;/p&gt;
</description>
        <published>2008-02-06 23:36:46 +0100</published>
        <link>http://flanders.co.nz/2008/02/06/on-software-development-the-myth-of-no-maintenance-etc/</link>
      </item>
      
    
      
      <item>
        <title>Using Ruby to Generate LightSpeed Models - Part 3</title>
        <description>&lt;p&gt;First off I&amp;#8217;m writing with windows live writer again, ecto wasn&amp;#8217;t up to the job. It tried to &amp;#8220;clean&amp;#8221; my html, granted it was messy but it should leave my text untouched. The whole editing experience wasn&amp;#8217;t satisfying enough. And Ecto already seemed like the best blog editor for mac, slim pickings indeed. From my tools I expect foremost that they stay out of my way and it didn&amp;#8217;t. I just talked with &lt;a href=&quot;http://codeclimber.net.nz&quot;&gt;Simone&lt;/a&gt; about looking at making a .NET based client that runs on mono, we&amp;#8217;ll see where that plan goes because I don&amp;#8217;t really have time to do that for the moment.&lt;/p&gt;

&lt;p&gt;In the previous posts in this series (&lt;a href=&quot;http://flanders.co.nz/blog/archive/2008/02/05/using-ruby-to-generate-lightspeed-models&#8212;part-1.aspx&quot;&gt;part 1&lt;/a&gt;, &lt;a href=&quot;http://flanders.co.nz/blog/archive/2008/02/05/using-ruby-to-generate-lightspeed-models.aspx&quot;&gt;part 2&lt;/a&gt;) we discovered how to connect to the database and how to get the meta data about that database out. Maybe I should also explain why I&amp;#8217;m doing this series with &lt;a href=&quot;http://www.mindscape.co.nz/Products/lightspeed/default.aspx&quot;&gt;LightSpeed&lt;/a&gt; instead of &lt;a href=&quot;http://castleproject.org/activerecord/index.html&quot;&gt;ActiveRecord&lt;/a&gt; from &lt;a href=&quot;http://castleproject.org/&quot;&gt;Castle&lt;/a&gt; or &lt;a href=&quot;http://www.subsonicproject.com/&quot;&gt;SubSonic&lt;/a&gt; or Linq2Sql for that matter. I will definitely touch on all those orms in the coming week, but I started with LightSpeed because it&amp;#8217;s the easiest ORM I&amp;#8217;ve ever used.&lt;/p&gt;

&lt;p&gt;This post will deal with actually doing something useful with that meta data. Today we&amp;#8217;re going to generate the represenation of the entities and their properties. Tomorrow we&amp;#8217;ll deal with actually generating the files from the the in-memory presentation we&amp;#8217;re generating today.&lt;/p&gt;

&lt;p&gt;We&amp;#8217;re going to need 2 classes in addition to the LightSpeedRepository class. One to represent an entity and one to represent a property. The goal is for tomorrow to render the entities as complete as possible with validation attributes etc.&lt;/p&gt;

&lt;p&gt;And without further ado here are the specs we&amp;#8217;re going to build:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;LightSpeedRepository Conversion      
- should convert a given table to light speed metadata       
- should convert a given table without relations to a light speed entity definition       
- should convert a given table with a m:1 relation to a light speed entity definition       
- should convert a given table with a 1:m relation to a light speed entity definition       
- should convert a given table with a m:n relation to a light speed entity definition 



LightSpeedProperty      
- should allow for a property to be set       
- should return a predicate for booleans       
- should return a predicate for booleans       
- should return a sql type       
- should be a lightSpeed property 



LightSpeedEntity      
- should have properties, has many, belongs to and through associations       
- should create a valid property name if one doesn&#8217;t exists already in the through association properties       
- should create a valid property name if one doesn&#8217;t exists already in the has many properties       
- should create a valid property name if one doesn&#8217;t exists already in the belongs to properties       
- should create a valid property name if one doesn&#8217;t exists already in the properties       
- should create a valid property name if one already exists in the through association properties       
- should create a valid property name if one already exists in the has many properties       
- should create a valid property name if one already exists in the belongs to properties       
- should create a valid property name if one already exists in the properties       
- should create a valid property name if two already exist in the through association properties       
- should create a valid property name if two already exist in the has many properties       
- should create a valid property name if two already exist in the belongs to properties       
- should create a valid property name if two already exist in the properties
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;#8217;s start with looking at the LightSpeedProperty first. The attributes on this class are implemented using some simple &lt;a href=&quot;http://en.wikipedia.org/wiki/Metaprogramming&quot;&gt;metaprogramming&lt;/a&gt;. This class will represent a field in a LightSpeed entity and will take care of rendering that properly into the c# file. We actually create the data in the LightSpeedRepository class.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;31&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LightSpeedProperty&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;kp&quot;&gt;attr_accessor&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:attributes&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@attributes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;no&quot;&gt;LightSpeedProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_methods&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create_methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;define_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;=&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;vi&quot;&gt;@attributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;predicate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w(primary_key foreign_key unique nullable)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;any?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;define_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predicate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;?&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;vi&quot;&gt;@attributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;In the LightSpeed entity class we describe the actual Entity. I monkey patched Array so that I could ask it the question if it has a particular property. To avoid naming conflicts we check for properties that exist already and otherwise give them a generic new name by appending a number.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;31&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;32&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;33&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;34&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;35&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;36&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;37&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;38&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;39&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;40&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;41&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;42&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;43&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;44&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;45&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;46&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;47&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;48&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Array&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;has_property?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LightSpeedEntity&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;kp&quot;&gt;attr_accessor&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:belongs_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:has_many&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:through_associations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:namespace&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@properties&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@belongs_to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@has_many&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@through_associations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=[]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create_property_name_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;tname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build_property_name_from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#when the property exists try with a higher number&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_property_name_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has_property?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;tname&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;has_property?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;has_property?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tname&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;has_property?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tname&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;has_property?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tname&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;through_associations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;has_property?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tname&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;build_property_name_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;And this brings us to our last class of today the Repository class. We mixin the DB::MetaData module we created yesterday. Define a read_only property entities, make sure we can set a namespace for our generated entities. The first step is to transform the meta data into data that we can use to represent a LightSpeed Entity. The second and last step of today is to generate the entities with the lightspeed meta data. We have to skip the primary key because that is defined by convention in LightSpeed.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;31&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;32&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;33&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;34&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;35&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;36&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;37&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;38&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;39&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;40&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;41&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;42&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;43&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;44&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;45&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;46&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;47&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;48&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;49&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;50&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;51&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;52&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;53&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;54&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;55&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;56&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;57&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;58&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;59&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;60&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;61&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;62&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;63&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;64&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;65&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;66&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;67&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;68&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;69&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;70&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;71&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;72&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;73&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;74&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;75&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;76&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;77&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;78&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;79&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;80&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;81&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;82&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;83&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;84&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;85&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;86&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;87&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;88&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;89&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;90&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;91&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;92&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;93&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;94&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;95&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LightSpeedRepository&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MetaData&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;kp&quot;&gt;attr_reader&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:entities&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;kp&quot;&gt;attr_accessor&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:namespace&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@entities&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to_light_speed_meta_data&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;tables&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collect&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;col_infos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_info_for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;field_infos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col_infos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collect&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;underscore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;ss&quot;&gt;:sql_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:sql_type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;ss&quot;&gt;:max_length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:max_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;ss&quot;&gt;:nullable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:is_nullable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;ss&quot;&gt;:precision&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:precision&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;ss&quot;&gt;:foreign_key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foreign_key?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;ss&quot;&gt;:primary_key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;primary_key?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;ss&quot;&gt;:unique&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:is_unique&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero?&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:class_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;singularize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;camelize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:fields&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;field_infos&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate_entities&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;meta_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to_light_speed_meta_data&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;meta_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;md&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;vi&quot;&gt;@entities&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate_entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;md&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;vi&quot;&gt;@entities&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate_entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LightSpeedEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;meta_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:class_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;meta_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:fields&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LightSpeedProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_property_name_from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;underscore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;camelize&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;primary_key?&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate_belongs_to_relation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foreign_key?&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate_has_many_relations&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;meta_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;generate_through_associations&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;meta_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate_belongs_to_relation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;field_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_property_name_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;field_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;underscore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;humanize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titleize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\s/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;ss&quot;&gt;:class_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_belongs_to_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;field_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;underscore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;camelize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;singularize&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate_has_many_relations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;hms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collect_has_many_relations&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;meta_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;hms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collect&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;         &lt;span class=&quot;n&quot;&gt;hm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_property_name_from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:class_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pluralize&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;         &lt;span class=&quot;n&quot;&gt;hm&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate_through_associations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;tas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collect_through_associations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;tas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;ta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:end_tables&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;et&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;through_associations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;ss&quot;&gt;:through&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:through_table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;singularize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;ss&quot;&gt;:class_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;et&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;camelize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;singularize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_property_name_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;et&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;camelize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;

</description>
        <published>2008-02-05 20:51:04 +0100</published>
        <link>http://flanders.co.nz/2008/02/05/using-ruby-to-generate-lightspeed-models-part-3/</link>
      </item>
      
    
      
      <item>
        <title>Using Ruby to Generate LightSpeed models - Part 2</title>
        <description>&lt;p&gt;This is the &lt;a href=&quot;http://flanders.co.nz/blog/archive/2008/02/05/using-ruby-to-generate-lightspeed-models&#8212;part-1.aspx&quot;&gt;&lt;/a&gt;second post in the series on generating &lt;a href=&quot;http://www.mindscape.co.nz/Products/lightspeed/default.aspx&quot;&gt;LightSpeed&lt;/a&gt; entities with the help from ruby.&lt;/p&gt;

&lt;p&gt;In the &lt;a href=&quot;http://flanders.co.nz/blog/archive/2008/02/05/using-ruby-to-generate-lightspeed-models&#8212;part-1.aspx&quot;&gt;previous post&lt;/a&gt; we connected successfully to the database and were able to execute some sql.&lt;/p&gt;

&lt;p&gt;At the end of the series I&amp;#8217;ll make the code downloadable.&lt;/p&gt;

&lt;p&gt;Today I&amp;#8217;d like to talk about the metadata we&amp;#8217;ll be needing from the database. We&amp;#8217;re going to need a list of tables, we&amp;#8217;re going to need to know about the columns of each table. Furthermore we want to exclude the primary keys in the case of LightSpeed. And we also want to know about relationships whether they are has many, belongs to or has many and belongs to many.&lt;/p&gt;

&lt;p&gt;I put all this in a separate module because I&amp;#8217;ll probably need that meta data for another thing later :). The above requirements translate in the following spec:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;LightSpeedRepository DB::MetaData  

- should have meta data  

- should resolve the table name from a string  

- should resolve the table name from a hash  

- should identify a given column as not being a foreign key  

- should identify a foreign key given a valid column info  

- should not identify a given column as being a primary key  

- should identify a given column as being a primary key  

- should not identify a table as a join table under the correct conditions  

- should identify a table as a join table under the correct conditions  

- should return an empty array of has many relations when there are none  

- should return the has many relations given a table  

- should return the end point tables for a given through association  

- should return the through associations  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The first thing we&amp;#8217;re going to need are the sql statements. At this point I only need the statements for sql 2005 so and these are the ones I used.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sql_statements&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;ss&quot;&gt;:tables&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;SELECT table_name as name FROM information_schema.Tables Where table_type=&amp;#39;Base Table&amp;#39; ORDER BY table_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;ss&quot;&gt;:column_info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;select object_name(c.object_id) as table_name, c.column_id, c.name, type_name(system_type_id) as sql_type, max_length, is_nullable, precision, scale, &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;          convert(bit,(Select COUNT(*) from sys.indexes as i &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;            inner join sys.index_columns as ic&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;              on ic.index_id = i.index_id and ic.object_id = i.object_id &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;            inner join sys.columns as c2 on ic.column_id = c2.column_id and i.object_id = c2.object_id&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;          WHERE i.is_primary_key = 0 &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;            and i.is_unique_constraint = 0 and ic.column_id = c.column_id and i.object_id=c.object_id)) as is_index,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;          is_identity, &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;          is_computed, &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;          convert(bit,(Select Count(*) from sys.indexes as i inner join sys.index_columns as ic&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;              on ic.index_id = i.index_id and ic.object_id = i.object_id &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;            inner join sys.columns as c2 on ic.column_id = c2.column_id and i.object_id = c2.object_id&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;          WHERE (i.is_unique_constraint = 1) and ic.column_id = c.column_id and i.object_id=c.object_id)) as is_unique&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;          from sys.columns as c&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;          WHERE object_name(c.object_id)  in (select table_name  FROM information_schema.Tables WHERE table_type = &amp;#39;Base Table&amp;#39;) &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;          order by table_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;ss&quot;&gt;:primary_keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;SELECT i.name AS index_name,ic.index_column_id,key_ordinal,c.name AS column_name,TYPE_NAME(c.user_type_id)AS column_type &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;                ,is_identity,OBJECT_NAME(i.object_id) as table_name FROM sys.indexes AS i INNER JOIN sys.index_columns AS ic ON &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;                i.object_id = ic.object_id AND i.index_id = ic.index_id INNER JOIN sys.columns AS c ON ic.object_id = c.object_id&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;                AND c.column_id = ic.column_id WHERE i.is_primary_key = 1 order by table_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;ss&quot;&gt;:foreign_keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;SELECT f.name AS foreign_key_name, object_name(f.parent_object_id) AS table_name , col_name(fc.parent_object_id, fc.parent_column_id) AS child_id&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;                ,object_name (f.referenced_object_id) AS parent_table ,col_name(fc.referenced_object_id, fc.referenced_column_id) AS parent_id FROM sys.foreign_keys AS f&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;                INNER JOIN sys.foreign_key_columns AS fc ON f.object_id = fc.constraint_object_id where OBJECT_NAME(f.parent_object_id) not in (&amp;#39;sysdiagrams&amp;#39;)  order by table_name&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Those statements contain all the data we need an probably a little bit more too, if we add a little metaprogramming we can have ruby generate that metadata data for us :)&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;populate&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;no&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MetaData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql_statements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;nb&quot;&gt;instance_variable_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;@&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetch_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;              
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;n&quot;&gt;sql_statements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each_key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;   &lt;span class=&quot;n&quot;&gt;define_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_for&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;     &lt;span class=&quot;nb&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:tables&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;/p&gt;

&lt;p&gt;So now we&amp;#8217;ve satisfied our first spec the module now contains all the meta data we need. The rest of the specs require far less code than what we wrote here. Below you&amp;#8217;ll find the code needed to satisfy all of the specs. It are just a couple of methods that check some conditions and a couple of predicates we&amp;#8217;re going to need later on. The get_endpoint_tables method is the only one that doesn&amp;#8217;t explain itself easily. That method returns the table names from tables that are the second level in a has many and belongs to many scenario.&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;31&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;32&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;33&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;34&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;35&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;36&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;37&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;38&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;39&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;40&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;41&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;42&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;43&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;44&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;45&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;46&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;47&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;48&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;49&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;50&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;51&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;52&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;53&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;54&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;55&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;56&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;57&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;58&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;59&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;60&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;61&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;62&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;63&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;64&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;65&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;66&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;67&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;68&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;69&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;70&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;71&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;72&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;73&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;74&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;75&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;76&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;77&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;78&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;79&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;80&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;81&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;82&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;83&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;84&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;85&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;86&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;87&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;88&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;89&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;90&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;91&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;92&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;93&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;94&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;95&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;96&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;97&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;98&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;99&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;100&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;101&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;102&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;DB&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;MetaData&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;kp&quot;&gt;attr_accessor&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:tables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:primary_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:foreign_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:column_info&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;vi&quot;&gt;@db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DbiSqlServer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;populate&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;populate&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;no&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MetaData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql_statements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;nb&quot;&gt;instance_variable_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;@&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetch_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;              
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;collect_has_many_relations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;fks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foreign_keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:parent_table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;fks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collect&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;underscore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:class_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;singularize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;underscore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;camelize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;       &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compact&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;collect_through_associations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;fks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foreign_keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:parent_table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;fks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collect&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:through_table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;underscore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:end_tables&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_endpoint_tables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;join_table?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compact&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_endpoint_tables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;through_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;fks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foreign_keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;through_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:parent_table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;fks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collect&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:parent_table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;underscore&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:parent_table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compact&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_belongs_to_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;fks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foreign_keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:child_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:parent_table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;join_table?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;fks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foreign_keys_for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;fks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;primary_key?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;pks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;primary_keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:column_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;pks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foreign_key?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;fks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foreign_keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:child_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;fks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_a?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sql_statements&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;ss&quot;&gt;:tables&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;SELECT table_name as name FROM information_schema.Tables Where table_type=&amp;#39;Base Table&amp;#39; ORDER BY table_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;ss&quot;&gt;:column_info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;select object_name(c.object_id) as table_name, c.column_id, c.name, type_name(system_type_id) as sql_type, max_length, is_nullable, precision, scale, &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;              convert(bit,(Select COUNT(*) from sys.indexes as i &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;                inner join sys.index_columns as ic&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;                  on ic.index_id = i.index_id and ic.object_id = i.object_id &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;                inner join sys.columns as c2 on ic.column_id = c2.column_id and i.object_id = c2.object_id&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;              WHERE i.is_primary_key = 0 &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;                and i.is_unique_constraint = 0 and ic.column_id = c.column_id and i.object_id=c.object_id)) as is_index,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;              is_identity, &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;              is_computed, &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;              convert(bit,(Select Count(*) from sys.indexes as i inner join sys.index_columns as ic&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;                  on ic.index_id = i.index_id and ic.object_id = i.object_id &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;                inner join sys.columns as c2 on ic.column_id = c2.column_id and i.object_id = c2.object_id&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;              WHERE (i.is_unique_constraint = 1) and ic.column_id = c.column_id and i.object_id=c.object_id)) as is_unique&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;              from sys.columns as c&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;              WHERE object_name(c.object_id)  in (select table_name  FROM information_schema.Tables WHERE table_type = &amp;#39;Base Table&amp;#39;) &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;              order by table_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;ss&quot;&gt;:primary_keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;SELECT i.name AS index_name,ic.index_column_id,key_ordinal,c.name AS column_name,TYPE_NAME(c.user_type_id)AS column_type &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;                    ,is_identity,OBJECT_NAME(i.object_id) as table_name FROM sys.indexes AS i INNER JOIN sys.index_columns AS ic ON &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;                    i.object_id = ic.object_id AND i.index_id = ic.index_id INNER JOIN sys.columns AS c ON ic.object_id = c.object_id&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;                    AND c.column_id = ic.column_id WHERE i.is_primary_key = 1 order by table_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;ss&quot;&gt;:foreign_keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;SELECT f.name AS foreign_key_name, object_name(f.parent_object_id) AS table_name , col_name(fc.parent_object_id, fc.parent_column_id) AS child_id&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;                    ,object_name (f.referenced_object_id) AS parent_table ,col_name(fc.referenced_object_id, fc.referenced_column_id) AS parent_id FROM sys.foreign_keys AS f&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;s2&quot;&gt;                    INNER JOIN sys.foreign_key_columns AS fc ON f.object_id = fc.constraint_object_id where OBJECT_NAME(f.parent_object_id) not in (&amp;#39;sysdiagrams&amp;#39;)  order by table_name&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;       &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;     &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;     &lt;span class=&quot;n&quot;&gt;sql_statements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each_key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;       &lt;span class=&quot;n&quot;&gt;define_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_for&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;         &lt;span class=&quot;nb&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;       &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:tables&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;     &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;/p&gt;
</description>
        <published>2008-02-05 09:16:52 +0100</published>
        <link>http://flanders.co.nz/2008/02/05/using-ruby-to-generate-lightspeed-models/</link>
      </item>
      
    
      
      <item>
        <title>Compiling Mono and IronRuby on OSX Leopard</title>
        <description>&lt;p&gt;I tried to compile IronRuby on OS X (leopard) with the dmg I downloaded from the mono website, and that didn&amp;#8217;t work.&lt;/p&gt;

&lt;p&gt;I then uninstalled that mono version by running monoUninstall.sh and proceeded to get mono from subversion. I&amp;#8217;m putting these steps on my blog more for future reference when I decide to reinstall my box for some reason.&lt;/p&gt;

&lt;p&gt;Download &lt;a href=&quot;ftp://ftp.gnu.org/gnu/gettext/gettext-0.17.tar.gz&quot;&gt;gettext&lt;/a&gt;, &lt;a href=&quot;http://pkgconfig.freedesktop.org/releases/pkg-config-0.23.tar.gz&quot;&gt;pkgconfig&lt;/a&gt; and &lt;a href=&quot;ftp://ftp.gtk.org/pub/glib/2.12/glib-2.12.12.tar.bz2&quot;&gt;glib2.0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;extract the archives and build them in the following order gettext, pkgconfig, glib2.0&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./configure &#8211;prefix=/opt/local
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At this point it would be wise to set the PKG_CONFIG_PATH environment variable. I added the following line to ~/.bash_profile&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export PKG_CONFIG_PATH=&quot;/usr/local/lib/pkgconfig:/opt/local/lib/pkgconfig&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;next it&amp;#8217;s time to check out the mono sources from their repositories&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~/
mkdir tools
mkdir mono
svn co svn://anonsvn.mono-project.com/source/trunk/mono
svn co svn://anonsvn.mono-project.com/source/trunk/mcs
svn co svn://anonsvn.mono-project.com/source/trunk/libgdiplus
svn co svn://anonsvn.mono-project.com/source/trunk/moon
svn co svn://anonsvn.mono-project.com/source/trunk/olive
svn co svn://anonsvn.mono-project.com/source/trunk/gtk-sharp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;checking those out will take a while&lt;/p&gt;

&lt;p&gt;now go into the mono directory and build mono&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd mono
./autogen.sh &#8211;prefix=/opt/local/mono &#8211;with-preview=yes &#8211;with-moonlight=yes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;#8211;with-preview enables the .NET 3.5 features that have been implemented so far
&amp;#8211;with-moonlight enables support for moonlight&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;make
sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will also take some time and when it completes you can check if mono is installed by typing mono -V&lt;/p&gt;

&lt;p&gt;That&amp;#8217;s it for mono, now onto IronRuby&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~/tools
svn co http://ironruby.rubyforge.org/svn/trunk ironruby
sudo gem install pathname2
rake compile mono=1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that should be all :)&lt;/p&gt;

&lt;p&gt;UPDATE: I&amp;#8217;ve got &lt;a href=&quot;http://flanders.co.nz/2008/12/30/building-ironruby-with-mono-on-osx/&quot;&gt;new instructions&lt;/a&gt; for building IronRuby&lt;/p&gt;
</description>
        <published>2008-02-05 04:32:36 +0100</published>
        <link>http://flanders.co.nz/2008/02/05/compiling-mono-and-ironruby-on-osx-leopard/</link>
      </item>
      
    
      
      <item>
        <title>Using Ruby to Generate LightSpeed Models - Part 1</title>
        <description>&lt;p&gt;This is the first in a multi-part post on a little ruby application I wrote to generate models for &lt;a href=&quot;http://www.mindscape.co.nz/Products/lightspeed/default.aspx&quot;&gt;LightSpeed&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The ultimate goal is to consume the entities we generate in this series with IronRuby and perform some data access.&lt;/p&gt;

&lt;p&gt;Today I&amp;#8217;ll post the code I wrote for creating the database connection. At this moment there is only code there to connect tho sql server. But I may want to add providers later if I decide to keep using this code. That&amp;#8217;s why some bits are in a separate module.&lt;/p&gt;

&lt;p&gt;This are the specs I wrote for the connection manager. The connection manager is the class that reads the database config, gets a connection and executes sql statements. I think this code is pretty simple so I won&amp;#8217;t put a line-by-line explanation.&lt;/p&gt;

&lt;p&gt;It uses DBI to connect to the database and reads out the results of the executed sql statement. In the next post I&amp;#8217;ll talk about getting the metadata that is required from sql server.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DB::DbiSqlServer  
- should return a connection  
- should say it&#8217;s an ODBC connection when a dsn is provided  
- should return the correct connection string for an ODBC connection
&lt;/code&gt;&lt;/pre&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;31&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;32&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;33&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;34&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;35&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;36&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;37&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;38&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;39&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;40&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;41&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;42&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;43&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;44&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;45&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;46&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;47&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;48&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;49&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;50&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;51&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;52&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;53&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;54&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;55&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;56&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;57&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;58&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;59&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;60&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;61&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;62&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;63&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;64&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;65&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;66&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;67&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;68&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;69&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;70&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;71&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;72&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;73&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;74&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;ruby&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;DB&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SqlConnectionManager&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;no&quot;&gt;DEFAULT_CONFIG_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/../config/database.yml&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;kp&quot;&gt;attr_reader&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:connection_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:connection&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DEFAULT_CONFIG_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_a?&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;initialize_config&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;read_config&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sqlserver&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;initialize_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;YAML&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DEFAULT_CONFIG_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;vi&quot;&gt;@config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;vi&quot;&gt;@connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;odbc?&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;dsn&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DbiSqlServer&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SqlConnectionManager&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;connection&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;              &lt;span class=&quot;vi&quot;&gt;@connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DBI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;vi&quot;&gt;@connection&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;connection_string&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;odbc?&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;s2&quot;&gt;&amp;quot;DBI:ODBC:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;dsn&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;s2&quot;&gt;&amp;quot;DBI:ADO:Provider=SQLOLEDB;Data Source=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;host&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;;Initial Catalog=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;database&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;;User ID=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;;Password=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fetch_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql_statement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sql_statement&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetch&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                    &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                    &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each_with_name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                        &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_sym&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;execute_non_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql_statement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;          &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sql_statement&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;



</description>
        <published>2008-02-04 11:00:27 +0100</published>
        <link>http://flanders.co.nz/2008/02/04/using-ruby-to-generate-lightspeed-models-part-1/</link>
      </item>
      
    
      
      <item>
        <title>OSX and Resharper get in eachothers way</title>
        <description>&lt;p&gt;And today I discovered that using unity severly interferes with my flow in visual studio.&lt;/p&gt;

&lt;p&gt;I have ctrl-space mapped to quicksilver on mac osx which would mean I have to rebind either autocompletion or quicksilver, and it sure as hell won&amp;#8217;t be my autocompletion. I think it will be too hard to unset that binding in my brain I&amp;#8217;ve been using ctrl-space for about 10 years now, without even thinking about it. I even try to use it in Word but of course that doesn&amp;#8217;t work ;)&lt;/p&gt;

&lt;p&gt;The typing speed is also a little bit too sluggish for me to actually enjoy working in visual studio in unity mode. I decided to get back to a ruby project in textmate :)&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ll try later on if it&amp;#8217;s doable through full screen mode in fusion; and if that doesn&amp;#8217;t work, I&amp;#8217;ll have no other option than to boot into vista if I have to do .NET work.&lt;/p&gt;

&lt;p&gt;There is another key missing from the mac keyboard, the insert key (and I have to admit about this one I&amp;#8217;m definitely not that happy - what were they thinking??). So far the keyboard is the hardest to get used to. I mean those would probably be my most used shortcuts : ctrl - arrow, home, end, alt-insert and i now have to learn how to use different combinations and different ones in every program.&lt;/p&gt;

&lt;p&gt;In other news, today i found myself using alt-C and alt-V on my windows keyboard when I wanted to copy paste. I think all the shortcuts have no right or wrong combination but it won&amp;#8217;t be long before I master the ones on the mac that&amp;#8217;s for sure.&lt;/p&gt;

&lt;p&gt;I feel a lot better having that off my chest.&lt;/p&gt;
</description>
        <published>2008-02-04 05:39:21 +0100</published>
        <link>http://flanders.co.nz/2008/02/04/osx-and-resharper-get-in-eachothers-way/</link>
      </item>
      
    
      
      <item>
        <title>Got a macbook pro earlier this week</title>
        <description>&lt;p&gt;Last week I ordered a macbook pro (2.6Ghz - 4GB RAM - 200GB/7200RPM HD) through the shop.&lt;/p&gt;

&lt;p&gt;It took about 10 days to arrive. I found that the process was ok but there is a little bit less communication than when I ordered from Dell.
It will come as no suprise that the packaging was very well done :)&lt;/p&gt;

&lt;p&gt;I &amp;#8216;ve been using it for the last couple of days. It took me some time to get used to the different keyboard shortcuts that&amp;#8217;s for sure.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m happy with my purchase but I do wonder what the harm is in providing a separate home and end key. If somebody knows how I can get a consistent word selection going ( I mean like ctrl - arrow or shift - ctrl - arrow) that would be of great help because that&amp;#8217;s what annoys me most.
I set up a full copy of vista on my bootcamp partitition, it had to be the 32-bit so I can&amp;#8217;t take full advantage of my 4GB of ram, but that&amp;#8217;s the way it has to be because otherwise fusion won&amp;#8217;t load my boot camp partitition.&lt;/p&gt;

&lt;p&gt;I first tried with a copy of vista I generated with the &lt;a href=&quot;http://www.vlite.net/&quot;&gt;vlite&lt;/a&gt; tool I &lt;a href=&quot;http://flanders.co.nz/blog/archive/2007/09/21/vlite-stripping-down-your-vista-install.aspx&quot;&gt;blogged&lt;/a&gt; about earlier but it appears that the full version actually runs faster than the lite version I generated. This will probably be mostly because of my own stupidity than the tool. With the full version I could install all the software from the bootcamp cd which may be why it works faster.&lt;/p&gt;

&lt;p&gt;The next couple of days were spent bonding with my new macbook. Being pleasantly surprised that visual studio 2008 with resharper runs at a really acceptable speed for day to day development through fusion with unity turned on. I&amp;#8217;ll probably boot into windows when I have to do purely .NET development.&lt;/p&gt;

&lt;p&gt;And now I did want to know of textmate is as good as they say it is or if it&amp;#8217;s just hype for nothing. I&amp;#8217;ve been using textmate the last couple of days for doing some ruby development and i have to admit that while it&amp;#8217;s no visual studio for c# it&amp;#8217;s definitely an enjoyable experience. I still have to memorise a lot of shortcuts but I&amp;#8217;m well on my way :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://codeclimber.net.nz/archive/2008/01/21/18-almost-free-applications-on-my-Mac.aspx&quot;&gt;Simone&amp;#8217;s post on 18 almost free applications for Mac OSX&lt;/a&gt; got me everything I needed. I downloaded 2 or 3 extra programs. Like simone I&amp;#8217;m trying to go as much native mac apps as possible. So far I have everything I need and need my windows box only for windows related development tools like LightSpeed, LLBLGen, SQL Server and Visual Studio etc.&lt;/p&gt;

&lt;p&gt;7zX or something along those lines for zipping and unzipping 7z archives.&lt;br/&gt;
MacFUSE and NTFS-3G for mac OSX so that I can mount read/writeable NTFS volumes.&lt;/p&gt;

&lt;p&gt;Another thing I wonder is if there maybe is a tree for navigating in finder. I&amp;#8217;m having a hard time compiling IronRuby on OSX but I also haven&amp;#8217;t really that hard yet.&lt;/p&gt;

&lt;p&gt;Thanks to Simone I wrote this blog post with Ecto. I couldn&amp;#8217;t believe how easy it was to connect to a windows vpn and remote desktop in there to fix up some servers.&lt;/p&gt;

&lt;p&gt;My first week as a mac user was a success :D&lt;/p&gt;
</description>
        <published>2008-02-03 10:12:03 +0100</published>
        <link>http://flanders.co.nz/2008/02/03/got-a-mac-book-pro-earlier-this-week/</link>
      </item>
      
    
      
      <item>
        <title>Back to contracting</title>
        <description>&lt;p&gt;Yesterday I gave notice at &lt;a href=&quot;http://www.xero.com&quot;&gt;Xero&lt;/a&gt;, my last day will be mid February (15/02).&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s been fun working with the team of people at Xero, but I just want my own time back. I won&amp;#8217;t go into more detail around the reasons for my leaving Xero but we part ways on friendly terms.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve been getting more and more into Ruby again and I really like that language. So I&amp;#8217;m mostly interested in jobs that will allow me to use those dynamic languages. I can now take some time off to finish the book I&amp;#8217;m writing and to do some coding on a couple of things I have in mind.&lt;/p&gt;

&lt;p&gt;Ideal places for me to work would be a place that practices Agile development et al. I&amp;#8217;ll be going back to contracting probably unless somebody makes me a really great offer :)&lt;/p&gt;
</description>
        <published>2008-01-16 20:54:33 +0100</published>
        <link>http://flanders.co.nz/2008/01/16/back-to-contracting/</link>
      </item>
      
    
      
      <item>
        <title>New view engines in the MvcContrib project for asp.net mvc</title>
        <description>&lt;p&gt;When I got back from visiting my parents over the christmas holiday I checked the &lt;a href=&quot;http://www.codeplex.com/MVCContrib&quot;&gt;MvcContrib&lt;/a&gt; project to find out that both Andrew Peter&amp;#8217;s &lt;a href=&quot;http://andrewpeters.net/2007/12/19/introducing-nhaml-an-aspnet-mvc-view-engine/&quot;&gt;NHAML view engine&lt;/a&gt; and my &lt;a href=&quot;http://flanders.co.nz/blog/archive/2007/12/15/xsltviewengine-patch-submitted.aspx&quot;&gt;XSLT view engine&lt;/a&gt; have been accepted in the trunk of those projects.&lt;/p&gt;

&lt;p&gt;What&amp;#8217;s left to do for me is provide a sample site that shows usage of the view engine.  This has been a very rewarding experience so far :). I found out about IViewSourceLoader to get the path to the current view file for example.&lt;/p&gt;

&lt;p&gt;I also learnt a new trick to increase my test coverage and be able to test the content of the rendered view.&lt;/p&gt;

&lt;p&gt;To get the mvc contrib project you can either download it from the &lt;a href=&quot;http://www.codeplex.com/MVCContrib/Release/ProjectReleases.aspx&quot;&gt;releases section&lt;/a&gt; on the codeplex site.&lt;/p&gt;

&lt;p&gt;Or you can check out the source code and build it yourself from the &lt;a href=&quot;http://mvccontrib.googlecode.com/svn/trunk&quot;&gt;subversion repository&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-12-26 05:47:25 +0100</published>
        <link>http://flanders.co.nz/2007/12/26/new-view-engines-in-the-mvccontrib-project-for-aspnet-mvc/</link>
      </item>
      
    
      
      <item>
        <title>And another view engine for ASP.NET MVC has been born</title>
        <description>&lt;p&gt;Andrew Peters wrote a &lt;a href=&quot;http://andrewpeters.net/2007/12/19/introducing-nhaml-an-aspnet-mvc-view-engine/&quot;&gt;view engine for HAML&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;NHaml (pronounced enamel) is a pure .NET implementation of the popular &lt;a href=&quot;http://rubyonrails.com/&quot;&gt;Rails&lt;/a&gt;&lt;a href=&quot;http://haml.hamptoncatlin.com/&quot;&gt;Haml&lt;/a&gt; view engine. From the Haml website:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Haml is a markup language that‘s used to cleanly and simply describe the XHTML of any web document, without the use of inline code. Haml functions as a replacement for inline page templating systems such as PHP, ERB, and ASP. However, Haml avoids the need for explicitly coding XHTML into the template, because it is actually an abstract description of the XHTML, with some code to generate dynamic content.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Andrew and I share the same dislike for the xml family. XML is not fun to type, and I think his haml engine eases a lot of that pain. It results in far more readable views too.&lt;/p&gt;

&lt;p&gt;2 view engines in one week and both from Wellington. Nice :)&lt;/p&gt;

&lt;p&gt;del.icio.us Tags: &lt;a href=&quot;http://del.icio.us/popular/aspnetmvc&quot;&gt;aspnetmvc&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-12-19 21:22:54 +0100</published>
        <link>http://flanders.co.nz/2007/12/19/and-another-view-engine-for-aspnet-mvc-has-been-born/</link>
      </item>
      
    
      
      <item>
        <title>Implementing filters in asp.net mvc</title>
        <description>&lt;p&gt;One of the things I wanted for the framework I&amp;#8217;m building for Xero was to implement filters.&lt;/p&gt;

&lt;p&gt;I have a first pass of those ready.. didn&amp;#8217;t take me to long to implement either.  I only tested the before filters I haven&amp;#8217;t gotten round to testing the After filter. I have to do a demo today that demonstrates databinding (like the castle project solved it.)  What I&amp;#8217;m putting on my blog here is very much a proof of concept implementation and you should not use this in a production environment.&lt;/p&gt;

&lt;p&gt;Here&amp;#8217;s how I went about it. In this post I&amp;#8217;ll show how I implemented a filter that directs anonymous users to the login page.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Define a couple enumerations&lt;/li&gt;
&lt;/ol&gt;


&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;Before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;BeforeAndAfter&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecureFor&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;Anonymous&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;n&quot;&gt;PerUser&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;ol&gt;
&lt;li&gt;Create an IFilter interface&lt;/li&gt;
&lt;/ol&gt;


&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Xero.Mvc.Extensions.Filters&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IFilter&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WhenToExecute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;n&quot;&gt;IHttpContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create an AbstractFilter base class&lt;/li&gt;
&lt;/ol&gt;


&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Xero.Mvc.Extensions.Filters&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [AttributeUsage(AttributeTargets.Class, Inherited = true, AllowMultiple = true)]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AbstractFilter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IFilter&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Xero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mvc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;whenToExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IHttpContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AbstractFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Xero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mvc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;whenToExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;whenToExecute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;whenToExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IHttpContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpContext&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Xero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mvc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WhenToExecute&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;whenToExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;ol&gt;
&lt;li&gt;Create a SecureFilter base class&lt;/li&gt;
&lt;/ol&gt;


&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections.Generic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Xero.Mvc.Extensions.Filters&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [AttributeUsage(AttributeTargets.Class, Inherited = true, AllowMultiple = true)]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AbstractSecureFilter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AbstractFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IFilter&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecureFor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secureFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AbstractSecureFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Xero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mvc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;whenToExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecureFor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secureFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;whenToExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secureFor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secureFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecureFor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecureFor&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secureFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RedirectToLogin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;HttpContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;~/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;ol&gt;
&lt;li&gt;Implement the concrete AnonymousUsersFilter&lt;/li&gt;
&lt;/ol&gt;


&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;31&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;32&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;33&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;34&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;35&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;36&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;37&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;38&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;39&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;40&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;41&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;42&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;43&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;44&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;45&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;46&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;47&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;48&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;49&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Xero.Mvc.Extensions.Filters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Xero.Mvc.Tasklist.Model.EntityClasses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Xero.Mvc.LLBLGenIntegration.Services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections.Generic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Xero.Mvc.Extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Xero.Mvc.Tasklist.Filters&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;    [AttributeUsage(AttributeTargets.Class, Inherited = true, AllowMultiple = true)]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AnonymousUsersFilter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AbstractSecureFilter&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AnonymousUsersFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Xero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mvc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;whenToExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecureFor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secureFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;whenToExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secureFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AnonymousUsersFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Xero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mvc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;whenToExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecureFor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secureFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;whenToExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secureFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userService&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AnonymousUsersFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Xero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mvc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;whenToExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;whenToExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecureFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PerUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SecureFor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Xero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mvc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SecureFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Anonymous&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;userId&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;n&quot;&gt;RedirectToLogin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SecureFor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Xero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mvc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SecureFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PerUser&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;n&quot;&gt;RedirectToLogin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SecureFor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Xero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mvc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SecureFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PerUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentUser&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FindOneById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Guid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;userId&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;allowedUsers&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;allowedUsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;usr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToUpperInvariant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToUpperInvariant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;n&quot;&gt;RedirectToLogin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;ol&gt;
&lt;li&gt;Implement the filter on a controller&lt;/li&gt;
&lt;/ol&gt;


&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;na&quot;&gt;[AnonymousUsersFilter(Xero.Mvc.Extensions.Execute.Before, SecureFor.Anonymous)]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SecureControllerBase&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SmartXeroController&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;ol&gt;
&lt;li&gt;There are a couple of places where you can implement the execution of the filter logic. I chose to do it before the actual controller class is being loaded. To do that I had to create a handler and a routehandler&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;7.a The MvcHandler&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;28&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;29&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;30&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;31&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;32&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;33&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;34&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;35&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;36&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;37&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;38&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;39&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;40&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;41&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;42&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;43&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;44&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;45&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;46&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;47&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;48&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;49&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;50&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;51&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;52&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;53&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;54&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;55&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;56&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Web.Mvc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Xero.Mvc.Core.Exceptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Xero.Mvc.Extensions.Filters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Linq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Xero.Mvc.Extensions&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;XeroMvcHandler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MvcHandler&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProcessRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IHttpContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RequestContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NoRequestContextException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controllerName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RequestContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RouteData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;controller&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controllerType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetControllerType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;controllerName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;controllerType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NoControllerFoundException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RequestContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;IFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filters&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controllerType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetCustomAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;filters&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WhenToExecute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Xero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mvc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Before&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WhenToExecute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Xero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mvc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BeforeAndAfter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ForEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                        &lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                        &lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;IController&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controllerInstance&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetControllerInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;controllerType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;ControllerContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controllerContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ControllerContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RequestContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controllerInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;controllerInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;controllerContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;n&quot;&gt;filters&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WhenToExecute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Xero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mvc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;After&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WhenToExecute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Xero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mvc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BeforeAndAfter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ForEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                        &lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                        &lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;7b. The Route Handler&lt;/p&gt;

&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Web.Mvc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Xero.Mvc.Extensions&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;XeroMvcRouteHandler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IRouteHandler&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;cp&quot;&gt;#region IRouteHandler Members&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IHttpHandler&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GetHttpHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RequestContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requestContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XeroMvcHandler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RequestContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requestContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;        &lt;span class=&quot;cp&quot;&gt;#endregion&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;ol&gt;
&lt;li&gt;And the last step is to tell your application that it needs to use the new route handler. You can do that in the &lt;code&gt;global.asax.cs&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;figure class=&#8217;code&#8217;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#8217;line-number&#8217;&gt;1&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;2&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;3&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;4&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;5&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;6&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;7&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;8&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;9&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;10&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;11&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;12&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;13&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;14&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;15&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;16&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;17&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;18&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;19&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;20&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;21&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;22&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;23&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;24&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;25&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;26&lt;/span&gt;
&lt;span class=&#8217;line-number&#8217;&gt;27&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;&lt;code class=&#8217;csharp&#8217;&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SetupRoutes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;c1&quot;&gt;// Note: Change Url= to Url=&amp;quot;[controller].mvc/[action]/[id]&amp;quot; to enable &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;c1&quot;&gt;//       automatic support on IIS6 &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;RouteTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Route&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;Url&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Login/Default.aspx&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;Defaults&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;RouteHandler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;XeroMvcRouteHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Our custom route handler&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;RouteTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Route&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;Url&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;[controller]/[action]/[id]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;Defaults&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;RouteHandler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;XeroMvcRouteHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;n&quot;&gt;RouteTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Route&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;Url&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Default.aspx&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;Defaults&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;      &lt;span class=&quot;n&quot;&gt;RouteHandler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;XeroMvcRouteHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#8217;line&#8217;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;a href=&quot;http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fflanders.co.nz%2fblog%2farchive%2f2007%2f12%2f17%2fimplementing-filters-in-asp.net-mvc.aspx&quot;&gt;&lt;img src=&quot;http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fflanders.co.nz%2fblog%2farchive%2f2007%2f12%2f17%2fimplementing-filters-in-asp.net-mvc.aspx&quot; alt=&quot;kick it on DotNetKicks.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-12-16 23:03:51 +0100</published>
        <link>http://flanders.co.nz/2007/12/16/implementing-filters-in-aspnet-mvc/</link>
      </item>
      
    
      
      <item>
        <title>ASP.NET MVC XsltViewEngine, patch submitted to the contrib project</title>
        <description>&lt;p&gt;I just submitted a patch to the &lt;a href=&quot;http://mvccontrib.org&quot;&gt;mvc contrib project&lt;/a&gt; that contains the xslt view engine I wrote for &lt;a href=&quot;http://xero.com&quot;&gt;Xero&lt;/a&gt; without any of the dependencies from our own libraries or commercial components.&lt;/p&gt;

&lt;p&gt;The bulk of the work is done in a class called XmlResponseBuilder which builds the xml document that is going to be transformed by the xsl stylesheet. Almost all the rest of the code is there just to build up this document.&lt;/p&gt;

&lt;p&gt;The implementation of IView and IViewFactory were the easy bits :)&lt;/p&gt;

&lt;p&gt;To use the View engine you need to take the following steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Get the MVC Contrib project from google code&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;repository url: &lt;a href=&quot;http://mvccontrib.googlecode.com/svn/trunk/&quot;&gt;http://mvccontrib.googlecode.com/svn/trunk/&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If the patch hasn&amp;#8217;t been applied yet you can download it from: &lt;a href=&quot;http://www.codeplex.com/Project/Download/FileDownload.aspx?ProjectName=MVCContrib&amp;amp;DownloadId=23748&quot;&gt;http://www.codeplex.com/Project/Download/FileDownload.aspx?ProjectName=MVCContrib&amp;DownloadId;=23748&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;After downloading the patch you can apply it to the downloaded mvc contrib project.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I use a base controller to ensure that the correct data is passed to the view factory. This is the base controller class:&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;public abstract class XeroControllerBase : Controller&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        private readonly XsltViewData vData = new XsltViewData();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected IHttpSessionState Session&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get { return ControllerContext.HttpContext.Session; }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public XeroControllerBase()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            ViewFactory = new XsltViewFactory();  &lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        #region Add datasource methods&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected void AddDataSource(IXmlConvertible dataSource)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            vData.DataSources.Add(new XslDataSource(dataSource));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected void AddDataSource(IXmlConvertible dataSource, string rootName)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            vData.DataSources.Add(new XslDataSource(rootName, dataSource));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        #endregion&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        #region Add variable methods&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected void AddPageVar(string key, string value)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            vData.PageVars.Add(key, value);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        #endregion&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        #region Add message methods&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected void AddErrorMessage(string message)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            vData.Messages.Add(new ErrorMessage(message));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected void AddErrormessage(string message, string controlID)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            vData.Messages.Add(new ErrorMessage(message, controlID));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected void AddInfoMessage(string message)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            vData.Messages.Add(new InfoMessage(message));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected void AddInfoMessage(string message, string controlID)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            vData.Messages.Add(new InfoMessage(message, controlID));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected void AddAlertMessage(string message)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            vData.Messages.Add(new AlertMessage(message));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected void AddAlertMessage(string message, string controlID)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            vData.Messages.Add(new AlertMessage(message, controlID));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected void AddInfoHtmlMessage(string message)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            vData.Messages.Add(new InfoHtmlMessage(message));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected void AddInfoHtmlMessage(string message, string controlID)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            vData.Messages.Add(new InfoHtmlMessage(message, controlID));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected void AddErrorHtmlMessage(string message)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            vData.Messages.Add(new ErrorHtmlMessage(message));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected void AddErrorHtmlmessage(string message, string controlID)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            vData.Messages.Add(new ErrorHtmlMessage(message, controlID));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected void AddAlertHtmlMessage(string message)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            vData.Messages.Add(new AlertHtmlMessage(message));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected void AddAlertHtmlMessage(string message, string controlID)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            vData.Messages.Add(new AlertHtmlMessage(message, controlID));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        #endregion&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        #region RenderView method hides&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected new virtual void RenderView(string viewName)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            RenderView(viewName, string.Empty, vData);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected new void RenderView(string viewName, string masterName)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            RenderView(viewName, string.Empty, vData);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected new void RenderView(string viewName, object viewData)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            RenderView(viewName, string.Empty, vData);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        #endregion &lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;del.icio.us Tags: &lt;a href=&quot;http://del.icio.us/popular/aspnetmvc&quot;&gt;aspnetmvc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fflanders.co.nz%2fblog%2farchive%2f2007%2f12%2f15%2fxsltviewengine-patch-submitted.aspx&quot;&gt;&lt;img src=&quot;http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fflanders.co.nz%2fblog%2farchive%2f2007%2f12%2f15%2fxsltviewengine-patch-submitted.aspx&quot; alt=&quot;kick it on DotNetKicks.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-12-14 17:29:30 +0100</published>
        <link>http://flanders.co.nz/2007/12/14/xsltviewengine-patch-submitted/</link>
      </item>
      
    
      
      <item>
        <title>ASP.NET mvc taken for a test drive</title>
        <description>&lt;p&gt;A couple of days ago Microsoft released a CTP of the much discussed ASP.NET MVC handler. I decided to take it for a test drive.&lt;/p&gt;

&lt;p&gt;At first I just wanted to have a look at how to use the MVC handler with the ADO.NET Entities but quickly found that I can easily replace like the view engine.&lt;/p&gt;

&lt;p&gt;So I diverted my intentions and wanted to look at how hard it would be to plug it straight into the architecture of xero.&lt;/p&gt;

&lt;p&gt;At Xero we currently use a 2 step view approach where each page transforms its output through xsl and renders html that way.  Our O/R Mapper of choice is LLBLGen Pro, who does a great job at mapping stuff but the API could be a lot nicer IMHO.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ll make my application available soon, as soon as I removed the dependencies on LLBLGen and some of our custom classes. I have to do it this way because we&amp;#8217;re a publicly listed company and I&amp;#8217;m not allowed to give out that information.&lt;/p&gt;

&lt;p&gt;Aaanyway in all it took me about 4 hours to plug in an xslt view engine and implement attribute based filters.&lt;/p&gt;

&lt;p&gt;Overall I&amp;#8217;m quite happy with what I&amp;#8217;m seeing that&amp;#8217;s in there. A couple of convenience methods like RenderText(&amp;#8230;) would be nice. It would also be cool if it could find out the name of the requested action and then pass that as the current view so you don&amp;#8217;t have to specify the name of which view you want to render all the time.&lt;/p&gt;

&lt;p&gt;We did run into some trouble while writing unit tests apparently we can&amp;#8217;t pass the view context a temp data dictionary but I&amp;#8217;m sure that will be fixed soon.&lt;/p&gt;

&lt;p&gt;So my conclusion is: There did go a fair bit amount of thought into the handler. I like what I see very much and I&amp;#8217;ll definitely keep a close eye on new developments in that space.&lt;/p&gt;

&lt;p&gt;del.icio.us Tags: &lt;a href=&quot;http://del.icio.us/popular/asp.net%20mvc&quot;&gt;asp.net mvc&lt;/a&gt;,&lt;a href=&quot;http://del.icio.us/popular/xero%20architecture&quot;&gt;xero architecture&lt;/a&gt;,&lt;a href=&quot;http://del.icio.us/popular/aspnetmvc&quot;&gt;aspnetmvc&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-12-12 19:46:46 +0100</published>
        <link>http://flanders.co.nz/2007/12/12/aspnet-mvc-taken-for-a-test-drive/</link>
      </item>
      
    
      
      <item>
        <title>Re: The difference between meta programming and IL weaving</title>
        <description>&lt;p&gt;Ayende &lt;a href=&quot;http://ayende.com/Blog/archive/2007/11/27/The-difference-between-meta-programming-and-IL-weaving.aspx&quot;&gt;replied&lt;/a&gt; to &lt;a href=&quot;http://flanders.co.nz/blog/archive/2007/11/27/mixins-in-c-3.0.aspx&quot;&gt;my post&lt;/a&gt; from this morning. His point is that the in order to be able to do meta programming Reflection.Emit isn&amp;#8217;t enough because it happens after the compilation has taken place. And in order to do meta programming you need to be able to do that during the compilation step. This is my reply, hence the title :)&lt;/p&gt;

&lt;p&gt;Meta-programming can be achieved by having the language implementation change classes or generate classes at some point. In dynamic languages that is generally at run time, it&amp;#8217;s most common use is where the data format drives the code ie. a database, csv files etc. For the sake of this discussion i&amp;#8217;m going to keep it at runtime, if meta programming occurs at compilation time it loses a lot of its power, how is it going to respond to changes at runtime like changes in the data schema.&lt;/p&gt;

&lt;p&gt;You could do this by having an interface of your implementation, If you&amp;#8217;re going to use an interface implementation you can just as well generate the class or implement the class. Another thing you need for meta programming is duck typing. So for meta programming to happen you would have to forgo things like type checking, looking for existing methods on classes etc. You would lose the biggest advantage of a statically typed language and one of the biggest reasons for having a compiler at all. So, with all due respect, I wonder at that point why use a static typed language implemented on a compiler, that will make things really hard for you, at all when you can achieve the same things in other dynamically typed languages with hardly any effort.&lt;/p&gt;

&lt;p&gt;If all you want is ruby with c# syntax, then you will lose exactly what makes ruby so attractive its more natural syntax. At this moment the IronRuby implementation still needs a lot of work but you could use Ruby.NET and get a good working version of Ruby that runs and compiles on the CLR. Or use ironpython that implementation is a lot more usable at this moment and you can do interop with .NET assemblies.&lt;/p&gt;

&lt;p&gt;With Reflection.Emit you can get similar things. You can&amp;#8217;t modify existing classes but when you would be using something like an IoC container that keeps track of dynamic proxy wrappers that are being generated so that it can always use the latest proxy wrapper, that way you could achieve almost the same thing. This won&amp;#8217;t be the fastest method around but it would give you most the needed abilities. You would still need at least some interfaces and know about those interfaces upfront. After all MSIL is much like a dynamic language.&lt;/p&gt;

&lt;p&gt;I still wouldn&amp;#8217;t exactly call it meta programming but it can come close, you wouldn&amp;#8217;t be able to modify existing classes but you would be able to add functionality to classes. It also won&amp;#8217;t be the most easy thing to implement correctly but in theory it can be done.&lt;/p&gt;

&lt;p&gt;Method missing in ruby works because the ruby interpreter walks up its tree of objects looking for an implementation of method_missing but that&amp;#8217;s also what makes method missing not the fastest mechanism around.&lt;/p&gt;

&lt;p&gt;This whole discussion made me think of a generalization Greenspun&amp;#8217;s 10th law: &amp;#8220;any sufficiently complicated program in a statically-typechecked language contains an ad-hoc, informally-specified bug-ridden slow implementation of a dynamically-checked language.&amp;#8221; ;)&lt;/p&gt;

&lt;p&gt;What would the implementation of IDynamicObject be ? Would it suddenly drop the type checking for implementing classes and defer that to runtime? How would you like to see IDynamicObject happening without losing static typing along the way ? I would like to find out these things interest me tremendously, I&amp;#8217;m always looking for ways to make C# more dynamic but I don&amp;#8217;t want to lose static typing along the way.  I would like to use C# instead of C++ for speed and use IronRuby for the rest for example, shifting those languages one era along.&lt;/p&gt;

&lt;p&gt;del.icio.us Tags: &lt;a href=&quot;http://del.icio.us/popular/Ruby&quot;&gt;Ruby&lt;/a&gt;,&lt;a href=&quot;http://del.icio.us/popular/Ironruby&quot;&gt;Ironruby&lt;/a&gt;,&lt;a href=&quot;http://del.icio.us/popular/C#%203.0&quot;&gt;C# 3.0&lt;/a&gt;,&lt;a href=&quot;http://del.icio.us/popular/meta%20programming&quot;&gt;meta programming&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-11-27 07:34:33 +0100</published>
        <link>http://flanders.co.nz/2007/11/27/re-the-difference-between-meta-programming-and-il-weaving/</link>
      </item>
      
    
      
      <item>
        <title>Getting mixin like behavior in C# 3.0</title>
        <description>&lt;p&gt;UPDATE: I titled this post wrong. I should have said that you can mimic Mixins to a certain extend with extensions methods.  But extension methods are exactly that, &lt;strong&gt;Exten(d)&lt;/strong&gt;sions of classes. These methods only have access to the public interface of a class you. You also need to specify a using statement with the namespace of your extension class to every class you want to be using the extended object in. Extension methods are syntactic sugar for what you used to do with static helper methods.  That are IMHO the most important differences with a mixin because instead of mixing in functionality you are now extending an existing objects. So the title of the post used to be Mixins in C# 3.0.  And now is getting mixin like behavior in C# 3.0&lt;/p&gt;

&lt;p&gt;Yesterday Jeremy Miller put a post up with a &lt;a href=&quot;http://codebetter.com/blogs/jeremy.miller/archive/2007/11/25/what-do-you-want-in-c-vnext.aspx&quot;&gt;list of features&lt;/a&gt; he would like to see added to the next version of C#. I don&amp;#8217;t agree with everything on that list and some of it is already here.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ll take his points and add my comments to them.:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Mixins (I&amp;#8217;ll demonstrate how to get mixin like behavior in C#)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Symbols =&gt; useless, a symbol is nothing but an interned string. C# is a static language why on earth would you want to go and add non statically typed features to that language&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hashes =&gt; Hashes are already a languages feature in C# 3.0, they are called dictionaries.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Automatic delegation =&gt; as Ayende said: Mixins&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Metaprogramming =&gt; no objection here although you can do it now with reflection emit&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make virtual the default to make mocking easier.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Ayende has got a similar &lt;a href=&quot;http://www.ayende.com/Blog/archive/2007/11/26/C-vNext.aspx&quot;&gt;reply up on his blog&lt;/a&gt; and he adds a couple of features.     &lt;br/&gt;
I agree with his features so I won&amp;#8217;t be commenting on them except for asking &lt;em&gt;when do we get those&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;Now the bigger problem I&amp;#8217;ve got with this is I quite like the distinction of capabilities from one language to the next. Like say Ruby vs. C# there are things that can be easily or better done using c# and there are things that are easier using ruby. &lt;strong&gt;However why aren&amp;#8217;t you using Ruby if all you want are language features from Ruby in C# ? &lt;/strong&gt;Ruby is a beautiful language and it&amp;#8217;s not just because of the features, they make it even nicer. It&amp;#8217;s because of the syntax and the freedom.&lt;/p&gt;

&lt;p&gt;I think Ayende clearly gets the benefits because he uses boo a lot. I tend to use Ruby a lot more than I do boo.&lt;/p&gt;

&lt;p&gt;Now let&amp;#8217;s get on to what is the title of this post.&lt;/p&gt;

&lt;p&gt;The way I see it a Mixin is a way to add additional and common logic to classes, you can&amp;#8217;t do that in C# at this moment but you can get mixin like behavior by using extension methods.&lt;/p&gt;

&lt;p&gt;And this can be achieved by using extension methods in 2 different ways. The &lt;a href=&quot;http://msdn2.microsoft.com/en-us/vcsharp/bb625996.aspx&quot;&gt;first approach has been documented by Bill Wagner&lt;/a&gt; but for the record I only found out about it after I had written my little test application to show you what I think is the best way of implementing Mixins. A mixin is often compared to an interface and it&amp;#8217;s implementation (you can&amp;#8217;t use an abstract class because that could break your inheritance chain in the long run, interfaces are the correct way to implement them)&lt;/p&gt;

&lt;p&gt;The first method is to extend an interface and by adding that interface and the Extension methods namespace to your code file you get all those methods mixed into your class. Without the interface it doesn&amp;#8217;t work. For simplicity I&amp;#8217;ll use a IList in reality I would have somewhat more complex objects. There is only one thing that doesn&amp;#8217;t feel too right to me and that is that every class you&amp;#8217;re going to use it in needs to know about the extension methods location. I would like to see that if you implement it  on a class it gets propagated whenever you use an instance of that class. Anyway let&amp;#8217;s see some code:&lt;/p&gt;

&lt;p&gt;The first step is to define an interface that we can extend later.&lt;/p&gt;

&lt;p&gt;using System.Collections.Generic;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;namespace Mixins.Mixins&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;    public interface IAuditable&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        IList&lt;string&gt; Auditors{ get; }&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The next step is to define the extension methods&lt;/p&gt;

&lt;p&gt;using System.Collections.Generic;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;namespace Mixins.Mixins.Auditable&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;    public static class AuditableMixin&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        public static bool HasBeenAudited(this IAuditable targetClass)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            return targetClass.Auditors.Count &gt; 0;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public static bool HasBeenAuditedBy(this IAuditable targetClass, string name)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            return targetClass.Auditors.Contains(name);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public static IList&lt;string&gt; AddAuditor(this IAuditable targetClass, string name)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            targetClass.Auditors.Add(name);&lt;/p&gt;

&lt;p&gt;            return targetClass.Auditors;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public static IList&lt;string&gt; RemoveAuditor(this IAuditable targetClass, string name)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            if (HasBeenAuditedBy(targetClass, name))&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                targetClass.Auditors.Remove(name);&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            return targetClass.Auditors;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;And the last step is to create an actual object that will have our mixin.&lt;/p&gt;

&lt;p&gt;using Mixins.Mixins;&lt;/p&gt;

&lt;p&gt;using System.Collections.Generic;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;//Extend our object with the mixin methods&lt;/p&gt;

&lt;p&gt;using Mixins.Mixins.Auditable;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;namespace Mixins&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;    public class DataRecord : IAuditable&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        private List&lt;string&gt; auditors;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public DataRecord()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            auditors = new List&lt;string&gt;();&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public string Name&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get;&lt;/p&gt;

&lt;p&gt;            set;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public string Email&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get;&lt;/p&gt;

&lt;p&gt;            set;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        #region IAuditable Members&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public IList&lt;string&gt; Auditors&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get { return auditors; }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        #endregion&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Now to test it I used this console app:&lt;/p&gt;

&lt;p&gt;using System;&lt;/p&gt;

&lt;p&gt;using System.Collections.Generic;&lt;/p&gt;

&lt;p&gt;using System.Linq;&lt;/p&gt;

&lt;p&gt;using System.Text;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;// Extend our object with the mixin methods&lt;/p&gt;

&lt;p&gt;using Mixins.Mixins.Auditable;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;namespace Mixins&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;    class Program&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        static void Main(string[] args)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            DataRecord record = new DataRecord();&lt;/p&gt;

&lt;p&gt;            record.AddAuditor(&amp;#8220;Ivan Porto Carrero&amp;#8221;);&lt;/p&gt;

&lt;p&gt;            record.AddAuditor(&amp;#8220;Kirk Jackson&amp;#8221;);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            Console.WriteLine(&amp;#8220;The current auditors are: &amp;#8220;);&lt;/p&gt;

&lt;p&gt;            record.Auditors.ToList().ForEach(auditor =&gt; Console.WriteLine(auditor));&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            Console.WriteLine();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            record.RemoveAuditor(&amp;#8220;Kirk Jackson&amp;#8221;);&lt;/p&gt;

&lt;p&gt;            Console.WriteLine(&amp;#8220;The current auditors are (after removal): &amp;#8220;);&lt;/p&gt;

&lt;p&gt;            record.Auditors.ToList().ForEach(auditor =&gt; Console.WriteLine(auditor));&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;The second way I had in mind doesn&amp;#8217;t provide everything I get from this first way and was by extending a base class. I&amp;#8217;ll drop that explanation and just go for the conclusion.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;As I said before the only thing that doesn&amp;#8217;t make extension methods to be complete mixins is the fact that you can&amp;#8217;t actually mix it into a class, you can get really close but not all the way there. Now that isn&amp;#8217;t such a huge problem, it gives you a bit more granular control. Another thought I have about this is, extension methods don&amp;#8217;t have access to the private variables of your class only to the public interface of your class. That is also a limitation that proper mixins don&amp;#8217;t have.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;What do you think ?&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;del.icio.us Tags: &lt;a href=&quot;http://del.icio.us/popular/C#%203.0&quot;&gt;C# 3.0&lt;/a&gt;,&lt;a href=&quot;http://del.icio.us/popular/mixins&quot;&gt;mixins&lt;/a&gt;,&lt;a href=&quot;http://del.icio.us/popular/programming&quot;&gt;programming&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-11-26 18:51:07 +0100</published>
        <link>http://flanders.co.nz/2007/11/26/mixins-in-c-30/</link>
      </item>
      
    
      
      <item>
        <title>Testing SSL on Vista</title>
        <description>&lt;p&gt;Today I had the requirement to add SSL encryption to some of the pages in one of my projects.&lt;/p&gt;

&lt;p&gt;To test this I remembered that IIS6 had a tool SelfSSL and tried to use that.. failing my first attempt I also saw a folder OpenSSL in my tools folder. At which point i turned to google and google came up with this &lt;a href=&quot;http://weblogs.asp.net/scottgu/archive/2007/04/06/tip-trick-enabling-ssl-on-iis7-using-self-signed-certificates.aspx&quot;&gt;link to Scott Gu&amp;#8217;s blog&lt;/a&gt;. I&amp;#8217;m stoked about the fact that IIS7 has this ability built into it. Following the steps he outlines there helped me get going really quickly.&lt;/p&gt;

&lt;p&gt;Thanks  Scott :)&lt;/p&gt;
</description>
        <published>2007-11-20 01:41:43 +0100</published>
        <link>http://flanders.co.nz/2007/11/20/testing-ssl-on-vista/</link>
      </item>
      
    
      
      <item>
        <title>Ruby-In-Steel is giving intellisense for ironruby in VS</title>
        <description>&lt;p&gt;The guys over at &lt;a href=&quot;http://sapphiresteel.com&quot;&gt;Sapphire Steel&lt;/a&gt; have been doing great work with the current implementation of &lt;a href=&quot;http://www.ironruby.net/&quot;&gt;IronRuby&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Today they put a &lt;a href=&quot;http://www.sapphiresteel.com/IronRuby-and-IntelliSense&quot;&gt;blog post online&lt;/a&gt; showing you how far they got for implementing intellisense.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;I&amp;#8217;m pretty happy with the progress ironruby is making there are a whole bunch of people contributing. The guys from the Mono team have been following the development as well to make sure you can run ironruby on MS .NET or on Mono which makes it a really good alternative to the C-ruby implementation as soon as Ironruby has matured enough.&lt;/p&gt;

&lt;p&gt;If you have some free time and are interested in helping some really smart people implementing a programming language I suggest you check out the &lt;a href=&quot;http://www.ironruby.net/&quot;&gt;ironruby.net website&lt;/a&gt; and &lt;a href=&quot;http://rubyforge.org/mailman/listinfo/ironruby-core&quot;&gt;join the&lt;/a&gt; &lt;a href=&quot;http://rubyforge.org/mailman/listinfo/ironruby-core&quot;&gt;mailinglist&lt;/a&gt; on &lt;a href=&quot;http://rubyforge.org/projects/ironruby&quot;&gt;rubyforge&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Technorati Tags: &lt;a href=&quot;http://technorati.com/tags/ironruby&quot;&gt;ironruby&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/dynamic%20languages&quot;&gt;dynamic languages&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/ruby%20in%20steel&quot;&gt;ruby in steel&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-11-19 22:56:53 +0100</published>
        <link>http://flanders.co.nz/2007/11/19/ruby-in-steel-is-giving-intellisense-for-ironruby-in-vs/</link>
      </item>
      
    
      
      <item>
        <title>What do you expect from a (I)DE?</title>
        <description>&lt;p&gt;I&amp;#8217;ve been thinking about what I consider the bare minimum to be for a IDE.&lt;/p&gt;

&lt;p&gt;First off let me start by saying that an editor with snippets is NOT an IDE, it&amp;#8217;s an editor. The hardcore guys out there that favor that type of tool musn&amp;#8217;t be suffering from Carpal Tunnel Syndrome or the likes.&lt;/p&gt;

&lt;p&gt;I personally have found myself having a hard time accepting the fact that I have to write all my well known classes and functions completely.&lt;/p&gt;

&lt;p&gt;Here&amp;#8217;s my list of features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intellisense - Context sensitive autocompletion and discovery of members of a type + the type of member accros the board (xml, html, code files&amp;#8230;.)&lt;/li&gt;
&lt;li&gt;Refactoring - being able to safely rename methods, classes etc.&lt;/li&gt;
&lt;li&gt;Code navigation - much like ctrl-b in resharper, intellij, netbeans,&amp;#8230;.&lt;/li&gt;
&lt;li&gt;integrated debugging support accross the board&lt;/li&gt;
&lt;li&gt;background compilation for compiled languages (instant feedback)&lt;/li&gt;
&lt;li&gt;easily extensible with your own plugins (prefferably in yaml, xml etc)&lt;/li&gt;
&lt;li&gt;proper find-replace functionality with regex support&lt;/li&gt;
&lt;li&gt;code formatting and folding accross the board.&lt;/li&gt;
&lt;li&gt;and most importantly it has to let me get on with my job.&lt;/li&gt;
&lt;li&gt;integration of unit test frameworks not just a vendor specific one.&lt;/li&gt;
&lt;li&gt;integration with source control applications&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;What needs to be added to this list ?&lt;/p&gt;

&lt;p&gt;On a side note I also want to link to a post from Mike Duncan who has aggregated a bunch of really cool tools.&lt;br/&gt;
&lt;a href=&quot;http://www.mikeduncan.com/15-hot-tools-that-made-me-a-coding-paris-hilton/&quot;&gt;15 hot tools that made me a coding Paris Hilton&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/programming&quot;&gt;programming&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/ide&quot;&gt;ide&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/development%20tools&quot;&gt;development tools&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-11-15 20:04:23 +0100</published>
        <link>http://flanders.co.nz/2007/11/15/what-do-you-expect-from-a-ide/</link>
      </item>
      
    
      
      <item>
        <title>Doing a talk at the Alt.NET user group meeting</title>
        <description>&lt;p&gt;I&amp;#8217;m doing my talk on the DLR and IronRuby again on wednesday for the Alt.NET user group meeting in Wellington. If you have the time please come along.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;This is the invitation that went out:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Come along next Wednesday to our next .NET user group meeting. There&amp;#8217;s&lt;br/&gt;
not that many left before the end of the year!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Note that next weeks meeting will be at the Xero office, details&lt;br/&gt;
below. Please RSVP in a separate email to kirkj@paradise.net.nz so we&lt;br/&gt;
can organise catering.&lt;/p&gt;

&lt;p&gt;Cheers,&lt;/p&gt;

&lt;p&gt;Kirk&lt;/p&gt;

&lt;p&gt;Dynamic Runtime &amp;amp; Languages - What&amp;#8217;s it all about?&lt;br/&gt;
Wellington, Wed 21/11/2007&lt;br/&gt;
Gather at 5:55pm, starting at 6:00pm&lt;/p&gt;

&lt;p&gt;Presented by Ivan Porto Carrero&lt;/p&gt;

&lt;p&gt;Ivan will be presenting on the Dynamic Language Runtime and the Ruby&lt;br/&gt;
programming language.&lt;/p&gt;

&lt;p&gt;IronRuby is Microsoft&amp;#8217;s implementation of the Ruby language over the&lt;br/&gt;
.NET CLR, and uses the new Dynamic Language Runtime to support the&lt;br/&gt;
dynamic language features of Ruby.&lt;/p&gt;

&lt;p&gt;Come along to find out what makes dynamic languages different to&lt;br/&gt;
object-oriented languages, and what make the DLR and Ruby interesting.&lt;/p&gt;

&lt;p&gt;Ivan is a regular speaker at New Zealand .NET user group events and&lt;br/&gt;
Code Camps, and is writing a new book on IronRuby.&lt;/p&gt;

&lt;p&gt;Venue&lt;/p&gt;

&lt;p&gt;Xero&lt;br/&gt;
Level 1&lt;br/&gt;
Old Bank Building&lt;br/&gt;
98 Customhouse Quay&lt;br/&gt;
Wellington&lt;br/&gt;
(Above Workshop)&lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/Ironruby&quot;&gt;Ironruby&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/dynamic%20languages&quot;&gt;dynamic languages&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/dlr&quot;&gt;dlr&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/user%20group&quot;&gt;user group&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/xero&quot;&gt;xero&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-11-15 19:52:36 +0100</published>
        <link>http://flanders.co.nz/2007/11/15/doing-a-talk-at-the-altnet-user-group-meeting/</link>
      </item>
      
    
      
      <item>
        <title>Innovation anybody ?</title>
        <description>&lt;p&gt;Through &lt;a href=&quot;http://www.lucindigo.com&quot;&gt;Lucy McFadden&amp;#8217;s blog&lt;/a&gt; I found a bunch of slides in &lt;a href=&quot;http://www.lucindigo.com/2007/11/13/in-the-mood-for-dinner-and-a-show/&quot;&gt;this post&lt;/a&gt; talking about creativity and innovation.&lt;/p&gt;

&lt;p&gt;One of my most used expressions is: &lt;strong&gt;Discontent breeds innovation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Which is my justification for being grumpy J&lt;/p&gt;

&lt;p&gt;Anyway I’m sure this is old news to some and will be new to others:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/imootee/10-lessons-of-innovation-idris-mootee-keynote&quot;&gt;http://www.slideshare.net/imootee/10-lessons-of-innovation-idris-mootee-keynote&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I particularly like slides 7, 9 , 11&lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/innovation&quot;&gt;innovation&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/creativity&quot;&gt;creativity&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/presentations&quot;&gt;presentations&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-11-13 19:34:15 +0100</published>
        <link>http://flanders.co.nz/2007/11/13/innovation-anybody/</link>
      </item>
      
    
      
      <item>
        <title>Congratulations to Mindscape</title>
        <description>&lt;p&gt;A couple of friends of mine own the company &lt;a href=&quot;http://mindscape.co.nz&quot;&gt;Mindscape&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They were interviewed by &lt;a href=&quot;http://blogs.msdn.com/rjacobs/&quot;&gt;Ron Jacobs&lt;/a&gt; at the latest NZ tech ed in August. And that has now just been put up on channel 9 as part of the ARCast series.&lt;/p&gt;

&lt;p&gt;The interview is about their product &lt;a href=&quot;http://www.mindscape.co.nz/products/LightSpeed/&quot;&gt;LightSpeed&lt;/a&gt; which IMHO is one of the nicest ORM&amp;#8217;s out there. I&amp;#8217;ve used it in a couple of things now and I am absolutely surprised by the fact that lightspeed is a good name for it because it is really fast. If you haven&amp;#8217;t taken it for a test drive you should do so immediately.&lt;/p&gt;

&lt;p&gt;Now everybody rush over there &lt;a href=&quot;http://channel9.msdn.com/ShowPost.aspx?PostID=353738&quot;&gt;to see their interview&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Well done JB, JD and Andrew.&lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/Lightspeed&quot;&gt;Lightspeed&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/mindscape&quot;&gt;mindscape&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/ARCast&quot;&gt;ARCast&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/ORM&quot;&gt;ORM&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-11-05 22:34:13 +0100</published>
        <link>http://flanders.co.nz/2007/11/05/congratulations-to-mindscape/</link>
      </item>
      
    
      
      <item>
        <title>Boot camp session</title>
        <description>&lt;p&gt;I just finished my session at Boot Camp. A code camp organised on the south island in Christchurch.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;d like to thank everybody for coming to listen to me, and I&amp;#8217;d like to thank Ivan Towlson for his help on getting me started with wpf and for elaborating on the section mixins during my talk.&lt;/p&gt;

&lt;p&gt;As promised I&amp;#8217;ve put my slides and demos online.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://koolkraft.net/Dynamic%20Runtime%20&amp;amp;%20Languages%20-%20What&#8217;s%20it%20all%20about.ppt&quot;&gt;Powerpoint 2003 version&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://koolkraft.net/Dynamic%20Runtime%20&amp;amp;%20Languages%20-%20What&#8217;s%20it%20all%20about.pptx&quot;&gt;Powerpoint 2007 version&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://koolkraft.net/RubyMagic.zip&quot;&gt;Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope to see you again soon!&lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/wpf&quot;&gt;wpf&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/ironruby&quot;&gt;ironruby&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/dynamic%20languages&quot;&gt;dynamic languages&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-11-03 04:42:22 +0100</published>
        <link>http://flanders.co.nz/2007/11/03/boot-camp-session/</link>
      </item>
      
    
      
      <item>
        <title>I&#8217;m getting to write a book !!!!!!!!!</title>
        <description>&lt;p&gt;I just got confirmation from Manning publishers that I get to write a book on IronRuby.&lt;/p&gt;

&lt;p&gt;I personally think this is great news :D&lt;/p&gt;

&lt;p&gt;I will keep you updated with more progress as I go along.&lt;/p&gt;

&lt;p&gt;I just wanted to get this message out.&lt;/p&gt;
</description>
        <published>2007-11-03 00:05:12 +0100</published>
        <link>http://flanders.co.nz/2007/11/03/im-getting-to-write-a-book/</link>
      </item>
      
    
      
      <item>
        <title>If you thought Joost was cool&#8230;.</title>
        <description>&lt;p&gt;I have been using Joost for a couple of months now, but today Tony from work put me onto Miro&lt;/p&gt;

&lt;p&gt;Some of the things that make Miro somewhat superior are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Play any video file format&lt;/li&gt;
&lt;li&gt;More HD content than anywhere else&lt;/li&gt;
&lt;li&gt;250000 channels as opposed to 250&lt;/li&gt;
&lt;li&gt;Save you tube videos&lt;/li&gt;
&lt;li&gt;Miro is an open platform&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;You can get it at &lt;a href=&quot;http://getmiro.com&quot;&gt;http://getmiro.com&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-11-01 19:12:22 +0100</published>
        <link>http://flanders.co.nz/2007/11/01/if-you-thought-joost-was-cool/</link>
      </item>
      
    
      
      <item>
        <title>MozREPL: REPL for mozilla</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://flog.co.nz&quot;&gt;Adam Burmister&lt;/a&gt;, a collegue @&lt;a href=&quot;http://xero.com&quot;&gt;Xero&lt;/a&gt; put me onto &lt;a href=&quot;http://hyperstruct.net/projects/mozrepl&quot;&gt;MozREPL&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Connect to Firefox and other Mozilla apps, &lt;strong&gt;explore and modify them from the inside, while they&amp;#8217;re running&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Execute Javascript, play with browser GUI, sneak into HTML pages, examine functions and variables, redefine them on the fly, hot-fix bugs, &amp;#8230; MozRepl itself is programmable from within MozRepl.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/firefox&quot;&gt;firefox&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/repl&quot;&gt;repl&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/programming&quot;&gt;programming&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-10-29 20:15:35 +0100</published>
        <link>http://flanders.co.nz/2007/10/29/mozrepl-repl-for-mozilla/</link>
      </item>
      
    
      
      <item>
        <title>A little browser with ironruby and wpf</title>
        <description>&lt;p&gt;Whilst preparing for my talk on saturday I got to play a little with Iron ruby and wpf.&lt;/p&gt;

&lt;p&gt;One of my experiments was to create a little browser which i dubbed biffy :)&lt;/p&gt;

&lt;p&gt;You can download it here: &lt;a href=&quot;http://koolkraft.net/biffy.zip&quot;&gt;biffy.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/wpf&quot;&gt;wpf&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/ironruby&quot;&gt;ironruby&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/dynamic%20languages&quot;&gt;dynamic languages&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-10-29 19:46:01 +0100</published>
        <link>http://flanders.co.nz/2007/10/29/a-little-browser-with-iron-ruby-and-wpf/</link>
      </item>
      
    
      
      <item>
        <title>SVNBridge is finally working</title>
        <description>&lt;p&gt;So this weekend I discovered that SVNBridge is working fine now.&lt;/p&gt;

&lt;p&gt;I haven&amp;#8217;t tried it against our production TFS server but against codeplex it works great.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.codeplex.com/SvnBridge&quot;&gt;http://www.codeplex.com/SvnBridge&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SvnBridge - Use TortoiseSVN with Team Foundation Server&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;Project Description&lt;/strong&gt;&lt;br/&gt;
SvnBridge allows you to use TortoiseSVN and other Subversion clients with Team Foundation Server. It converts the calls made by your Subversion client to the API supported by TFS. &lt;br/&gt;
SvnBridge works by running an executable on your local machine that acts as the bridge to TFS. You point SvnBridge at the TFS server, and point TortoiseSVN at the bridge running on your local machine. This allows you to use TortoiseSVN with any TFS server without needing to change the TFS server in any way (no need to convince your system administrator of anything!).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If you haven&amp;#8217;t checked it out already, it&amp;#8217;s definitely worth a look.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/subversion&quot;&gt;subversion&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/team%20foundation%20server&quot;&gt;team foundation server&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/tfs&quot;&gt;tfs&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/source%20control&quot;&gt;source control&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-10-29 00:29:15 +0100</published>
        <link>http://flanders.co.nz/2007/10/29/svnbridge-is-finally-working/</link>
      </item>
      
    
      
      <item>
        <title>I like what I&#8217;m seeing from Microsoft lately</title>
        <description>&lt;p&gt;Microsoft has just hired &lt;a href=&quot;http://blog.wekeroad.com/2007/10/26/microsoft-subsonic-and-me/&quot;&gt;Rob Connery&lt;/a&gt; from SubSonic, and his job is going to be to work on his own open source project.&lt;/p&gt;

&lt;p&gt;I am very pleasantly surprised by that news, and this is the change of direction so many people have been waiting for I think.&lt;/p&gt;

&lt;p&gt;I for one like this whole new direction of embracing open source. It seems like lately the party can&amp;#8217;t stop, they also hired: Scott Hanselman, Phil Haack and Alex James. I should maybe start thinking about getting one aggregated feed from msdn :)&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s good to see that open source projects are now being endorsed. I can&amp;#8217;t wait to see what&amp;#8217;s next. &lt;/p&gt;
</description>
        <published>2007-10-26 22:22:35 +0200</published>
        <link>http://flanders.co.nz/2007/10/26/i-like-what-im-seeing-from-microsoft-lately/</link>
      </item>
      
    
      
      <item>
        <title>Generics overwhelming</title>
        <description>&lt;p&gt;Ayende put &lt;a href=&quot;http://ayende.com/Blog/archive/2007/10/23/MonoRail-Tricks.aspx&quot;&gt;this post up&lt;/a&gt; which looks freakishly a lot like some code I wrote a couple of months ago.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;style type=&quot;text/css&quot;&amp;gt;&amp;lt;![CDATA[.cf { font-family: consolas; font-size: 10pt; color: #fffbca; background: #202020; }
.cl { margin: 0px; }
.cb1 { color: #fa8072; }
.cb2 { color: #00d2d2; }
.cb3 { color: silver; }
.cb4 { color: #d0d0d0; }
.cb5 { color: #2b91af; }
&amp;lt;/style&amp;gt;
&amp;lt;div class=&quot;cf&quot;&amp;gt;
&amp;lt;p class=&quot;cl&quot;&amp;gt;&amp;lt;span class=&quot;cb1&quot;&amp;gt;public&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;cb1&quot;&amp;gt;abstract&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;cb1&quot;&amp;gt;class&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;cb2&quot;&amp;gt;AccountServiceBase&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;cb3&quot;&amp;gt;&amp;lt;&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;cb4&quot;&amp;gt;T&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;cb4&quot;&amp;gt;K&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;cb4&quot;&amp;gt;Q&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;cb3&quot;&amp;gt;&amp;gt;&amp;lt;/span&amp;gt; : &amp;lt;span class=&quot;cb5&quot;&amp;gt;IAccountService&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;cb3&quot;&amp;gt;&amp;lt;&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;cb4&quot;&amp;gt;K&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;cb3&quot;&amp;gt;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p class=&quot;cl&quot;&amp;gt;        &amp;lt;span class=&quot;cb1&quot;&amp;gt;where&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;cb4&quot;&amp;gt;T&amp;lt;/span&amp;gt; : &amp;lt;span class=&quot;cb2&quot;&amp;gt;BankImportSetup&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;cb5&quot;&amp;gt;IAccountData&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;cb1&quot;&amp;gt;new&amp;lt;/span&amp;gt;()
&amp;lt;/p&amp;gt;&amp;lt;p class=&quot;cl&quot;&amp;gt;        &amp;lt;span class=&quot;cb1&quot;&amp;gt;where&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;cb4&quot;&amp;gt;K&amp;lt;/span&amp;gt; : &amp;lt;span class=&quot;cb1&quot;&amp;gt;class&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;cb5&quot;&amp;gt;IAccountData&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;cb1&quot;&amp;gt;new&amp;lt;/span&amp;gt;()
&amp;lt;/p&amp;gt;&amp;lt;p class=&quot;cl&quot;&amp;gt;        &amp;lt;span class=&quot;cb1&quot;&amp;gt;where&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;cb4&quot;&amp;gt;Q&amp;lt;/span&amp;gt; : &amp;lt;span class=&quot;cb1&quot;&amp;gt;class&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;cb5&quot;&amp;gt;IEntityQueries&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;cb3&quot;&amp;gt;&amp;lt;&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;cb4&quot;&amp;gt;T&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;cb4&quot;&amp;gt;K&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;cb3&quot;&amp;gt;&amp;gt;&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;cb1&quot;&amp;gt;new&amp;lt;/span&amp;gt;()&amp;lt;/p&amp;gt;
&amp;lt;p class=&quot;cl&quot;&amp;gt;        &#8230;..&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The reason for building it this way is that I have to implement something for heaps of banks each one has a subtle difference in the way they are processed. But 95% of the code would be the same for every BankImportSetup entity.&lt;/p&gt;

&lt;p&gt;This way I could save a lot of time by going a bit overboard on the generics side of it.&lt;/p&gt;

&lt;p&gt;To cut a long story short. Generics are fun but they can be pretty overwhelming at first.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;PS. My colours look very different on my pc. It&amp;#8217;s copy source as html that doesn&amp;#8217;t pick up all the colors resharper adds.&lt;/p&gt;
</description>
        <published>2007-10-24 01:01:34 +0200</published>
        <link>http://flanders.co.nz/2007/10/24/generics-overwhelming/</link>
      </item>
      
    
      
      <item>
        <title>Rejoining the pack</title>
        <description>&lt;p&gt;The last year I&amp;#8217;ve dabbled a lot with linux, ruby etc. Investigating alternative means of developing web applications.  I have switched back to vista ultimate x64 now because I spend about 95% of my time developing on windows so it didn&amp;#8217;t make sense to run linux as a base system.  Both ubuntu with Beryl or vista are just as slow/fast on my computer the admin time for my windows system is a lot shorter than the one for my ubuntu system.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m not taking a hard line against webforms any more, I still think I won&amp;#8217;t be using them in complex projects but for quick prototyping the dynamic datacontrols are pretty cool. Which won&amp;#8217;t stop me from building my own mvc style architecture because the current defacto standard is suffering from code bloat and a too tight integration of javascript frameworks etc.&lt;/p&gt;

&lt;p&gt;This weekend I&amp;#8217;ve finally started playing around with c# 3.0 and silverlight and I liked what I saw a lot. &lt;/p&gt;

&lt;p&gt;I&amp;#8217;m getting my head around the new technolgies by building a little texas holdem multiplayer game.  So the technologies this project will use are: .net 3.5 with c# 3.0, silverlight 1.1 (with xaml), WCF.&lt;/p&gt;

&lt;p&gt;I started building that texas holdem poker game because I couldn&amp;#8217;t find a nice one that I could install on my LAN or one that wouldn&amp;#8217;t require me to get a mortgage if I would lose a game online.&lt;/p&gt;

&lt;p&gt;The microsoft one that comes with vista ultimate is nice and i aim to beat it by making it multiplayer.&lt;/p&gt;

&lt;p&gt;The most challenging bit of this poker game is definitely the AI for the computer players because I don&amp;#8217;t want them to be idiots but also not the best players in the world seen as i&amp;#8217;m not the world&amp;#8217;s greatest poker player (I&amp;#8217;m still working for a living :)). If somebody that reads this blog has done some similar work or knows of some resources for me to work through some of that stuff please share them.&lt;/p&gt;

&lt;p&gt;So far I&amp;#8217;ve got the following logic going:&lt;/p&gt;

&lt;p&gt;Evaluating wheter it&amp;#8217;s a good hand or a bad hand: simulate about 1000 games with the same hand,same cards on the table and the same number of players.&lt;/p&gt;

&lt;p&gt;That gives me an idea of how good the hand is and if it should fold.  Next I want to figure out whether the player should bet, check or raise this is done by looking at the odds and the maximum score I could reach as well as how far along we are in the game.. I have more in my head but not enoughtime to write it all down. I&amp;#8217;ll write more on this subject in the course of the next few weeks.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m planning on making the multiplayer version open sourced for demo purposes but not the one that contains the AI for the computer players.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/texas%20holdem&quot;&gt;texas holdem&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/silverlight&quot;&gt;silverlight&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/.NET%203.5&quot;&gt;.NET 3.5&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/Linq&quot;&gt;Linq&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-10-22 22:24:23 +0200</published>
        <link>http://flanders.co.nz/2007/10/22/rejoining-the-pack/</link>
      </item>
      
    
      
      <item>
        <title>Get all the css classes in use on your page</title>
        <description>&lt;p&gt;By using javascript that can be done pretty easily. The script below requires prototype&lt;/p&gt;

&lt;p&gt;var classes = [];&lt;br/&gt;
function collectClasses(ele){&lt;br/&gt;
  var children = ele.childElements();&lt;br/&gt;
  if(children.length &gt; 0){&lt;br/&gt;
    children.each(function(el){collectClasses(el);});&lt;br/&gt;
  } &lt;br/&gt;
  else{&lt;br/&gt;
   ele.classNames()&lt;br/&gt;
     .each(function(className){classes.push(className)});&lt;br/&gt;
   return classes;&lt;br/&gt;
  }&lt;br/&gt;
}&lt;br/&gt;
var body = document.getElementsByTagName(&amp;#8216;body&amp;#8217;)[0];&lt;br/&gt;
collectClasses(body);&lt;br/&gt;
var myUniqueClasses = classes.uniq();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The myUniqueClasses variable holds all the classnames that are in use on your page.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/javascript&quot;&gt;javascript&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/dhtml&quot;&gt;dhtml&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-10-18 23:03:37 +0200</published>
        <link>http://flanders.co.nz/2007/10/18/get-all-the-css-classes-in-use-on-your-page/</link>
      </item>
      
    
      
      <item>
        <title>VLite: Stripping down your vista install</title>
        <description>&lt;p&gt;One of my collegues at &lt;a href=&quot;http://www.xero.com&quot;&gt;Xero&lt;/a&gt; put me onto this tool &lt;a href=&quot;http://www.vlite.net/&quot;&gt;vlite&lt;/a&gt; which helps you build a custom ISO with only the features you need for your vista install.&lt;/p&gt;

&lt;p&gt;Nowadays I&amp;#8217;m running &lt;a href=&quot;http://www.ubuntu.com&quot;&gt;ubuntu x64&lt;/a&gt; with vmware as my base system and I have a &lt;a href=&quot;http://www.microsoft.com/windows/products/windowsvista/default.mspx&quot;&gt;vista&lt;/a&gt; running in a vmware workstation virtual machine. I&amp;#8217;m using vmware workstation instead of server because it allows me to use dual monitors inside my virtual machine which I think is abslotely fantastic.  Thanks to &lt;a href=&quot;http://blog.bittercoder.com&quot;&gt;Alex Henderson&lt;/a&gt; for pointing that out to me.&lt;/p&gt;

&lt;p&gt;My vista has got sql server 2k5 and visual studio 2008 beta 2 installed.&lt;/p&gt;

&lt;p&gt;So the stripped down version of vista fits on a cd instead of a dvd and is heaps faster than the regular install of vista. My vista only needs IIS I don&amp;#8217;t need all the other stuff it has got.&lt;/p&gt;

&lt;p&gt;I hope you will find this as useful as I did when I learnt about this tool.&lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/vlite&quot;&gt;vlite&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/vista&quot;&gt;vista&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/ubuntu&quot;&gt;ubuntu&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/vmware&quot;&gt;vmware&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-09-20 23:58:19 +0200</published>
        <link>http://flanders.co.nz/2007/09/20/vlite-stripping-down-your-vista-install/</link>
      </item>
      
    
      
      <item>
        <title>Wellington - Lunch with geeks (04/09/2007)</title>
        <description>&lt;p&gt;This week we had another lunch with geeks.  The attendance was good and we talked about a number of things.&lt;/p&gt;

&lt;p&gt;The first thing we talked about was broadening the scope of this group to other technologies. We are looking for people from RoR community and the Java community. We do have 1 java person that attends our meetings regularly but we&amp;#8217;d like to get some more. So if you&amp;#8217;re in Wellington and you do development these lunches may be something for you.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Another thing we talked about was: What&amp;#8217;s the best microsoft product? And what&amp;#8217;s the worst?&lt;/p&gt;

&lt;p&gt;on the question of worst we had a consensus : windows ME.&lt;/p&gt;

&lt;p&gt;on the question what is the best product I guess the most votes went to CLR/.NET Framework. Somebody also mentioned Flight Simulator :)&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;We also talked about Aspect Oriented programming and we got a little confused by what the PolicyInjection Block is about in the Enterprise Library.  It claims to do AOP but somebody pointed out that it doesn&amp;#8217;t quite do that. It does most of the AOP features but not all of them and it&amp;#8217;s a little intrusive because it has to be defined by the caller.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The only problem we had was that there was another group in the pizza place so I couldn&amp;#8217;t understand most of what was being said. Please email me the stuff I forgot about or add it in the comments.&lt;/p&gt;
</description>
        <published>2007-09-04 05:07:21 +0200</published>
        <link>http://flanders.co.nz/2007/09/04/wellington-lunch-with-geeks-04092007/</link>
      </item>
      
    
      
      <item>
        <title>Wellington - Lunch with geeks (21/08/2007)</title>
        <description>&lt;p&gt;Last week there was no lunch with geeks because of Tech Ed.  Naturally we started our session rehashing what we thought were the highlights of Tech Ed NZ.&lt;/p&gt;

&lt;p&gt;In general everybody really liked the keynote by &lt;a href=&quot;http://www.expeng.com/lou-carbone.htm&quot;&gt;Lou Carbone&lt;/a&gt; and we were definitely not the only ones, mauricio has a more &lt;a href=&quot;http://www.geekzone.co.nz/teched/3539&quot;&gt;detailed post on the keynote&lt;/a&gt;.  Anyway it was really entertaining and educational at the same time, I couldn&amp;#8217;t believe some of the things hotels do with towels and toilet rolls.  Designing for to trigger emotions instead of functionality would be the biggest lesson for me. &lt;br/&gt;
My favourite quote from tech ed would be something &lt;a href=&quot;http://jim.webber.name/&quot;&gt;Jim Webber&lt;/a&gt; said during a session about Dynamic languages vs. Static languages:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If you polish a turd, your hands will be smelly but you will still have a turd. &lt;br/&gt;
(Jim Webber on wsdl)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;After that we started the topic at hand: &lt;strong&gt;&lt;em&gt;Vendor certification is it really worth it? &lt;/em&gt;&lt;/strong&gt;- A topic suggested by &lt;a href=&quot;http://blogs.provoke.co.nz/theengineroom&quot;&gt;Pablo Garcia&lt;/a&gt; from &lt;a href=&quot;http://provoke.co.nz/&quot;&gt;Provoke solutions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The discussion was long but seemed to often get back to the same basic ideas. I&amp;#8217;ll just summarize:&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s worth it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It&amp;#8217;s worth it if you&amp;#8217;re an intermediate or a junior developer and looking for a job&lt;/li&gt;
&lt;li&gt;It&amp;#8217;s a benchmark for people that have been in the industry for a long time to assure that they are still current.&lt;/li&gt;
&lt;li&gt;it can be really useful for systems people&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;It&amp;#8217;s not worth it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A senior that has heaps of certifications and boasts about them =&gt; Mort alert&lt;/li&gt;
&lt;li&gt;it doesn&amp;#8217;t teach you any of the concepts behind problem solving and analysis, but focusses more on learning-by-heart&lt;/li&gt;
&lt;li&gt;it often promotes less-than-best practices aka enterprise practices&lt;/li&gt;
&lt;li&gt;it is in no way a guarantee that the person really knows his stuff it only proves he can memorize a bunch of things.&lt;/li&gt;
&lt;li&gt;seen as software development is an art, exams are inappropriate because the grader needs to like your writing style before everything else.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The discussion went on about the benefit of a university training vs. the certification process and that seemed to go on forever. Some of the members of our group started recalling memories from when they were in uni and why exams were too subjective to effectively measure the skill of a student.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;We did all agree that certification done by vendors isn&amp;#8217;t the best way to go about it, and that it would be a much better idea if these certifications would be issued by some global, independent organization. That would immediately raise the credibility of these disciplines.&lt;/p&gt;

&lt;p&gt;That was our session.&lt;/p&gt;

&lt;p&gt;If forgot something please let me know :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; I added a link to Pablo&amp;#8217;s blog &lt;a href=&quot;http://blogs.provoke.co.nz/theengineroom&quot;&gt;http://blogs.provoke.co.nz/theengineroom&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-08-21 21:11:26 +0200</published>
        <link>http://flanders.co.nz/2007/08/21/wellington-lunch-with-geeks-21082007/</link>
      </item>
      
    
      
      <item>
        <title>What&#8217;s your personality type ?</title>
        <description>&lt;p&gt;Through John Clegg I found out about a personality test on bbc.co.uk.&lt;/p&gt;

&lt;p&gt;He has a more lengthy explanation on how he got there on &lt;a href=&quot;http://blog.projectxtech.com/2007/08/20/whats-your-personality-type/&quot;&gt;his blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anyway I&amp;#8217;m always interested in finding out which type of person I am etc. So I could not resist and took the test.&lt;br/&gt;
If you&amp;#8217;re like me and just itching to find out more about yourself or you just have some time to spare you can take the test here &lt;a href=&quot;http://www.bbc.co.uk/science/humanbody/mind/surveys/whatamilike/&quot;&gt;http://www.bbc.co.uk/science/humanbody/mind/surveys/whatamilike/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apparently I&amp;#8217;m a &lt;em&gt;&lt;strong&gt;Big Thinker&lt;/strong&gt;&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;The four aspects that make up this personality type are:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.bbc.co.uk/science/humanbody/images/mind/whatamilike/types/big_thinker.gif&quot; alt=&quot;Spontaneous, Ideas, Heads and Extrovert&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;Summary of Big-Thinkers&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Outspoken, ingenious and bored by routine&lt;/li&gt;
&lt;li&gt;Think of themselves as talkative, curious and self-sufficient&lt;/li&gt;
&lt;li&gt;May neglect the routine work required to make their plans successful&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;More about Big-Thinkers&lt;/h3&gt;

&lt;p&gt;Big Thinkers are always looking for the next big idea or opportunity. They’re adept at spotting trends and thinking on their feet. Big Thinkers like to jump in and find innovative solutions to complex problems and are good at developing strategies for the future.&lt;/p&gt;

&lt;p&gt;Big Thinkers are usually curious, logical and energetic. This chatty group enjoys a good debate and asserting their opinions. Sometimes others may find the way they express their ideas too abrupt or challenging.&lt;/p&gt;

&lt;p&gt;In situations where they can&amp;#8217;t use their talents or are unappreciated, Big Thinkers may be rude, critical of others or rebellious. Under extreme stress, Big Thinkers can become preoccupied with unimportant details and lose sight of the &amp;#8216;big picture&amp;#8217;.&lt;/p&gt;

&lt;p&gt;Big Thinkers may ignore important details in their plans and overlook the impact their ideas have on the people around them.&lt;/p&gt;

&lt;h3&gt;Big-Thinker Careers&lt;/h3&gt;

&lt;p&gt;The entrepreneurial spirit of the Big Thinkers often leads them to seek new challenges; this is often more important to them than working in a particular field or a specific career.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s important to remember that no survey can predict personality type with 100 percent accuracy. Experts say that we should use personality type to better understand ourselves and others, but shouldn&amp;#8217;t feel restricted by our results.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/personality&quot;&gt;personality&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-08-20 02:00:04 +0200</published>
        <link>http://flanders.co.nz/2007/08/20/whats-your-personality-type/</link>
      </item>
      
    
      
      <item>
        <title>Auckland Codecamp</title>
        <description>&lt;p&gt;The last codecamp was a huge success :D  We had lots of interesting speakers and I now know a lot more about the WCF service factory than I did before.&lt;/p&gt;

&lt;p&gt;My session at codecamp was about Javascript best practices. I think it went pretty well judging by the reactions I got from some of the people in the audience.&lt;/p&gt;

&lt;p&gt;I mentioned that I would put up &lt;a href=&quot;http://koolkraft.net/JavascriptPresentation.zip&quot;&gt;my slides and the demo application&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the afternoon I did not stay at codecamp but instead went with &lt;a href=&quot;http://base4.net/Blog.aspx&quot;&gt;Alex James&lt;/a&gt; and &lt;a href=&quot;http://nikhilk.net/&quot;&gt;Nikhil Kothari&lt;/a&gt; to explore Auckland for a while.  During the exploration of Auckland we of course discussed some geeky things like Alex&amp;#8217;s pet pieve : Data 2.0 and I could not resist talking about MVC and webforms with Nikhil, after all how often will I get the chance to talk to the architect of webforms face to face.&lt;/p&gt;

&lt;p&gt;Anyway I&amp;#8217;d like to construct a list of arguments in favor of MVC (eg. Castle/Monorail) and webforms.  So if you&amp;#8217;re reading this blog and you have something you can contribute to this list &lt;strong&gt;please leave a comment&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;So far I have : it&amp;#8217;s easier to develop complex UI&amp;#8217;s with an MVC type framework than it is with webforms. I&amp;#8217;m more productive in the MVC framework than I am with the classic ASP.NET model.  The classic asp.net model promotes code duplication or at least makes it easier to fall into that trap.&lt;/p&gt;

&lt;p&gt; Nikhil has some valid points in defence of webforms:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Sooner or later you are going to need some state that&amp;#8217;s why we have viewstate :) and you will typically maintain your own state in a hidden field. Webforms is a framework and you roll your own specific framework for every new site.  There is nothing you can with MVC that you can&amp;#8217;t do with webforms. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;All his arguments are valid in my book.&lt;/p&gt;

&lt;p&gt;I have to get back to teched now but as soon as I get some more time I&amp;#8217;m sending Nikhil a very small project programmed in the MVC way and the same app in webforms.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Technorati tags: &lt;a href=&quot;http://technorati.com/tags/codecamp&quot;&gt;codecamp&lt;/a&gt;, &lt;a href=&quot;http://technorati.com/tags/nzteched&quot;&gt;nzteched&lt;/a&gt;, &lt;a href=&quot;http://technorati.com/tags/castle%20vs%20webforms&quot;&gt;castle vs webforms&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-08-13 01:02:58 +0200</published>
        <link>http://flanders.co.nz/2007/08/13/auckland-codecamp/</link>
      </item>
      
    
      
      <item>
        <title>Lunch with geeks (7/8/2007)</title>
        <description>&lt;p&gt;We had another geeks lunch on tuesday. We discussed a number of topics but focussed mainly on design patterns.&lt;/p&gt;

&lt;p&gt;Some of the observations we made are the following.&lt;/p&gt;

&lt;p&gt;The most overused design pattern : Singleton. With the remark that a singleton should only be used when you need to keep state in your object internally.&lt;/p&gt;

&lt;p&gt;You shouldn&amp;#8217;t care about design patterns until you figured out a couple yourself. This is a bit the chicken or the egg question because you would have to know the design patterns in order to know that you are using one.&lt;/p&gt;

&lt;p&gt;Lot&amp;#8217;s of programmers get by without the patterns although the solutions may not look as elegant.  Design patterns are in no way a silver bullet for creating quality software they just help you solve problems in a predictable way.&lt;/p&gt;

&lt;p&gt;One of the ways suggested to start adopting these patterns is to write code that works first and then refactor it to use the patterns.&lt;/p&gt;

&lt;p&gt;Next I&amp;#8217;d like to list a bunch of resources/books that were mentioned during this discussion:&lt;/p&gt;

&lt;p&gt;Thanks to Bevan Arps for this list of books:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Design Patterns (Gang of Four)&lt;br/&gt;
&lt;/strong&gt;Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides&lt;br/&gt;
ISBN 0 204 63361 2&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Refactoring - Improving the Design of Existing Code&lt;br/&gt;
&lt;/strong&gt;Martin Fowler&lt;br/&gt;
ISBN 0 204 48567 2&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Analysis Patters - Reusable Object Models&lt;br/&gt;
&lt;/strong&gt;Martin Fowler&lt;br/&gt;
ISBN 0 201 89542 0&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Refactoring to Patterns&lt;br/&gt;
&lt;/strong&gt;Joshua Kerievsky&lt;br/&gt;
ISBN 0 321 21335 1&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Ivan Towlson has put up a &lt;a href=&quot;http://hestia.typepad.com/flatlander/2007/08/design-patterns.html&quot;&gt;blog post&lt;/a&gt; listing the books that he remembered.&lt;/p&gt;

&lt;p&gt;And here are some urls that hold some information on design patterns.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.developer.com/design/article.php/1474561&quot;&gt;http://www.developer.com/design/article.php/1474561&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dofactory.com/Patterns/Patterns.aspx&quot;&gt;http://www.dofactory.com/Patterns/Patterns.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.designpatternsfor.net/&quot;&gt;http://www.designpatternsfor.net/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/Lunch%20with%20geeks&quot;&gt;Lunch with geeks&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-08-10 04:36:59 +0200</published>
        <link>http://flanders.co.nz/2007/08/10/lunch-with-geeks-782007/</link>
      </item>
      
    
      
      <item>
        <title>Re: Monorail vs. Rails isn&#8217;t a meaningful question</title>
        <description>&lt;p&gt;Scott Bellware has put a post up with &lt;a href=&quot;http://codebetter.com/blogs/scott.bellware/archive/2007/08/07/166539.aspx&quot;&gt;that exact title&lt;/a&gt; and this is my reply.&lt;/p&gt;

&lt;p&gt;While I can understand that people are dissapointed in asp.NET webforms doesn&amp;#8217;t mean you have to throw out the whole .NET framework.  As I stated before ever since I moved off of webforms with their viewstate i don&amp;#8217;t get the &lt;em&gt;wtf why isn&amp;#8217;t this working&lt;/em&gt; moments anymore.&lt;/p&gt;

&lt;p&gt;By now I have developped a number of small websites with managed content and a crm in RoR.  While I like RoR in my case it does not save me time as opposed to doing stuff with monorail for example.&lt;/p&gt;

&lt;p&gt;I find active record to be quite constraining in some of the domain modelling i&amp;#8217;d like to do. And the utter lack of proper tool support makes it quite a struggle to work with in my case. .NET has got visual studio which is an unparalleled IDE in my opinion.  I often don&amp;#8217;t have to look at the code and only type the first 2 letters or simply press ctrl-shift-space.&lt;/p&gt;

&lt;p&gt;While I do miss the fact that in ruby everything is essentially a hash and in .NET things are a little bit more complicated I like the fact that I get lots of stuff for free which require quite a bit of investigating in ruby. Applying the same things as I do in ruby that is I use quite a bit of reflection nowadays to set up some common properties if it is worth the trouble. If I have a smaller project i tend to just type stuff out. I don&amp;#8217;t think in webapps reflection is too much of an overhead. Especially if you come from the ruby side of things.&lt;/p&gt;

&lt;p&gt;One of the showstoppers for me is the fact that RoR has no proper support for the windows platform, getting it to use windows guid&amp;#8217;s as primary keys for example isn&amp;#8217;t too hard but again it&amp;#8217;s not something you get out of the box.&lt;/p&gt;

&lt;p&gt;Comparing .NET with a bazooka is going a little bit too far. I can see you can get infatuated by ruby but i don&amp;#8217;t think that in it&amp;#8217;s current state it is the greatest tool to build complex enterprisy apps in.  Deployment of a rails app is hell compared to deployment of a .NET app.  Yes you have to write less code but you have to write the full words and there is no contextual help or anything.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve grown quite fond of Resharper over the last year and it is the first thing I install in visual studio when I rebuild my machine.&lt;/p&gt;

&lt;p&gt;Monorail on the other hand does combine the best of both worlds.  It gives me the simplicity of the RoR (MVC) framework but also gives me the flexibility of the .NET framework.  Most components you get in .NET seem to have been written by people who take their job seriously and try to write proper software even if it&amp;#8217;s open source.  Lots of things I have found in ruby seem to have been written by either students or people who have no clue about what they were doing. Almost 70% of the plugins feel like they are incomplete or just don&amp;#8217;t do their job as expected. I dare you to find a good, full featured blogging platform in RoR (don&amp;#8217;t tell me mephisto because where are my trackbacks, pingbacks, comment moderation, statistics and refferer information ?)&lt;/p&gt;

&lt;p&gt;I have a natural dislike for people that shout really loud but the content doesn&amp;#8217;t have the value of a person that really knows what they are doing and talks softly. The ruby community is full of them.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m not the first developper to have moved back to .NET and embraced monorail/castle and I bet I won&amp;#8217;t be the last.&lt;/p&gt;

&lt;p&gt;However with the advent of IronRuby I think my opinion on the subject may change because that hopefully implies that visual studio will get full support for Ruby and that will finally give me the chance to evaluate my productivity in both languages more objectively.  But as things stand currently I like the language of ruby a lot but I am a lot more productive in the c# world.&lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/monorail%20RoR%20.NET%20c#%20Ruby&quot;&gt;monorail RoR .NET c# Ruby&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-08-08 04:15:38 +0200</published>
        <link>http://flanders.co.nz/2007/08/08/re-monorail-vs-rails-isnt-a-meaningful-question/</link>
      </item>
      
    
      
      <item>
        <title>Wellington - Lunch with geeks (24/7/2007)</title>
        <description>&lt;p&gt;I didn&amp;#8217;t put the minutes up from last week because we had too many people there and we didn&amp;#8217;t get a real group conversation going.. It was mostly little separated groups so I don&amp;#8217;t really know what has been talked about.  I also have a deadline for a client rapidly approaching so I didn&amp;#8217;t really find the time to add this to my blog.&lt;/p&gt;

&lt;p&gt;But I would like to thank everybody that was there last week for attending.&lt;/p&gt;

&lt;p&gt;Anyway today we had another Geek lunch and the topic of discussion was:&lt;/p&gt;

&lt;p&gt;What will you do to become a better programmer this year ?&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ll sum up the list of things to do that we all agreed upon.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Take an advanced reading course to improve your reading speed. People make a couple of really common mistakes when reading stuff and this course unlearns them. It improves your reading speed up to 3 times.. The course only takes 4 mornings so it&amp;#8217;s definitely something I&amp;#8217;ll be doing in the near future.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read a new book every month/ 2months.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Take an advanced writing course in order to write that dreaded documentation a lot faster.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn a new language every year. By taking a quick poll around the table it seemed that the most likely candidates here are Smalltalk, Ruby, Errlang, &amp;#8230;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Contribute to open source that way you get to meet a lot of good coders and you learn sooo much.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get a membership with ACM they give you free books and courses if you&amp;#8217;re a member.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Work with as much people and on as many projects as possible in order to gain more experience ==&gt; See open source :)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt; &lt;/p&gt;

&lt;p&gt;I want to thank everybody for coming and making this lunch another great one :)&lt;/p&gt;
</description>
        <published>2007-07-24 05:19:44 +0200</published>
        <link>http://flanders.co.nz/2007/07/24/wellington-lunch-with-geeks-2472007/</link>
      </item>
      
    
      
      <item>
        <title>Woohoo IronRuby alpha1</title>
        <description>&lt;p&gt;Well I&amp;#8217;m pretty excited about the drop of IronRuby&lt;/p&gt;

&lt;p&gt;We took it for  a quick spin at work.. and it looks really promising :)&lt;/p&gt;

&lt;p&gt;As you can read on John Lams blog there are a bunch of things that aren&amp;#8217;t implemented yet.&lt;/p&gt;

&lt;p&gt;One of those things would be to enumerate the methods of a class.&lt;/p&gt;

&lt;p&gt;We thought String would be a good fit as John is explaining how much time they put in that one.&lt;/p&gt;

&lt;p&gt;so this is what we tried.&lt;/p&gt;

&lt;p&gt;start up the ironruby console&lt;/p&gt;

&lt;p&gt;str_test = &amp;#8220;Hello World&amp;#8221;&lt;/p&gt;

&lt;p&gt;10.times { puts str_test }&lt;/p&gt;

&lt;p&gt;which gives the expected output&lt;/p&gt;

&lt;p&gt;Iterations over arrays etc work as expected.&lt;/p&gt;

&lt;p&gt;however one of the things i use a lot are the methods : methods and attributes&lt;/p&gt;

&lt;p&gt;attributes shouldn&amp;#8217;t exist on a string class but methods should only now it throws an error.&lt;/p&gt;

&lt;p&gt;All in all I&amp;#8217;m very impressed by what they&amp;#8217;ve accomplished so far and I&amp;#8217;ll definitely be looking at contributing to this project as soon as I have completed my last 2 projects for clients.&lt;/p&gt;
</description>
        <published>2007-07-23 22:26:31 +0200</published>
        <link>http://flanders.co.nz/2007/07/23/woohoo-ironruby-alpha1/</link>
      </item>
      
    
      
      <item>
        <title>Alex James will be joining Microsoft</title>
        <description>&lt;p&gt;I always thought that if there was one guy in NZ that should be working there it&amp;#8217;s Alex.&lt;/p&gt;

&lt;p&gt;And today he announced that he will be joining Microsoft in September : &lt;a href=&quot;http://www.base4.net/Blog.aspx?ID=538&quot;&gt;http://www.base4.net/Blog.aspx?ID=538&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Congratulations Alex. I for one am looking forward to the great things you will be doing there.&lt;/p&gt;
</description>
        <published>2007-07-20 04:35:26 +0200</published>
        <link>http://flanders.co.nz/2007/07/20/alex-james-will-be-joining-microsoft/</link>
      </item>
      
    
      
      <item>
        <title>Dark Visual studio scheme with resharper support</title>
        <description>&lt;p&gt;This is more for my own reference but I decided to put it here.&lt;/p&gt;

&lt;p&gt;This is the color scheme I&amp;#8217;ve been using over the past couple of weeks.&lt;/p&gt;

&lt;p&gt;It looks like this:&lt;/p&gt;

&lt;p&gt; ///&lt;/p&gt;

&lt;p&gt;        /// Gets or sets the date.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// The date.&lt;/p&gt;

&lt;p&gt;        public DateTime Date&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get { return date; }&lt;/p&gt;

&lt;p&gt;            set { date = value; }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Gets or sets the memberName.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// The name of the member.&lt;/p&gt;

&lt;p&gt;        public string MemberName&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get { return memberName; }&lt;/p&gt;

&lt;p&gt;            set { memberName= value; }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Gets or sets the source of the member.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// The source of the member.&lt;/p&gt;

&lt;p&gt;        public MemberSource SourceOfMember&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get { return sourceOfMember; }&lt;/p&gt;

&lt;p&gt;            set { sourceOfMember = value; }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Oops.. looks like copy as html doesn&amp;#8217;t quite look the same.. anyway you can give it a try if you want&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://koolkraft.net/DarkSchemeWithResharper.zip&quot;&gt;Dark Scheme with resharper settings&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-07-18 22:32:42 +0200</published>
        <link>http://flanders.co.nz/2007/07/18/dark-visual-studio-scheme-with-resharper-support/</link>
      </item>
      
    
      
      <item>
        <title>What&#8217;s the deal with MbUnit</title>
        <description>&lt;p&gt;Consider the following code :&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        [Test]&lt;/p&gt;

&lt;p&gt;        public void StringFormatEqualsTest()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            string firstString = string.Format(&amp;#8220;{0}&amp;#8221;, &amp;#8220;test&amp;#8221;);&lt;/p&gt;

&lt;p&gt;            string secondString = string.Format(&amp;#8220;{0}&amp;#8221;, &amp;#8220;test&amp;#8221;);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            Assert.AreNotEqual(firstString, secondString); //test passes&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        [Test]&lt;/p&gt;

&lt;p&gt;        public void StringEqualsTest()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            string firstString = &amp;#8220;test&amp;#8221;;&lt;/p&gt;

&lt;p&gt;            string secondString = &amp;#8220;test&amp;#8221;;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            Assert.AreNotEqual(firstString, secondString); //test fails&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Why does the first test (StringFormatEquals) pass ? In my opinion it shouldn&amp;#8217;t. I raised a bug report on the mbunit site.&lt;/p&gt;

&lt;p&gt;This behaviour doesn&amp;#8217;t exist in nunit.  I&amp;#8217;m just putting it out there because you do want your tests to reflect the thruth :).&lt;/p&gt;
</description>
        <published>2007-07-18 06:13:13 +0200</published>
        <link>http://flanders.co.nz/2007/07/18/whats-the-deal-with-mbunit/</link>
      </item>
      
    
      
      <item>
        <title>Code camp registrations are now open</title>
        <description>&lt;p&gt;How exciting.. we&amp;#8217;ve been planning this for a while but now we can publically announce that code camp registrations are open.&lt;/p&gt;

&lt;p&gt;Our next code camp will be the sunday before TechEd and we will be running it in one of the larger TechEd conference rooms.&lt;/p&gt;

&lt;p&gt;Hurry to &lt;a href=&quot;http://www.codecamp.net.nz&quot;&gt;http://www.codecamp.net.nz&lt;/a&gt; for registrations and more details.&lt;/p&gt;

&lt;p&gt;I know that we&amp;#8217;ve got an impressive list of speakers.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Hope to see you there !!!&lt;/p&gt;
</description>
        <published>2007-07-16 02:30:05 +0200</published>
        <link>http://flanders.co.nz/2007/07/16/code-camp-registrations-are-now-open/</link>
      </item>
      
    
      
      <item>
        <title>Unit Testing Legacy Code</title>
        <description>&lt;p&gt;Whenever I&amp;#8217;m faced with a bunch of legacy code that I would like to write unit tests for I get quickly demotivated because I know the code works but still i&amp;#8217;d love to know if the code will still work after I&amp;#8217;ve been working on it.&lt;/p&gt;

&lt;p&gt;Lately I&amp;#8217;ve been faced with a lot of legacy code so I decided to make a little tool that does the same as what VSTS testing does when you select generate unit tests.&lt;/p&gt;

&lt;p&gt;I haven&amp;#8217;t made an add in yet, it&amp;#8217;s just a little winforms app I started it this afternoon and i have something working now. It&amp;#8217;s also one of my very first winform apps so things have a lot fo room for improving.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m open for suggestions and i decided to open source it so if you have a fix or would like to make it a better tool let me know and I&amp;#8217;ll add you to the list of contributors&lt;/p&gt;

&lt;p&gt;You can find the tool @ my subversion repo:  &lt;a href=&quot;https://svn.koolkraft.net/test_generator/trunk&quot;&gt;https://svn.koolkraft.net/test_generator/trunk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I know that it&amp;#8217;s against the rules of TDD to do this stuff but i just want to save some time by generating stubs that don&amp;#8217;t actually do anything except setup objects and initial values&lt;/p&gt;

&lt;p&gt;Let me know what you think :)&lt;/p&gt;
</description>
        <published>2007-07-15 12:22:49 +0200</published>
        <link>http://flanders.co.nz/2007/07/15/unit-testing-legacy-code/</link>
      </item>
      
    
      
      <item>
        <title>Wellington - Lunch with geeks (10/7/2007)</title>
        <description>&lt;p&gt;We had another lunch session yesterday. It was a quiet session probably because of the Wellington weather, there were 7 people attending.&lt;/p&gt;

&lt;p&gt;The first topic we discussed was mobilizing your application.&lt;/p&gt;

&lt;p&gt;The first issue that was raised around this subject what usability issues have you got to tackle around mobile applications.  Like navigation should be vastly different because of the lack of screen real estate. navigation is mostly done with a joystick or keypad there is no mouse which in itself is already a pretty difficult problem to tackle. &lt;/p&gt;

&lt;p&gt;Another person mentioned that dropdownlists are pretty difficult to navigate too.  It would be naive to assume that you can use one codebase and make some style changes to get a great mobile application.  You need to take the fact of mobilizing more serious than that and be prepared to make some drastic changes in how your app flows.&lt;/p&gt;

&lt;p&gt;One of the reasons that we haven&amp;#8217;t really seen a great mobile app make it big is probably because of the user interface we are facing when operating a mobile device. Technology has changed a lot since mobile phones came to be but the interface hasn&amp;#8217;t hardly changed at all. It went from a disc to buttons to buttons with a little display. Until the cell phone was there and we got a menu to operate our phones. The navigation of those menus has evolved somewhat but it&amp;#8217;s still the same way of using it. Of course this is when the iPhone came into the conversation, and because I work at Xero i got to play briefly &lt;a href=&quot;http://www.drury.net.nz/2007/07/06/iphone-love/&quot;&gt;with an iPhone&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have to say that the touch screen navigation was really cool and refreshing and definitely a step in the right direction.&lt;/p&gt;

&lt;p&gt;After which our conversation drifted off a little and we dreamt of futuristic interfaces and new ways of interacting with computers.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://codeclimber.net.nz/archive/2007/07/11/7-months-of-CodeClimber-and-6-months-in-NZ.aspx&quot;&gt;Simone has got a great post on life in wellington as a european in which he talks about our lunches and other things.&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-07-11 10:21:09 +0200</published>
        <link>http://flanders.co.nz/2007/07/11/wellington-lunch-with-geeks-1072007/</link>
      </item>
      
    
      
      <item>
        <title>This blog has been moved and upgraded</title>
        <description>&lt;p&gt;I moved my blog to be on &lt;a href=&quot;http://www.webhost4life.com/default.asp?refid=casualjim&quot;&gt;webhost4life.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m also changing blogging engines and announcing that I will stop  development on nblogr.&lt;/p&gt;

&lt;p&gt;NBlogr was almost ready for a v1 release but it has  too big of a memory footprint. The footprint is 70MB which is too much for a  blog.&lt;/p&gt;

&lt;p&gt;To fix this I would have to change my data access layer to a different  approach.  I decided instead to switch to subtext and I&amp;#8217;ll see which features I  can provide from nblogr for subtext as plugins. I also don&amp;#8217;t have the time  anymore to occupy myself with nblogr.&lt;/p&gt;

&lt;p&gt;The feed should remain working without  a change. I upgraded my blog to subtext using &lt;a href=&quot;http://www.ayende.com/Blog/archive/2007/02/03/From-DasBlog-To-SubText.aspx&quot;&gt;Ayende&amp;#8217;s  instructions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Which means that the permalinks should still work but urls  that contain a guid won&amp;#8217;t work anymore.&lt;/p&gt;

&lt;p&gt;The reason for moving from dasblog to  subtext are the same as why i started nblogr in the first place. Dasblog has  been nothing but a hassle for me. It is often down, does only trackbacks to my  own domain, and many more annoyances.&lt;/p&gt;
</description>
        <published>2007-07-08 09:25:04 +0200</published>
        <link>http://flanders.co.nz/2007/07/08/this-blog-has-been-moved-and-upgraded/</link>
      </item>
      
    
      
      <item>
        <title>The language debate</title>
        <description>&lt;p&gt;Rowan Simpson: &lt;a href=&quot;http://rowansimpson.com/2007/07/04/c-vs-vbnet/&quot;&gt;http://rowansimpson.com/2007/07/04/c-vs-vbnet/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Andrew Peters: &lt;a href=&quot;http://andrewpeters.net/2007/07/03/73/&quot;&gt;http://andrewpeters.net/2007/07/03/73/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alex James: &lt;a href=&quot;http://www.base4.net/blog.aspx?ID=515&quot;&gt;http://www.base4.net/blog.aspx?ID=515&lt;/a&gt; and &lt;a href=&quot;http://www.base4.net/blog.aspx?ID=520&quot;&gt;http://www.base4.net/blog.aspx?ID=520&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nick Randolph: &lt;a href=&quot;http://community.softteq.com/blogs/nick/archive/2007/07/03/languages-only-part-of-the-equation.aspx&quot;&gt;http://community.softteq.com/blogs/nick/archive/2007/07/03/languages-only-part-of-the-equation.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alex Henderson: &lt;a href=&quot;http://blog.bittercoder.com/PermaLink,guid,05fc0109-3215-410e-8009-447c1e74cacb.aspx&quot;&gt;http://blog.bittercoder.com/PermaLink,guid,05fc0109-3215-410e-8009-447c1e74cacb.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Shouldn&amp;#8217;t be a debate at all. I have a personal preference in languages which goes in this order C#, Ruby, Javascript, Boo/brail,  a bunch of languages i don&amp;#8217;t know yet, xml + xslt&lt;/p&gt;

&lt;p&gt;Why C# is first on the list is because it comes with visual studio which is IMHO the best IDE out there for the moment.&lt;/p&gt;

&lt;p&gt;VB.NET isn&amp;#8217;t in the list because I don&amp;#8217;t see the point in learning another language that is just as powerful as c# but has got a very ugly way for forming syntax. VB doesn&amp;#8217;t feel logical to me.&lt;/p&gt;

&lt;p&gt;I don&amp;#8217;t program in a language because of aesthetics but how they flow from my brain onto the keyboard and the purpose of what I&amp;#8217;m writing the script for. I tend to think in larger picture concepts languages that support that better have a distinct advantage in my book.&lt;/p&gt;

&lt;p&gt;my 2c.&lt;/p&gt;
</description>
        <published>2007-07-04 13:41:11 +0200</published>
        <link>http://flanders.co.nz/2007/07/04/the-language-debate/</link>
      </item>
      
    
      
      <item>
        <title>About javascript compression</title>
        <description>&lt;p&gt;If you believe this guy then javascript packing is a bad thing.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://batiste.dosimple.ch/blog/2007-07/&quot;&gt;http://batiste.dosimple.ch/blog/2007-07/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I don&amp;#8217;t agree with this post and here&amp;#8217;s why (i couldn&amp;#8217;t comment on his blog because he doesn&amp;#8217;t have comments):&lt;/p&gt;

&lt;p&gt;IMHO that&amp;#8217;s not entirely correct.  &lt;br/&gt;
I&amp;#8217;m sure that if you&amp;#8217;re not packing stuff but just removing comments and whitespace you&amp;#8217;ll get completely different results.&lt;/p&gt;

&lt;p&gt;If you&amp;#8217;re packing stuff then the reason should be because you want to obfuscate your javascript not because you want to get some speed improvement. It&amp;#8217;s just common sense to work out that &lt;br/&gt;
1. javascript is slow&lt;br/&gt;
2. more javascript execution (i.e. un-obfuscating) is even slower.&lt;/p&gt;

&lt;p&gt;Another benefit of packing javascript is that you/your company saves $ on bandwidth. 5k x 5000 pageviews x 30 days = lots of $.&lt;/p&gt;

&lt;p&gt;The guy is just looking at 1 aspect or 1 reason which gives a distorted image. &lt;br/&gt;
Anyway my experience tells me that removing whitespace and comments in a production environment and then have them sent compressed by the webserver to the client gives me the best results. Regardless of this guys 1x test setup with 1 machine.&lt;/p&gt;

&lt;p&gt;I will generally read all the files into one file strip it from extra content after which they get gzipped (deflate is better for xml type structures) and sent to the browser.  Once the javascript has been prepared for the page it should remain cached on the webserver and preferrably on the client.&lt;/p&gt;
</description>
        <published>2007-07-03 15:12:23 +0200</published>
        <link>http://flanders.co.nz/2007/07/03/about-javascript-compression/</link>
      </item>
      
    
      
      <item>
        <title>Lunch with geeks - Wellington - 3/7/2007</title>
        <description>&lt;p&gt;Another week, another lunch.&lt;/p&gt;

&lt;p&gt;This lunch had the biggest attendance yet.  I won&amp;#8217;t be putting up all the names because I can&amp;#8217;t remember them all :-$. We had about 20 people showing up, most of them were new faces. It was very good to see that Tim Haines could make it as well as Owen Evans. Another new addition was John Rusk and a couple of people from the TradeMe development team.&lt;/p&gt;

&lt;p&gt;With lots of people it becomes a lot more difficult to follow all the conversations at once. I&amp;#8217;ll do my best to write up the minutes, if I miss something please let me know so I can add it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            _My start question for today was: How do people do integration testing?_
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The question is a bit on the broad side I admit but &lt;a href=&quot;http://www.bgeek.net&quot;&gt;Owen Evans&lt;/a&gt; stepped up and gave us a rundown of how they do it. The first thing I got from his explanation is that there is a right way to write tests and a wrong way to write them. Because unit tests shouldn&amp;#8217;t do integration testing etc.&lt;br/&gt;
He explained that in the beginning they had a build process that would take about 2 hours to complete and after refactoring their app to use the right way of testing it only takes them a couple of minutes.  Owen uses Fit and Fitnesse for doing the integration testing.  He also explained that integration tests are not tests you would want to run on every build but preferrably during the nightly build so you have something to look forward to when you start your programming day :)  Owen said a lot more but I can&amp;#8217;t remember all of it -sorry Owen-&lt;br/&gt;
The guys at TradeMe have a manual testing process as do we (Xero). &lt;br/&gt;
I think JD was the first to mention watir for automated integration testing, which I second. I think &lt;a href=&quot;http://wtr.rubyforge.org/&quot;&gt;watir&lt;/a&gt; or &lt;a href=&quot;http://watin.sourceforge.net/&quot;&gt;watin&lt;/a&gt; are beautiful tools as is &lt;a href=&quot;http://www.openqa.org/selenium/&quot;&gt;Selenium&lt;/a&gt;.&lt;br/&gt;
For more info on which one fits your project best: &lt;a href=&quot;http://adamesterline.com/2007/04/23/watin-watir-and-selenium-reviewed/&quot;&gt;http://adamesterline.com/2007/04/23/watin-watir-and-selenium-reviewed/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Somehow we got on the subject of source control and the different source control systems were using. My personal preference is &lt;a href=&quot;http://subversion.tigris.org/&quot;&gt;subversion&lt;/a&gt; closely followed by &lt;a href=&quot;http://msdn2.microsoft.com/en-us/teamsystem/aa718825.aspx&quot;&gt;Team Foundation Server&lt;/a&gt;.  Most people in our group liked subversion the best some of the reasons for it are the fact that it is not bound to a visual studio solution, the cost of subversion is also a major factor and the fact that it is not related to any specific technology and the fact that subversion can be easily integrated with other systems.&lt;/p&gt;

&lt;p&gt;JD then asked who did use unit testing and it turns out that about 6 people actually did use unit testing. One of the reasons mentioned for people not using it was that tests take too much maintenance as your code evolves.  The response to that objection was that in that case you&amp;#8217;re probably writing your tests wrong.  The benefits in my opinion were that you write code that is a lot more beautifull and you get a nice, warm fuzzy feeling inside called confidence in your code.&lt;/p&gt;

&lt;p&gt;Next John Rusk took the floor bringing us back to the original question and he introduced us to a new term: &lt;a href=&quot;http://en.wikipedia.org/wiki/Exploratory_test&quot;&gt;exploratory testing&lt;/a&gt;. Which is a way of trying to bring structure to an unstructured process (manual testing). It wasn&amp;#8217;t very clear to me where the distinction lies with manual testing except for the fact that the user that does the actual testing does need to have some knowledge of the application domain.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            [JB](http://www.mindscape.co.nz) said that another good way to understand what your application is going to withstand is to take a couple of uneducated users (they don&#8217;t know anything about the application) and put them in front of a terminal and watch what they are doing. This gives you some very valuable insights for usabilty as well as finding some bugs.





            _My second question was: What differentiates an average developer from a great developer ?_
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This question didn&amp;#8217;t get the same attention as the first one because the answers to this one were almost unanimously: &lt;strong&gt;Passion&lt;/strong&gt;&lt;br/&gt;
The willingness to make mistakes, the drive to look for answers yourself, an inquisitve mind.&lt;/p&gt;

&lt;p&gt;I personally don&amp;#8217;t think of software development as being a science for me it&amp;#8217;s more an art form which might be a good topic for next week.&lt;/p&gt;
</description>
        <published>2007-07-02 16:19:46 +0200</published>
        <link>http://flanders.co.nz/2007/07/02/lunch-with-geeks-wellington-372007/</link>
      </item>
      
    
      
      <item>
        <title>Alex James got his MVP</title>
        <description>&lt;p&gt;I&amp;#8217;m a bit late in the line of congratulations, but I&amp;#8217;d still want to congratulate &lt;a href=&quot;http://www.base4.net/Blog.aspx?ID=495&quot;&gt;Alex James with his being awarded an MVP&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;He truly is a pilar in the NZ community for .NET&lt;/p&gt;
</description>
        <published>2007-07-02 08:12:03 +0200</published>
        <link>http://flanders.co.nz/2007/07/02/alex-james-got-his-mvp/</link>
      </item>
      
    
      
      <item>
        <title>Lunch with geeks - Wellington - 12/06/2007</title>
        <description>&lt;p&gt;Another week, another lunch. The attendees this week were JD (Mindscape), Andrew Peters (Mindscape), Adam Burmister (Xero), Fletch Brown (Xero), Simone Charietta (Calcium), James Hippolite (Telecom), Martin Harris (Telecom) and me (Xero).  &lt;br/&gt;
Our meetings used to be on a thursday but we moved them to Tuesday in the hope that more people would be able to make it (Tim wink wink)&lt;/p&gt;

&lt;p&gt;We started out with the OR mapper of mindscape: Lightspeed.  JD and Andrew were pretty quick to point out that Lightspeed is a lot faster than NHibernate for all the operations they currently support.&lt;br/&gt;
The analogy was made that NHibernate is like the Oracle of OR mappers and supports every single feature you could every imagine. Where Lightspeed is a bit more limited in features but still does a good job.&lt;/p&gt;

&lt;p&gt;From that point on the discussion went on to Katmai (SQL Server 2008) and nobody seemed to know what the new killer features are, apart from the obvious one that it&amp;#8217;s a new version.&lt;br/&gt;
JB of Mindscape has a the ctp installed but didn&amp;#8217;t have time yet to have a proper play with it.  Simone asked what the killer features were for Sql 2005 and offered XPath/XQuery in the Xml columns, I offered CLR integration from then on we struggled a little. It turns out that Andrew and me were the only ones that had actually used the features in a production app.&lt;br/&gt;
Luckily JD threw the MAX values for varchar, nvarchar, .. on the table and everybody agreed that that one is overlooked because it should have been there all along :)&lt;/p&gt;

&lt;p&gt;The next point of discussion was of course the beta release of Safari for windows. Andrew pointed out that you could go to &lt;a href=&quot;http://pimpmysafari.com/&quot;&gt;Pimp my safari&lt;/a&gt; to flesh out safari with some much needed plugins.  Nobody really understood why apple didn&amp;#8217;t take advantage of cleartype rendering on the windows platform. One of the reasons might be that the apple developers want to maintain one codebase, which is also understandable but then they will have to fix the subpixel rendering because now it isn&amp;#8217;t up to scratch. &lt;/p&gt;

&lt;p&gt;James moved the discussion topic over to the fact that Silverlight supports VB.NET better than it will support C# as programming language. Which made me ask why the guys of MS not just kill of the VB language all together ?  Lot&amp;#8217;s of C# programmers agreed on this but the poor VB guys didn&amp;#8217;t flinch one bit.  Everybody around the table had programmed in some form of Basic in the course of their lives. For me I started with GW-Basic, did some visual basic after that but from then I moved to Turbo Pascal.&lt;br/&gt;
The DLR has a dynamic form VB as well so it will still be a while before that one will go away, if it ever does. :) &lt;/p&gt;

&lt;p&gt;Which brought us to the next point of discussion datasets vs OR/mappers. James is a big fan of the dataset and what he can do with it. Where most of the other people around the table liked the OR approach better. After some bickering we agreed that it&amp;#8217;s mostly a personal choice. Both methods have their advantages and disadvantages.  Andrew was the one that enlightened us with the big difference between the 2. Domain models have behaviour attached to objects where an RDBMS approach separates the 2 which makes you maintain the code into 2 different places. &lt;/p&gt;

&lt;p&gt;And the last point of discussion would be XML is it a datacontainer/exchanger or is it a programming language.&lt;br/&gt;
I personally have a strong dislike for xml, I find it verbose and not friendly to write (number of keystrokes).&lt;br/&gt;
JD picked up that discussion by categorically saying that xml is a datacontainer and not a programming language, he then asked me why I asked that question.  The reason for that question is, that whenever I bring up the subject people will tell me it&amp;#8217;s a datacontainer and yet we see the new technologies being introduced are all based on xml (WPF, XUL, &amp;#8230;). Then people come up with the fact that if there is a good tool support for it it&amp;#8217;s not that bad. On this point &lt;a href=&quot;http://ayende.com/Blog/archive/2007/05/19/Random-thoughts-in-a-vacum.aspx&quot;&gt;I personally agree with Ayende&lt;/a&gt;, in that you shouldn&amp;#8217;t have to use a tool if you want to get on with the technology. To quote Ayende:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;em&gt;Here is a good metric that I like to use. Take an technology, and try to build it without any tool assistance. Is it still a good approach? If not, then there it is complex and hard to use. A lot of UI frameworks fails this test, by the way. WinForms certainly does, when you start to think about complex UI.&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Which brought us to the point of DSL&amp;#8217;s vs. XML + tools to generate your manifests (manifest =&gt; a webpage has an xhtml manifest, with javascript behaviour and CSS for representation)&lt;br/&gt;
Somebody around the table didn&amp;#8217;t quite know what DSL meant, so Andrew quickly explained that it means Domain Specific Language and it makes it a lot easier for the developer to write out the manifest he needs or to make your code inside your specific domain more readable.&lt;/p&gt;

&lt;p&gt;Ok that&amp;#8217;s it for today, or at least that&amp;#8217;s all I could remember, if I forgot something please let me know and I&amp;#8217;ll add it to this post&lt;/p&gt;
</description>
        <published>2007-06-11 17:04:03 +0200</published>
        <link>http://flanders.co.nz/2007/06/11/lunch-with-geeks-wellington-12062007/</link>
      </item>
      
    
      
      <item>
        <title>Safari 3.0 for windows</title>
        <description>&lt;p&gt;If you have a dual head video card.&lt;/p&gt;

&lt;p&gt;Try maximizing safari on your secondary monitor..&lt;/p&gt;

&lt;p&gt;Happy browsing..&lt;/p&gt;

&lt;p&gt;Maybe the apple guys should just stay with apple stuff or either test their stuff a little better before releasing it to the windows public. Surely they are under heavy scrutony if you publish commercials that have no truth in them.&lt;/p&gt;
</description>
        <published>2007-06-11 15:21:03 +0200</published>
        <link>http://flanders.co.nz/2007/06/11/safari-30-for-windows/</link>
      </item>
      
    
      
      <item>
        <title>DHTB - thanks kirk</title>
        <description>&lt;p&gt;Through &lt;a href=&quot;http://pageofwords.com/blog/2007/06/06/DHTBILikeComments.aspx&quot;&gt;Kirk&amp;#8217;s blog&lt;/a&gt; I got to a site that allows you to test which type of programmer you are.&lt;/p&gt;

&lt;p&gt;Here are my results.&lt;/p&gt;

&lt;p&gt;You can take the &lt;a href=&quot;http://www.doolwind.com/index.php?page=11&quot;&gt;test yourself&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Your programmer personality type is:&lt;br/&gt;
&lt;strong&gt;DHTB&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You&amp;#8217;re a Doer.&lt;/strong&gt;&lt;br/&gt;
You are very quick at getting tasks done. You believe the outcome is the most important part of a task and the faster you can reach that outcome the better. After all, time is money.&lt;br/&gt;
&lt;strong&gt;You like coding at a High level.&lt;/strong&gt;&lt;br/&gt;
The world is made up of objects and components, you should create your programs in the same way.&lt;br/&gt;
&lt;strong&gt;You work best in a Team.&lt;/strong&gt;&lt;br/&gt;
A good group is better than the sum of it&amp;#8217;s parts. The only thing better than a genius programmer is a cohesive group of genius programmers.&lt;br/&gt;
&lt;strong&gt;You are a liBeral programmer.&lt;/strong&gt;&lt;br/&gt;
Programming is a complex task and you should use white space and comments as freely as possible to help simplify the task. We&amp;#8217;re not writing on paper anymore so we can take up as much room as we need.&lt;/p&gt;
</description>
        <published>2007-06-11 08:40:07 +0200</published>
        <link>http://flanders.co.nz/2007/06/11/dhtb-thanks-kirk/</link>
      </item>
      
    
      
      <item>
        <title>Safari for windows</title>
        <description>&lt;p&gt;Apple has released safari 3 for windows as well&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.apple.com/safari/&quot;&gt;http://www.apple.com/safari/&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-06-11 08:18:30 +0200</published>
        <link>http://flanders.co.nz/2007/06/11/safari-for-windows/</link>
      </item>
      
    
      
      <item>
        <title>Lunch with geeks (31/05/2007)</title>
        <description>&lt;p&gt;Another Thursday, another lunch with geeks in wellington.&lt;/p&gt;

&lt;p&gt;We decided to move the lunch to be on tuesdays. This will allow for Tim Haines to join the discussions.&lt;/p&gt;

&lt;p&gt;Today the attendees were Simone, JD, Andrew Peters, Kirk Jackson and yours truly.&lt;br/&gt;
We touched a broad range of topics in our talks which went from Google Gears to Linux vs. Windows to everybody has a killer idea for a website to microsoft surface and we also touched briefly on database servers.&lt;/p&gt;

&lt;p&gt;We started out discussing  offline storage for web apps, because Google announced it&amp;#8217;s gears plugin today. The opinions in our discussion leaned more towards nobody really liking the idea of offline storage for webapps except me.  According to Simone this introduced an unnecessary layer of complexity.  JD quoted &lt;a href=&quot;http://www.37signals.com/svn/posts/347-youre-not-on-a-fucking-plane-and-if-you-are-it-doesnt-matter&quot;&gt;DHH on why offline storage doesn&amp;#8217;t really matter&lt;/a&gt;, the internet is everywhere.&lt;br/&gt;
Kirk doesn&amp;#8217;t see the point. I tend to think that there has to be some middle ground.&lt;/p&gt;

&lt;p&gt;Next I uttered my frustrations about the ongoing vs. debates and we picked windows vs. linux. The problem in this sentence is clearly the vs.  Instead of beating the other people to death the energy would be better used by finding some sort of compromise. Andrew said he&amp;#8217;d love to see a world where there was a choice between multiple OS&amp;#8217;es and everything would just work on all of them.. I too would like to see that day.&lt;/p&gt;

&lt;p&gt;From there we moved on to the fact that every Joe Schmo has a killer idea to build but they often don&amp;#8217;t realise that the development is only a small part of a bigger picture. After development a lot more money needs to be spent on marketing, sales and support.&lt;/p&gt;

&lt;p&gt;JD put our attention onto Microsoft surface for which most of us got links etc yesterday. Bottom line it looks really cool but the team seems relatively small according to Kirk. JD then explained us why it could be such a small team and that we might be able to get some preview of it before the end of the year.&lt;br/&gt;
We had a bit of fun by coming up with ways to use this device which go from gaming to having a digital tv-guide,&amp;#8230;.&lt;/p&gt;

&lt;p&gt;JD then asked me about the CRM I&amp;#8217;m building in rails for when he could get some preview or test of it. The reply to this was a little bit more complicated but it brought us to our next point of discussion. Andrew asked me if I had used postgres because I was saying that we are moving this crm now to mysql so it can run on dreamhost.  He went on about running the unit tests for lightspeed and their different database providers. It turns out that postgres performs better than all the other databases they support on windows in their unit tests. (this hasn&amp;#8217;t been benchmarked in an official lab or anything)&lt;/p&gt;

&lt;p&gt;This concluded our discussions. If I forgot something please email me or add them in the comments.&lt;/p&gt;
</description>
        <published>2007-05-30 18:44:51 +0200</published>
        <link>http://flanders.co.nz/2007/05/30/lunch-with-geeks-31052007/</link>
      </item>
      
    
      
      <item>
        <title>Stopping smoking, it&#8217;s harder than it seems</title>
        <description>&lt;p&gt;Once again I decided to give up smoking, which at first doesn&amp;#8217;t seem all that hard.  It seems like it&amp;#8217;s not hard, many people have done it before me. So why do I struggle so hard even to not smoke just one day or a couple of hours.&lt;/p&gt;

&lt;p&gt;First off I&amp;#8217;d like to give an exerpt of what&amp;#8217;s been going on in my mind between 9 and 9.05 am this morning, to give you an idea of what makes it hard:&lt;/p&gt;

&lt;p&gt;I got up around 7 and went to work without smoking =&gt; 3 cigarettes saved from an early burning. At 9am I&amp;#8217;d be at work for about 30 minutes, enough to read email and get settled for the day to come.&lt;/p&gt;

&lt;p&gt;9.00.00: wow that&amp;#8217;s interesting in IE I get such and such behaviour in firefox things just work.&lt;br/&gt;
9.00.01: wouldn&amp;#8217;t this be a great time to smoke a cigarette and ponder upon possible solutions&lt;br/&gt;
              No can&amp;#8217;t do that your quiting smoking today.&lt;br/&gt;
              One can&amp;#8217;t hurt can it. YES IT CAN&lt;br/&gt;
9.00.15: well i guess i could just write this and this line.&lt;br/&gt;
9.01.30: ok let&amp;#8217;s test this b***h&lt;br/&gt;
9.02.30: sweet it worked, let&amp;#8217;s celebrate with a cigarette. No can&amp;#8217;t have a cigarette take a tasty  &lt;br/&gt;
              nicotine gum instead. Barf, that gum sucks it doesn&amp;#8217;t even taste like gum. Have a gum and  &lt;br/&gt;
              stop whining sissy.&lt;br/&gt;
9.04.00: Ooh that gum made me unclinch my teeth and relaxed my shoulders nice, you see quitting  &lt;br/&gt;
              ain&amp;#8217;t that hard. Well now I only have to find something that makes me not long for the act of &lt;br/&gt;
              smoking in itself&lt;/p&gt;

&lt;p&gt;Alas the gum didn&amp;#8217;t triumph every occasion and after taking a gum that inner voice did quiet down a lot.&lt;br/&gt;
In total I smoked 3 cigarettes during the day. I normally would have smoked about 14 by now. All is not lost and tomorrow there is another day to battle the demon.&lt;/p&gt;

&lt;p&gt;What this experience is teaching me that the saying &lt;a href=&quot;http://query.nytimes.com/gst/fullpage.html?res=9B0DE1DB103CF932A3575AC0A961948260&amp;amp;sec=health&amp;amp;spon=&amp;amp;pagewanted=1&quot;&gt;You&amp;#8217;re your own worst enemy&lt;/a&gt; (&lt;a href=&quot;http://spoolman.com/sdaeop4/selfdefeatingbehavior.html&quot;&gt;link 2&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;And I would definitely want to thank everybody @ &lt;a href=&quot;http://www.xero.com&quot;&gt;Xero&lt;/a&gt; for their support in this matter. I would have smoked more than 2 cigarettes if it weren&amp;#8217;t for them. These guys have been fantastic and I hope they can carry me through this mess.&lt;/p&gt;
</description>
        <published>2007-05-27 18:42:43 +0200</published>
        <link>http://flanders.co.nz/2007/05/27/stopping-smoking-its-harder-than-it-seems/</link>
      </item>
      
    
      
      <item>
        <title>Lunch with geeks - Wellington (24/05/2007)</title>
        <description>&lt;p&gt;After Alex James setting an example with the Architects chats in Auckland, I decided we needed the same thing in Wellington.&lt;/p&gt;

&lt;p&gt;I called it Lunch with geeks, more because I don&amp;#8217;t try to label developers and IT people.&lt;br/&gt;
Anyway our first meeting was a successful one :) And the turnout was quite impressive. There is a lot of talent in Wellington.  The people that joined our first meeting were &lt;a href=&quot;http://turtle.net.nz/blog/&quot;&gt;JB (Jeremy Boyd)&lt;/a&gt;, &lt;a href=&quot;http://blog.bluecog.co.nz/&quot;&gt;JD (John-Daniel Trask)&lt;/a&gt;, &lt;a href=&quot;http://www.mindscape.co.nz/blog/&quot;&gt;Andrew Peters&lt;/a&gt;, &lt;a href=&quot;http://tvornz.spaces.live.com/&quot;&gt;James Hippolite&lt;/a&gt;, &lt;a href=&quot;http://www.codeclimber.net.nz&quot;&gt;Simone Chiaretta&lt;/a&gt;, &lt;a href=&quot;http://flog.co.nz&quot;&gt;Adam Burmister&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We had some interesting discussions and tried to limit the session to one hour, seen as we all have jobs to go to etc.  &lt;br/&gt;
Of course we couldn&amp;#8217;t resist to have a discussion about the americas cup: Team New Zealand vs Italian Luna Rossa.  Next on the agenda came a discussion on &lt;a href=&quot;http://www.subtextproject.com/&quot;&gt;subtext&lt;/a&gt; vs. &lt;a href=&quot;http://www.nblogr.com/&quot;&gt;nblogr&lt;/a&gt; which is not a comparison really because subtext is going on v.2.0 and nblogr is going for v0.19 alpha. In the end it turns out that if you want to start blogging today you probably should go with subtext. And by the time they release 2.0 nblogr should be completely on par with them regarding features and released as v1.0.&lt;/p&gt;

&lt;p&gt;The next point of discussion was the DLR with IronRuby and &lt;a href=&quot;http://www.codeplex.com/ironpython&quot;&gt;IronPython&lt;/a&gt;, where Andrew P. took the lead in the discussion.  From the DLR the discussion moved onto &lt;a href=&quot;http://silverlight.net/&quot;&gt;Silverlight&lt;/a&gt; and what it exactly is. The guys from Mindscape obviously had a more in depth play with it than the rest of us which was pretty enlightening for me. And it put a couple of concerns to rest. Adam was concerned about the fact that you wouldn&amp;#8217;t be able to do view source on an application so you could learn from other peoples work. This issue is solved with a new reflector application that downloads the silverlight app and shows you the source.  My concern was that search engines would face the same problem to index silverlight as they have with indexing a flash application. &lt;/p&gt;

&lt;p&gt;James wanted to know if silverlight was going to be the flash killer and we agreed that it would be more an html killer than it would be a flash killer. Andrew explained how nicely silverlight plays with the DOM to such a degree that you can manipulate the DOM from within the silverlight app and you can control the silverlight app from javascript.  All of these things are nice to have and things that were missing really from flash in the days that I was working with flash.&lt;/p&gt;

&lt;p&gt;JD mentioned that there was a benchmark on a demo he saw where there was a chess game that calculated the next possible moves. On 1 side there was a javascript app and on the other side a silverlight app. The javascript app could calculate something like 10000 new moves and the silverlight app would do millions in the same timeframe.&lt;/p&gt;

&lt;p&gt;Next week we doing the lunch again.. Come along if you like.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            **UPDATE: **To be clear Subtext is already at 1.0 and will go to 2.0. It&#8217;s nblogr that will be going 1.0
&lt;/code&gt;&lt;/pre&gt;
</description>
        <published>2007-05-23 16:01:33 +0200</published>
        <link>http://flanders.co.nz/2007/05/23/lunch-with-geeks-wellington-24052007/</link>
      </item>
      
    
      
      <item>
        <title>Sloppy, essential for web site testing</title>
        <description>&lt;p&gt;We had a lunch with Sam from &lt;a href=&quot;http://www.trademe.co.nz/&quot;&gt;TradeMe&lt;/a&gt; today from which I took that most of the people are surfing at dial up speeds in NZ. First off : I can&amp;#8217;t believe you would settle for that :)&lt;/p&gt;

&lt;p&gt;This poses a problem because on my pc or connection I have got full speed so all my javascript etc initializes fast. Sam went on in his talk only briefly mentioning Sloppy a tool that will simulate other bandwith speeds on your machine&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dallaway.com/sloppy/index.html&quot;&gt;Link to Sloppy - the slow proxy for dial-up modem speed simulation (slow down)&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-05-21 15:20:59 +0200</published>
        <link>http://flanders.co.nz/2007/05/21/sloppy-essential-for-web-site-testing/</link>
      </item>
      
    
      
      <item>
        <title>What is wrong with people?</title>
        <description>&lt;p&gt;Did I miss the memo about having to be religious about the tools you use. In my mind anything that falls in the category religion should be banned as it is a cancer on society. Philosophy is good. Budhism is a philosophy to which I would subscribe for example. I am allergic to people that tell me what to think, probably why I never really fell for the &amp;#8220;ruby community&amp;#8221;. I don&amp;#8217;t need convincing, I&amp;#8217;ll do that myself, I just want correct information and plenty of it. &lt;/p&gt;

&lt;p&gt;That being said I stumbled across this thread where people are actively discouraging &lt;a href=&quot;http://tirania.org/blog/&quot;&gt;Miguel de Icaza&lt;/a&gt; to implement silverlight and co in Mono&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://linux.slashdot.org/article.pl?sid=07/05/03/2033219&quot;&gt;http://linux.slashdot.org/article.pl?sid=07/05/03/2033219&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These are the reactions to it on channel 9.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://channel9.msdn.com/ShowPost.aspx?PostID=305405#305405&quot;&gt;http://channel9.msdn.com/ShowPost.aspx?PostID=305405#305405&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;I personally use both I use Linux and I use vista both on a 64 bit system.  I like the whole simplicity of linux but the applications for it are not nearly as finished as the ones that are there on the windows platform.&lt;/p&gt;

&lt;p&gt;For example MonoDevelop doesn&amp;#8217;t come anywhere near Visual studio. Gimp is no photoshop, &amp;#8230;.&lt;/p&gt;

&lt;p&gt;Microsoft provides a more viable eco system for people to make money of what they do. I do wish Microsoft would support open source a bit more instead of copying it and thus mostly killing the OSS project. Although I do understand that they are a &lt;strong&gt;business &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If I would have more time I&amp;#8217;d certainly want to contribute to Mono but unfortunately there are only so many hours in a day and these hours are not enough.&lt;/p&gt;

&lt;p&gt;To get back to my original point. You can be passionate about something, and everybody that has spent some time talking to me will have picked up on the fact that I don&amp;#8217;t just accept the technologies that are being shoved down our throats these days.&lt;/p&gt;

&lt;p&gt;The reason I don&amp;#8217;t read blogs on Ruby anymore is the following: I simply couldn&amp;#8217;t stomach the people going on and on about how cool their mac is and yet they need to reboot it on a regular basis. My vista pc at work hasn&amp;#8217;t rebooted for the last 2 weeks now, before that I got a BSOD regarding memory management :)&lt;br/&gt;
Furthermore there are programmers that keep going on about the fact that notepad/vi/emacs/textmate/eclipse are the best tools for developing applications.&lt;br/&gt;
I don&amp;#8217;t know about you but for me programming is about creating stuff, preferrably fast and visual studio is the perfect fit for it.&lt;/p&gt;

&lt;p&gt;Granted my vista pc doesn&amp;#8217;t look nearly as cool as a mac or an ubuntu with berryl machine but I am far more productive for my job on it.&lt;/p&gt;

&lt;p&gt;So my conclusion for this post would be : &lt;br/&gt;
Don&amp;#8217;t get religious about your tools/language/platform but choose the best one for the job at hand.&lt;/p&gt;

&lt;p&gt;Uhm.. this post turned out to be a big rant instead of my intended post which was going to be about how much I look forward to C# 3.0 and the DLR.&lt;/p&gt;

&lt;p&gt;As soon as I can get my hands on some of the bits I&amp;#8217;ll be posting my findings.&lt;/p&gt;
</description>
        <published>2007-05-16 17:17:35 +0200</published>
        <link>http://flanders.co.nz/2007/05/16/what-is-wrong-with-people/</link>
      </item>
      
    
      
      <item>
        <title>40.000 blowjobs promised by sexy politician (serious update)</title>
        <description>&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Politics done Belgian style. It&amp;#8217;s a party that runs for a couple of seats in the flemish council.&lt;br/&gt;
Topless poster etc.. please visit :D&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nee-antwerpen.be/index-eng.htm&quot;&gt;40.000 blowjobs promised by sexy politician (serious update)&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-05-14 21:56:40 +0200</published>
        <link>http://flanders.co.nz/2007/05/14/40000-blowjobs-promised-by-sexy-politician-serious-update/</link>
      </item>
      
    
      
      <item>
        <title>Ruby.NET</title>
        <description>&lt;p&gt;I know about IronRuby and I think it&amp;#8217;s exciting news. I&amp;#8217;ve been following the work of gardens point and their ruby.net compiler.&lt;/p&gt;

&lt;p&gt;They&amp;#8217;ve just announced visual studio 2005 integration of their compiler. It does require the sdk 4.0 to be installed on your machine &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://plas.fit.qut.edu.au/Ruby.NET/&quot;&gt;Link to QUT | FIT | PLAS&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-05-07 13:44:45 +0200</published>
        <link>http://flanders.co.nz/2007/05/07/rubynet/</link>
      </item>
      
    
      
      <item>
        <title>Discovery Channel :: New Toys Read Brain Waves</title>
        <description>&lt;p&gt;I came across this article which I found pretty cool news.  Playing games will be just a matter of thinking about the moves.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dsc.discovery.com/news/2007/04/30/mindreader_tec.html?category=animals&amp;amp;guid=20070430140000&amp;amp;dcitc=w19-502-ak-0000&quot;&gt;Link to Discovery Channel :: New Toys Read Brain Waves&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-05-05 10:37:05 +0200</published>
        <link>http://flanders.co.nz/2007/05/05/discovery-channel-new-toys-read-brain-waves/</link>
      </item>
      
    
      
      <item>
        <title>NBlogr Presentation in Wellington</title>
        <description>&lt;p&gt;Tonight I got the chance to present my nblogr application to a larger audience. Unfortunately I&amp;#8217;m in the process of fixing bugs in NBlogr and one of those bugs required me to make a change to NBlogr.Web/views/default/shared/mainmenu.boo . I had made this change on sunday around midnight right before I went to bed. Of course I forgot to test the application because and it wouldn&amp;#8217;t run on my presentation.  When I got home it took me about 3 minutes to fix. I had to import a reference to Base4.Storage in the mainmenu.boo file.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;d like to thank everybody for coming, their patience and listening to my ramblings.&lt;/p&gt;

&lt;p&gt;Anyway I&amp;#8217;ve included my slide deck in this post and I think it might be a good idea to post a couple more links to some of the people I mentioned in my talk.&lt;br/&gt;
&lt;a href=&quot;http://www.base4.net&quot;&gt;http://www.base4.net&lt;/a&gt;  - Alex James, Auckland&lt;br/&gt;
&lt;a href=&quot;http://blog.bittercoder.com&quot;&gt;http://blog.bittercoder.com&lt;/a&gt; - Alex Henderson, Auckland&lt;br/&gt;
&lt;a href=&quot;http://www.ayende.com/blog&quot;&gt;http://www.ayende.com/blog&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://hammet.castleproject.org&quot;&gt;http://hammet.castleproject.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.castleproject.org&quot;&gt;http://www.castleproject.org&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://www.nunit.org&quot;&gt;http://www.nunit.org&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://www.nblogr.com&quot;&gt;http://www.nblogr.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;svn repository:&lt;br/&gt;
&lt;a href=&quot;https://svn.koolkraft.net/nblogr/trunk&quot;&gt;https://svn.koolkraft.net/nblogr/trunk&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            [NBlogr-Wellington 02 _05_2007.ppt (440 KB)](http://www.flanders.co.nz/Blog/content/binary/NBlogr-Wellington%2002%20_05_2007.ppt)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To get nblogr running on your machine follow these steps :&lt;/p&gt;

&lt;p&gt;Make sure you have a subversion client installed or subversion itself.&lt;/p&gt;

&lt;p&gt;C:\Projects&gt; svn co &lt;a href=&quot;https://svn.koolkraft.net/nblogr/trunk&quot;&gt;https://svn.koolkraft.net/nblogr/trunk&lt;/a&gt;&lt;br/&gt;
C:\Projects&gt; osql -E&lt;br/&gt;
1&gt; create database nblogr&lt;br/&gt;
2&gt; go&lt;br/&gt;
1&gt; quit&lt;/p&gt;

&lt;p&gt;open the nblogr solution.&lt;/p&gt;

&lt;p&gt;change the connection string in web.config&lt;/p&gt;

&lt;p&gt;The different configuration options are explained in the web.config&lt;/p&gt;

&lt;p&gt;If you want to use a different extension than aspx you have to change the httphandler configuration and set the extension in nblogr/routing&lt;/p&gt;

&lt;p&gt;if you want urls to be rewritten without an extension you will have to enable wildcard handling.&lt;/p&gt;

&lt;p&gt;hit ctrl-f5 and it should take you through the configuration. If ctrl-f5 doesn&amp;#8217;t work try setting up the application in IIS.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            **Update:   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;**James Hippolite from telecom was so kind to blog most of the bullet points of my slides. Which can be found here &lt;a href=&quot;http://tvornz.spaces.live.com/blog/cns%21A93B6100E328706D%21388.entry?_c=BlogPart&amp;amp;_c02_owner=1&quot;&gt;http://tvornz.spaces.live.com/blog/cns!A93B6100E328706D!388.entry?&lt;em&gt;c=BlogPart&amp;amp;&lt;/em&gt;c02_owner=1&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-05-01 23:17:00 +0200</published>
        <link>http://flanders.co.nz/2007/05/01/nblogr-presentation-in-wellington/</link>
      </item>
      
    
      
      <item>
        <title>Dockpanels instead of the taskbar</title>
        <description>&lt;p&gt;As I said before I really like the concept of &lt;a href=&quot;http://www.flanders.co.nz/Blog/2007/04/17/WhatIWouldLikeToSeeChangedInVista.aspx&quot;&gt;dock panels over the taskbar&lt;/a&gt; with start menu.&lt;/p&gt;

&lt;p&gt;And when I was searching for something on the net I stumbled on this &lt;a href=&quot;http://www.stardock.com/products/objectdock/&quot;&gt;link to the stardock website&lt;/a&gt;. Apparently they have created something like that. It&amp;#8217;s freeware and above all it&amp;#8217;s pretty :)&lt;/p&gt;

&lt;p&gt;I hope you like it as much as I&amp;#8217;m enjoying it.&lt;/p&gt;

&lt;p&gt;Disclaimer:&lt;br/&gt;
I am in no way getting an incentive for this anouncement. I just like this piece of software.&lt;/p&gt;
</description>
        <published>2007-04-29 21:25:02 +0200</published>
        <link>http://flanders.co.nz/2007/04/29/dockpanels-instead-of-the-taskbar/</link>
      </item>
      
    
      
      <item>
        <title>Subversion vs Team Foundation</title>
        <description>&lt;p&gt;I work at Xero and we were using Sourcesafe, which we always knew had to be replaced sometime.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            [http://www.codinghorror.com/blog/archives/000660.html](http://www.codinghorror.com/blog/archives/000660.html)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I have some experience with most of the source control systems out there. We decided to go with Team Foundation Server the reasons for it being :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;High level of integration with visual studio 2005&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Easily extensible with C#&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is currently v1, which translates to me as 2 more versions and it will be the most awesome tool out there&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Based on Sql Server&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Why didn&amp;#8217;t we choose for Subversion, you may ask ?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It&amp;#8217;s a microsoft shop we don&amp;#8217;t need cross-platform tools&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Not based on Sql Server&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No webservices api ready to be consumed&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I personally like the way subversion stays out of the way and you don&amp;#8217;t have to explicitly check stuff out. But I don&amp;#8217;t like the decentralised way of managing it.&lt;/p&gt;

&lt;p&gt;The tools that come with Team Foundation Server, even though it&amp;#8217;s only v1, look more slick and handle a lot better than the tools that come with Subversion.&lt;/p&gt;

&lt;p&gt;Since everybody in our team was already familiar with source safe which made the learning curve virtually non existent.&lt;/p&gt;

&lt;p&gt;All in all taking all the variables into account we decided that Team Foundation Server was a much better solution for our needs than subversion.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;If you want to read some other peoples thoughts on the subject, Ayende and Roy Osherove  have been having a discussion about it through their blogs.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            [http://ayende.com/Blog/archive/2007/04/29/CodePlex-TFS-and-Subversion.aspx](http://ayende.com/Blog/archive/2007/04/29/CodePlex-TFS-and-Subversion.aspx)


            [http://weblogs.asp.net/rosherove/archive/2007/04/29/tfs-or-not-being-a-perfectionist-is-a-realistic-world.aspx](http://weblogs.asp.net/rosherove/archive/2007/04/29/tfs-or-not-being-a-perfectionist-is-a-realistic-world.aspx)


            [http://ayende.com/Blog/archive/2007/04/29/TFS-Zero-Friction-and-living-in-an-imperfect-world.aspx](http://ayende.com/Blog/archive/2007/04/29/TFS-Zero-Friction-and-living-in-an-imperfect-world.aspx)


            [http://weblogs.asp.net/rosherove/archive/2007/04/29/what-source-control-tool-do-you-use-and-more-on-tfs-vs-open-source-tools.aspx](http://weblogs.asp.net/rosherove/archive/2007/04/29/what-source-control-tool-do-you-use-and-more-on-tfs-vs-open-source-tools.aspx)


            [http://ayende.com/Blog/archive/2007/04/29/TFS-Vs.-Open-Source-tools.aspx](http://ayende.com/Blog/archive/2007/04/29/TFS-Vs.-Open-Source-tools.aspx)


            [http://weblogs.asp.net/bsimser/archive/2007/04/29/tfs-vs-open-source-the-battle-rages-on.aspx](http://weblogs.asp.net/bsimser/archive/2007/04/29/tfs-vs-open-source-the-battle-rages-on.aspx)


            [http://ayende.com/Blog/archive/2007/04/29/Exensability-Ask-and-you-shall-recieve.aspx](http://ayende.com/Blog/archive/2007/04/29/Exensability-Ask-and-you-shall-recieve.aspx)
&lt;/code&gt;&lt;/pre&gt;
</description>
        <published>2007-04-29 13:12:50 +0200</published>
        <link>http://flanders.co.nz/2007/04/29/subversion-vs-team-foundation/</link>
      </item>
      
    
      
      <item>
        <title>Want to start using monorail but don&#8217;t quite know how ?</title>
        <description>&lt;p&gt;There are a couple of excellent resources available online.&lt;/p&gt;

&lt;p&gt;Screencasts :&lt;br/&gt;
&lt;a href=&quot;http://colinramsay.co.uk/2007/04/17/getting-started-with-monorail-screencast-one/&quot;&gt;http://colinramsay.co.uk/2007/04/17/getting-started-with-monorail-screencast-one/ &lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://colinramsay.co.uk/2007/04/18/using-monorail-screencast-two/&quot;&gt;http://colinramsay.co.uk/2007/04/18/using-monorail-screencast-two/&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://colinramsay.co.uk/2007/04/19/databinding-and-activerecord-screencast-three/&quot;&gt;http://colinramsay.co.uk/2007/04/19/databinding-and-activerecord-screencast-three/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Tutorials:&lt;br/&gt;
&lt;a href=&quot;http://blog.bittercoder.com/PermaLink,guid,b298cbe4-6eff-4783-a2a1-c95e344a9de5.aspx&quot;&gt;http://blog.bittercoder.com/PermaLink,guid,b298cbe4-6eff-4783-a2a1-c95e344a9de5.aspx &lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://blog.bittercoder.com/PermaLink,guid,195c3d13-faf8-4f5e-8faf-861d02b0fc2e.aspx&quot;&gt;http://blog.bittercoder.com/PermaLink,guid,195c3d13-faf8-4f5e-8faf-861d02b0fc2e.aspx&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-04-19 08:16:38 +0200</published>
        <link>http://flanders.co.nz/2007/04/19/want-to-start-using-monorail-but-dont-quite-know-how/</link>
      </item>
      
    
      
      <item>
        <title>What I would like to see changed in vista</title>
        <description>&lt;p&gt;I do see the benefit of UAC in vista but I would like it to have some type of timeout or program context so that when I open visual studio for example I don&amp;#8217;t have to click allow for every instance I open (I often have 3 instances open)&lt;/p&gt;

&lt;p&gt;I would definitely like to get more control over the UI.&lt;/p&gt;

&lt;p&gt;The taskbar had out lived it&amp;#8217;s usefullnes back in windows 98 I would love to see some panels like they have in gnome or some taskbar like mac has or a similar higly customizable option. so that i am not plagued by all those windows.&lt;/p&gt;

&lt;p&gt;That would also solve the &lt;a href=&quot;http://www.joelonsoftware.com/items/2006/11/21.html&quot;&gt;debacle of the shutdown menu&lt;/a&gt; options because a user can ultimately change what is there.  I&amp;#8217;d like to see power more power for the people.&lt;/p&gt;

&lt;p&gt;Tagging for any type of file would also be great and a search that works a bit faster.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m sure the people at Microsoft are really smart people that would be able to decouple the interface from the underlying functionality.&lt;/p&gt;

&lt;p&gt;These customizable options are really nice and would in turn build a whole new type of community.&lt;/p&gt;

&lt;p&gt;There will probably be more coming.. but this concludes this post for today.&lt;/p&gt;
</description>
        <published>2007-04-17 10:02:12 +0200</published>
        <link>http://flanders.co.nz/2007/04/17/what-i-would-like-to-see-changed-in-vista/</link>
      </item>
      
    
      
      <item>
        <title>Great tutorials on castle</title>
        <description>&lt;p&gt;Alex Henderson has been very busy writing a tutorial series on how to properly use and understand castle&amp;#8217;s windsor container.&lt;/p&gt;

&lt;p&gt;You can find them here &lt;a href=&quot;http://blog.bittercoder.com/PermaLink,guid,b298cbe4-6eff-4783-a2a1-c95e344a9de5.aspx&quot;&gt;Container tutorials&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check them out :)&lt;/p&gt;
</description>
        <published>2007-04-17 09:53:16 +0200</published>
        <link>http://flanders.co.nz/2007/04/17/great-tutorials-on-castle/</link>
      </item>
      
    
      
      <item>
        <title>Humanizing timespans in .NET</title>
        <description>&lt;p&gt;After a couple of months getting into ruby on rails I got back to .NET development, as well as back to NBlogr and back to blogging.&lt;/p&gt;

&lt;p&gt;Now for replies I saw on some blogs the format &amp;lt; replied &lt;strong&gt;1 month, 5 days, 2 hours and 13 minutes ago.&lt;/strong&gt;  I wanted to find out how they did that and my first reaction was.. yay easy hello timespan.&lt;/p&gt;

&lt;p&gt;Turns out that timespan only goes up to days, no months or anything.  A bit deeper hidden for a c# programmer there is the function datediff in vb.net  But that function doesn&amp;#8217;t handle years properly for example the difference between today 01/01/2007 15:15 and 31/12/2007 18:00 gives a difference of 1 year instead of 1 day. So I decided to write my own class for it, turns out that the solution is quite simple.&lt;/p&gt;

&lt;p&gt;To use the class below one would do :&lt;br/&gt;
&lt;em&gt;NBlogr.Common.TimeSpan ts = new NBlogr.Common.TimeSpan(someStartDate, someEndDate);&lt;br/&gt;
string humantime = ts.ToString() + &amp;#8221; ago&amp;#8221;;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt; The class :&lt;/p&gt;

&lt;p&gt;/*&lt;/p&gt;

&lt;p&gt; * Created by: Ivan Porto Carrero&lt;/p&gt;

&lt;p&gt; * Created: Thursday, 12 April 2007&lt;/p&gt;

&lt;p&gt; */&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;using System;&lt;/p&gt;

&lt;p&gt;using System.IO;&lt;/p&gt;

&lt;p&gt;using System.Text;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;namespace NBlogr.Common&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;    public class TimeSpan&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        private DateTime startDate;&lt;/p&gt;

&lt;p&gt;        private DateTime endDate;&lt;/p&gt;

&lt;p&gt;        private int startDay;&lt;/p&gt;

&lt;p&gt;        private int endDay;&lt;/p&gt;

&lt;p&gt;        private int startMonth;&lt;/p&gt;

&lt;p&gt;        private int endMonth;&lt;/p&gt;

&lt;p&gt;        private int startYear;&lt;/p&gt;

&lt;p&gt;        private int endYear;&lt;/p&gt;

&lt;p&gt;        private int startHour;&lt;/p&gt;

&lt;p&gt;        private int endHour;&lt;/p&gt;

&lt;p&gt;        private int startMinute;&lt;/p&gt;

&lt;p&gt;        private int endMinute;&lt;/p&gt;

&lt;p&gt;        private int startSecond;&lt;/p&gt;

&lt;p&gt;        private int endSecond;&lt;/p&gt;

&lt;p&gt;        private int diffMonth;&lt;/p&gt;

&lt;p&gt;        private int diffDays;&lt;/p&gt;

&lt;p&gt;        private int diffHours;&lt;/p&gt;

&lt;p&gt;        private int diffMinutes;&lt;/p&gt;

&lt;p&gt;        private int diffYear;&lt;/p&gt;

&lt;p&gt;        private int diffSeconds;&lt;/p&gt;

&lt;p&gt;        private bool hasCalculated;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public TimeSpan()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            hasCalculated = false;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public TimeSpan(DateTime startDate, DateTime endDate)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            StartDate = startDate;&lt;/p&gt;

&lt;p&gt;            EndDate = endDate;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        private void initialize()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            startDay = StartDate.Day;&lt;/p&gt;

&lt;p&gt;            endDay = EndDate.Day;&lt;/p&gt;

&lt;p&gt;            startMonth = StartDate.Month;&lt;/p&gt;

&lt;p&gt;            endMonth = EndDate.Month;&lt;/p&gt;

&lt;p&gt;            startYear = StartDate.Year;&lt;/p&gt;

&lt;p&gt;            endYear = EndDate.Year;&lt;/p&gt;

&lt;p&gt;            startHour = StartDate.Hour;&lt;/p&gt;

&lt;p&gt;            endHour = EndDate.Hour;&lt;/p&gt;

&lt;p&gt;            startMinute = StartDate.Minute;&lt;/p&gt;

&lt;p&gt;            endMinute = EndDate.Minute;&lt;/p&gt;

&lt;p&gt;            startSecond = StartDate.Second;&lt;/p&gt;

&lt;p&gt;            endSecond = EndDate.Second;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public override string ToString()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            StringBuilder sb = new StringBuilder();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            if (Years &gt; 0)&lt;/p&gt;

&lt;p&gt;                sb.Append(pluralise(&amp;#8220;year&amp;#8221;, Years));&lt;/p&gt;

&lt;p&gt;            if (Months &gt; 0 &amp;amp;&amp;amp; Years &gt; 0)&lt;/p&gt;

&lt;p&gt;                sb.Append(&amp;#8220;, &amp;#8220;);&lt;/p&gt;

&lt;p&gt;            if (Months &gt; 0)&lt;/p&gt;

&lt;p&gt;                sb.Append(pluralise(&amp;#8220;month&amp;#8221;, Months));&lt;/p&gt;

&lt;p&gt;            if ((Months &gt; 0 || Years &gt; 0) &amp;amp;&amp;amp; Days &gt; 0)&lt;/p&gt;

&lt;p&gt;                sb.Append(&amp;#8220;, &amp;#8220;);&lt;/p&gt;

&lt;p&gt;            if (Days &gt; 0)&lt;/p&gt;

&lt;p&gt;                sb.Append(pluralise(&amp;#8220;day&amp;#8221;, Days));&lt;/p&gt;

&lt;p&gt;            if ((Months &gt; 0 || Years &gt; 0 || Days &gt; 0) &amp;amp;&amp;amp; Hours &gt; 0)&lt;/p&gt;

&lt;p&gt;                sb.Append(&amp;#8220;, &amp;#8220;);&lt;/p&gt;

&lt;p&gt;            if (Hours &gt; 0)&lt;/p&gt;

&lt;p&gt;                sb.Append(pluralise(&amp;#8220;hour&amp;#8221;, Hours));&lt;/p&gt;

&lt;p&gt;            if ((Months &gt; 0 || Years &gt; 0 || Days &gt; 0 || Hours &gt; 0) &amp;amp;&amp;amp; Minutes &gt; 0)&lt;/p&gt;

&lt;p&gt;                sb.Append(&amp;#8220;, &amp;#8220;);&lt;/p&gt;

&lt;p&gt;            if (Minutes &gt; 0)&lt;/p&gt;

&lt;p&gt;                sb.Append(pluralise(&amp;#8220;minute&amp;#8221;, Minutes));&lt;/p&gt;

&lt;p&gt;            if ((Months &gt; 0 || Years &gt; 0 || Days &gt; 0 || Hours &gt; 0 || Minutes &gt; 0) &amp;amp;&amp;amp; Seconds &gt; 0)&lt;/p&gt;

&lt;p&gt;                sb.Append(&amp;#8220;, &amp;#8220;);&lt;/p&gt;

&lt;p&gt;            if (Seconds &gt; 0)&lt;/p&gt;

&lt;p&gt;                sb.Append(pluralise(&amp;#8220;second&amp;#8221;, Seconds));&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            return sb.ToString();&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        private void calculate()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            initialize();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            diffYear = endYear - startYear;&lt;/p&gt;

&lt;p&gt;            calculateMonths();&lt;/p&gt;

&lt;p&gt;            calculateDays();&lt;/p&gt;

&lt;p&gt;            calculateHours();&lt;/p&gt;

&lt;p&gt;            calculateMinutes();&lt;/p&gt;

&lt;p&gt;            calculateSeconds();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            hasCalculated = true;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        private static string pluralise(string singular, int quantity)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            return quantity != 1 ? string.Format(&amp;#8220;{0} {1}&amp;#8221;, quantity, singular + &amp;#8220;s&amp;#8221;) : string.Format(&amp;#8220;{0} {1}&amp;#8221;, quantity, singular);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        private void calculateMonths()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            if (endMonth &gt;= startMonth)&lt;/p&gt;

&lt;p&gt;                diffMonth = endMonth - startMonth;&lt;/p&gt;

&lt;p&gt;            else&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                diffYear&amp;#8211;;&lt;/p&gt;

&lt;p&gt;                diffMonth = (12 - startMonth) + endMonth;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        private void calculateDays()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            if (endDay &gt;= startDay)&lt;/p&gt;

&lt;p&gt;                diffDays = endDay - startDay;&lt;/p&gt;

&lt;p&gt;            else&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                diffMonth&amp;#8211;;&lt;/p&gt;

&lt;p&gt;                diffDays = (DateTime.DaysInMonth(startYear, startMonth) - startDay) + endDay;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        private void calculateHours()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            if (endHour &gt;= startHour)&lt;/p&gt;

&lt;p&gt;                diffHours = endHour - startHour;&lt;/p&gt;

&lt;p&gt;            else&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                diffDays&amp;#8211;;&lt;/p&gt;

&lt;p&gt;                diffHours = (24 - startHour) + endHour;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        private void calculateMinutes()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            if (endMinute &gt;= startMinute)&lt;/p&gt;

&lt;p&gt;                diffMinutes = endMinute - startMinute;&lt;/p&gt;

&lt;p&gt;            else&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                diffHours&amp;#8211;;&lt;/p&gt;

&lt;p&gt;                diffMinutes = 60 - startMinute + endMinute;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        private void calculateSeconds()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            if (endSecond &gt;= startSecond)&lt;/p&gt;

&lt;p&gt;                diffSeconds = endSecond - startSecond;&lt;/p&gt;

&lt;p&gt;            else&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                diffMinutes&amp;#8211;;&lt;/p&gt;

&lt;p&gt;                diffSeconds = 60 - startSecond + endSecond;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public int Months&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                if (!hasCalculated)&lt;/p&gt;

&lt;p&gt;                    calculate();&lt;/p&gt;

&lt;p&gt;                return diffMonth;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            set { diffMonth = value; }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public int Days&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                if (!hasCalculated)&lt;/p&gt;

&lt;p&gt;                    calculate();&lt;/p&gt;

&lt;p&gt;                return diffDays;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            set { diffDays = value; }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public int Hours&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                if (!hasCalculated)&lt;/p&gt;

&lt;p&gt;                    calculate();&lt;/p&gt;

&lt;p&gt;                return diffHours;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            set { diffHours = value; }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public int Minutes&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                if (!hasCalculated)&lt;/p&gt;

&lt;p&gt;                    calculate();&lt;/p&gt;

&lt;p&gt;                return diffMinutes;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            set { diffMinutes = value; }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public int Years&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                if(!hasCalculated)&lt;/p&gt;

&lt;p&gt;                    calculate();&lt;/p&gt;

&lt;p&gt;                return diffYear;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            set { diffYear = value; }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public DateTime StartDate&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                if (startDate == null)&lt;/p&gt;

&lt;p&gt;                    throw new InvalidDataException(&amp;#8220;You need to specify a start date&amp;#8221;);&lt;/p&gt;

&lt;p&gt;                return startDate;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            set&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                hasCalculated = false;&lt;/p&gt;

&lt;p&gt;                startDate = value;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public DateTime EndDate&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                if (endDate == null)&lt;/p&gt;

&lt;p&gt;                    throw new InvalidDataException(&amp;#8220;You need to specify a end date&amp;#8221;);&lt;/p&gt;

&lt;p&gt;                return endDate;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            set&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                hasCalculated = false;&lt;/p&gt;

&lt;p&gt;                endDate = value;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public int Seconds&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get { return diffSeconds; }&lt;/p&gt;

&lt;p&gt;            set { diffSeconds = value; }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;
</description>
        <published>2007-04-11 21:56:36 +0200</published>
        <link>http://flanders.co.nz/2007/04/11/humanizing-timespans-in-net/</link>
      </item>
      
    
      
      <item>
        <title>Got a pair of super headphones</title>
        <description>&lt;p&gt;My ipod headphones died on me.. so it was time to get some new stuff and preferrably better than what I had.&lt;/p&gt;

&lt;p&gt;Because I&amp;#8217;m a cheap skate and I find it a bit of a ridiculous sight to have these huge headphones on my head when walking down the street.&lt;/p&gt;

&lt;p&gt;I went for the &lt;a href=&quot;http://www.bose.co.nz/site/index.aspx?path=products&amp;amp;CTRL=PG&amp;amp;pfid=10&amp;amp;pgid=109&quot;&gt;Bose in-ear headphones&lt;/a&gt;. &lt;br/&gt;
&lt;img src=&quot;http://www.bose.co.nz/site/images/store/products/QCZIE_m.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And man they are well worth the money.. I can finally get proper bass and the noises from the office/street are drastically pushed to the background.&lt;/p&gt;
</description>
        <published>2007-04-10 17:10:01 +0200</published>
        <link>http://flanders.co.nz/2007/04/10/got-a-pair-of-super-headphones/</link>
      </item>
      
    
      
      <item>
        <title>PowerShell in the Vista Sidebar!</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.mindscape.co.nz/&quot;&gt;JD and JB&lt;/a&gt; are at it again.. This time they give us a powershell gadget for the vista sidebar. It&amp;#8217;s a really cool toy.. and a valuable resource for those wanting to create a sidebar gadget.&lt;/p&gt;

&lt;p&gt;Feel free to digg them.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://digg.com/microsoft/PowerShell_in_the_Vista_Sidebar&quot;&gt;Link to Digg - PowerShell in the Vista Sidebar!&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-04-09 15:56:24 +0200</published>
        <link>http://flanders.co.nz/2007/04/09/powershell-in-the-vista-sidebar/</link>
      </item>
      
    
      
      <item>
        <title>Preview Handler Pack updated</title>
        <description>&lt;p&gt;I&amp;#8217;m happy to let you know that &lt;a href=&quot;http://blog.tatham.oddie.com.au&quot;&gt;Tatham Oddie&lt;/a&gt; and I have updated the preview handler pack he wrote a while ago. This pack now supports ruby, erb and rjs.&lt;/p&gt;

&lt;p&gt;Tatham added javascript support to the pack. And I took care of the ruby side.&lt;/p&gt;

&lt;p&gt;Thanks again to Tatham for creating the extension.&lt;/p&gt;

&lt;p&gt;Support for ruby :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.flanders.co.nz/Blog/content/binary/WindowsLiveWriter/PreviewHandlerPackupdated_E4D2/windowslivewriterrubyandjscriptsupportaddedtopreviewhandl-c592image010%5B6%5D.png&quot;&gt;&lt;img src=&quot;http://www.flanders.co.nz/Blog/content/binary/WindowsLiveWriter/PreviewHandlerPackupdated_E4D2/windowslivewriterrubyandjscriptsupportaddedtopreviewhandl-c592image010_thumb%5B4%5D.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Support for javascript:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.flanders.co.nz/Blog/content/binary/WindowsLiveWriter/PreviewHandlerPackupdated_E4D2/windowslivewriterrubyandjscriptsupportaddedtopreviewhandl-c592image06%5B3%5D.png&quot;&gt;&lt;img src=&quot;http://www.flanders.co.nz/Blog/content/binary/WindowsLiveWriter/PreviewHandlerPackupdated_E4D2/windowslivewriterrubyandjscriptsupportaddedtopreviewhandl-c592image06_thumb%5B1%5D.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can read all about it here :&lt;/p&gt;

&lt;p&gt;First release of the handler pack:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.tatham.oddie.com.au/2006/12/20/vista-and-office-2007-preview-handler-pack-released/&quot;&gt;http://blog.tatham.oddie.com.au/2006/12/20/vista-and-office-2007-preview-handler-pack-released/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Update&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.tatham.oddie.com.au/2007/04/04/ruby-and-jscript-support-added-to-preview-handler-pack/&quot;&gt;http://blog.tatham.oddie.com.au/2007/04/04/ruby-and-jscript-support-added-to-preview-handler-pack/&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-04-03 16:11:27 +0200</published>
        <link>http://flanders.co.nz/2007/04/03/preview-handler-pack-updated/</link>
      </item>
      
    
      
      <item>
        <title>I just got a new job @ Xero</title>
        <description>&lt;p&gt;From april onwards I&amp;#8217;ll be working with &lt;a href=&quot;http://www.xero.com&quot;&gt;www.xero.com&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-03-06 11:28:11 +0100</published>
        <link>http://flanders.co.nz/2007/03/06/i-just-got-a-new-job-xero/</link>
      </item>
      
    
      
      <item>
        <title>Quantum computers commercially available</title>
        <description>&lt;p&gt;I personally think this is really big.&lt;/p&gt;

&lt;p&gt;D-Wave Systems is the world&amp;#8217;s first and only source of quantum
computing for commercial application. We believe quantum technology in
concert with classical, digital processors, can and will represent
broad and significant advancements in the application of computer
science.&lt;/p&gt;

&lt;p&gt;In February 2007, D-Wave unveiled and
demonstrated this technology publicly for the first time. The company
plans to deliver field-deployable systems in 2008.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dwavesys.com&quot;&gt;http://www.dwavesys.com&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-03-05 23:14:17 +0100</published>
        <link>http://flanders.co.nz/2007/03/05/quantum-computers-commercially-available/</link>
      </item>
      
    
      
      <item>
        <title>Outlook 2007 apparently understands markdown</title>
        <description>&lt;p&gt;I was writing an email to a client today explaining them what markdown is and some simple examples. To my surprise outlook understood what I was typing and formatted everything accordingly.&lt;/p&gt;

&lt;p&gt;It might be just a subset of markdown, I haven&amp;#8217;t investigated it deeply, but cool anyway.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;For example a bulleted list is &lt;br/&gt;
* item 1&lt;br/&gt;
* item 2&lt;br/&gt;
* item 3&lt;/p&gt;

&lt;p&gt;To put something in bold &lt;strong&gt;&lt;em&gt;this will be in bold&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;this will be italic&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
</description>
        <published>2007-03-04 09:22:02 +0100</published>
        <link>http://flanders.co.nz/2007/03/04/outlook-2007-apparently-understands-markdown/</link>
      </item>
      
    
      
      <item>
        <title>Installing base4 on windows vista with UAC turned on</title>
        <description>&lt;p&gt;Windows vista introduces the wonderful concept of User Account Control, which also exists on linux and should make your computer more safe.&lt;/p&gt;

&lt;p&gt;Anyway I decided to let the UAC turned on and want to work through the extra clicks etc.&lt;/p&gt;

&lt;p&gt;Today I needed Base4 again and when I tried to install the program it would go until it was almost complete and then it would come up with error 2869&lt;/p&gt;

&lt;p&gt;the easy way around this was to create a .cmd file in the with the following line : msiexec /i &amp;#8220;C:\Users\ivan\Downloads\SourceSetup-2.2.0.91.msi&amp;#8221;&lt;/p&gt;

&lt;p&gt;and execute that cmd file by right clicking it and chosing run as administrator&lt;/p&gt;
</description>
        <published>2007-02-22 15:18:28 +0100</published>
        <link>http://flanders.co.nz/2007/02/22/installing-base4-on-windows-vista-with-uac-turned-on/</link>
      </item>
      
    
      
      <item>
        <title>Bring on the quantum please</title>
        <description>&lt;p&gt;I got &lt;a href=&quot;http://www.newwork.com/Pages/Contributors/Shelton/Hammer.html&quot;&gt;this link&lt;/a&gt; sent to me recently. I&amp;#8217;ve recently become interested in quantum physics but haven&amp;#8217;t had the time to start digging deeper into the subject, yet. Anyway if you have some time on your hands you can read the article. I found it quite interesting.&lt;/p&gt;

&lt;p&gt;Some interesting passages would be :&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://www.newwork.com/Pages/Contributors/Shelton/Hammer.html&quot;&gt;If the only tool you have is a hammer, you will see every problem as a nail.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;According to a recent &lt;em&gt;Scientific American &lt;/em&gt;article, &amp;#8220;a 40-bit quantum computer could re-create in little more than, say, 100 steps, a quantum system that would take a classical computer, having a trillion bits, years to simulate.&amp;#8221;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I can&amp;#8217;t wait until these things become a closer reallity :)&lt;/p&gt;
</description>
        <published>2007-02-17 09:45:35 +0100</published>
        <link>http://flanders.co.nz/2007/02/17/bring-on-the-quantum-please/</link>
      </item>
      
    
      
      <item>
        <title>Congratulations to Alex</title>
        <description>&lt;pre&gt;&lt;code&gt;    [Alex James](http://www.base4.net) became a father again. :D  
&lt;/code&gt;&lt;/pre&gt;
</description>
        <published>2007-02-16 08:38:08 +0100</published>
        <link>http://flanders.co.nz/2007/02/16/congratulations-to-alex/</link>
      </item>
      
    
      
      <item>
        <title>Intentional programming</title>
        <description>&lt;p&gt;This is a great read. It&amp;#8217;s a really long article but i found it really interesting and continued it to the end (which is very very rare in my case)&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s about Charles Simonyi and what he has been up to in his carreer plus his plans for the future.&lt;/p&gt;

&lt;p&gt;Charles Simonyi&amp;#8211;Microsoft&amp;#8217;s former chief architect, the tutelary genius behind its most famous applications, the inventor of the method of writing code that the company&amp;#8217;s programmers have used for 25 years, and now the proponent of an ambitious project to reprogram software&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.technologyreview.com/Infotech/18047&quot;&gt;http://www.technologyreview.com/Infotech/18047&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2007-02-13 21:00:20 +0100</published>
        <link>http://flanders.co.nz/2007/02/13/intentional-programming/</link>
      </item>
      
    
      
      <item>
        <title>Received my new laptop today</title>
        <description>&lt;p&gt;After a couple of days delay, because the transporter company couldn&amp;#8217;t find where i lived, I have received my new Dell M90 laptop.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m hoping that one will be faster than the M70 that i have now.&lt;/p&gt;

&lt;p&gt;The first thing i notice is that the 17&amp;#8221; screen is bigger than the 17&amp;#8221; on the old one.&lt;/p&gt;

&lt;p&gt;The colors also seem brighter.. White is white as opposed to broken white on my old one.. I can&amp;#8217;t tell anything about the speed yet. As I&amp;#8217;m currently doing a clean install of windows vista x64 on it.&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s a 64-bit dual core laptop which didn&amp;#8217;t allow me to get bluetooth onboard.&lt;/p&gt;

&lt;p&gt;The setup will be :&lt;br/&gt;
vista &lt;br/&gt;
office 2007&lt;br/&gt;
visual studio 2005 SP1&lt;br/&gt;
Sql 2005 SP2(CTP)&lt;br/&gt;
Ruby in steel&lt;br/&gt;
Radrails (for some reason i can&amp;#8217;t let go of visual studio but ruby in steel is far from perfect)&lt;br/&gt;
Resharper 2005&lt;br/&gt;
Testdriven.net&lt;br/&gt;
Ghostdoc&lt;br/&gt;
Photoshop CS2&lt;br/&gt;
Tortoise SVN + Ankh svn + subversion (different environment, each with it&amp;#8217;s own requirements.)&lt;br/&gt;
Base4&lt;br/&gt;
Castle&lt;br/&gt;
Windows live writer&lt;/p&gt;

&lt;p&gt;Hopefully  now I won&amp;#8217;t have to wait so long anymore for actions to complete.&lt;/p&gt;
</description>
        <published>2007-01-07 09:59:19 +0100</published>
        <link>http://flanders.co.nz/2007/01/07/received-my-new-laptop-today/</link>
      </item>
      
    
      
      <item>
        <title>Getting started with rails&#8230; the rocky way</title>
        <description>&lt;p&gt;Over the last couple of weeks I&amp;#8217;ve been getting into ruby on rails.&lt;/p&gt;

&lt;p&gt;I won&amp;#8217;t get in to why I&amp;#8217;m not using castle instead of rails.  I don&amp;#8217;t think there is a big difference between the 2 except that one is done with a static, compiled language and one is done with a dynamic language.&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s no secret that the syntax of ruby is a lot prettier than the syntax of C# let&amp;#8217;s say.&lt;/p&gt;

&lt;p&gt;Currently i want to use it to write applications and these applications need to integrate with existing asp.net applications. That made it a pretty interesting journey.&lt;/p&gt;

&lt;p&gt;I took the long road of course of first looking if there is something better out there, based on a dynamic language but i couldn&amp;#8217;t really find anything. For a while there I thought that pylons would be a valid replacement.  Of course there is django but I really don&amp;#8217;t want a heavily glorified CMS but something in rails style.  Something that generates some base things which are pretty boring to write and then let me do the customizing.  That being said it turns out that ruby on rails seems the best option for the moment if you want results quickly. And we all know we want results quickly :)&lt;/p&gt;

&lt;p&gt;So the first step in the journey for me was buy the book : &lt;a href=&quot;http://www.pragmaticprogrammer.com/title/rails/&quot;&gt;&lt;strong&gt;Agile development with Rails&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;  &lt;/strong&gt;after that one I made one more stop at the bookshop and got myself the &lt;strong&gt;&lt;a href=&quot;http://www.amazon.com/Cookbook-Cookbooks-OReilly-Lucas-Carlson/dp/0596523696&quot;&gt;Ruby cookbook&lt;/a&gt; &lt;/strong&gt;and the &lt;strong&gt;&lt;a href=&quot;http://www.amazon.com/gp/product/0596527314/105-5120906-6250848&quot;&gt;Rails cookbook&lt;/a&gt; &lt;/strong&gt;(which still isn&amp;#8217;t available according to amazon)&lt;/p&gt;

&lt;p&gt;Step number two would be then to actually write some code (some code is the correct term here because I really haven&amp;#8217;t written too much code to get something going)&lt;/p&gt;

&lt;p&gt;Step number three was then to get it to talk to one of my other applications. And that&amp;#8217;s when I got completely lost :) I have this thing about guid primary keys as opposed to ints.  Using guids has a lot of advantages as opposed to using ints. Replication is one of them, the possibilty to do a global lookup (not that I ever did but it&amp;#8217;s nice to know that i can :) ), you can impose a kind of inheritance in your database,&amp;#8230;   But yes I know they are a bit larger in size, however this doesn&amp;#8217;t seem to affect me so much.&lt;/p&gt;

&lt;p&gt;Now the philosophy of rails is that you can run your application on any platform with any of the supported database servers. That  implies that there is no support for uniqueidentifier primary key columns in sql server which made me somewhat upset.  Anyway since rails is open source you can teach it what you want by changing the source.  As i&amp;#8217;m sure that the database server i&amp;#8217;ll use is ms sql server i do want some of those features.  So I went and changed the connection adapter for sql server so it would support most of the sql datatypes and moreover uniqueidentifier columns.  &lt;br/&gt;
My solution isn&amp;#8217;t as pretty as I would want it to be but the deadline is lurking :) I&amp;#8217;ll keep code for a next post.&lt;/p&gt;

&lt;p&gt;Ok cool my application is working now on my laptop and on the laptop of the other developer that&amp;#8217;s cool let&amp;#8217;s show it to the client and stage it somewhere.&lt;/p&gt;

&lt;p&gt;Which brings me to step number 4 create a server to run rails on.  Ok what have i got to run websites on &amp;#8230; uhm? let&amp;#8217;s see ah yes I&amp;#8217;ve got a windows 2003 R2 machine with IIS 6 on it.  Well it took me 2 days before i completely abandonned that plan because i can&amp;#8217;t get it to work at all. I&amp;#8217;m sure other people have succeeded but in my case things really didn&amp;#8217;t work out.  Mmmmm, how would i solve this issue ? Aha there is something like linux that will run rails with apache.&lt;/p&gt;

&lt;p&gt;I know I can run apache on windows but here we come again to one of my pieves .. http traffic should be served over port 80 not over port 8080, 1024+,&amp;#8230; and port 80 is taken by IIS&lt;br/&gt;
Cool so i just download ubuntu server and install it and i&amp;#8217;ll be on my way or so I thought.&lt;br/&gt;
Turns out installing ubuntu is not a point and click experience but it&amp;#8217;s a command line type of thing. So now we are 4 days later (i could have done it in 2 but somewhere along the way i changed some security settings without backing up the original files which isn&amp;#8217;t a good plan by the way)&lt;/p&gt;

&lt;p&gt;Yep ubuntu has got this utility apt-get which will install software for you that&amp;#8217;s all fine until you want a working version of ruby ..then that apt-get thing didn&amp;#8217;t want to do it.&lt;br/&gt;
&lt;a href=&quot;http://ajopaul.wordpress.com/2006/12/11/setting-up-a-svn-14-server-using-apache-22-on-ubuntu/&quot;&gt;To run rails, subversion, trac in apache 2.2&lt;/a&gt; you need to download the packages and actually build and install them yourself. which makes all of this a very very lenghty operation and the user experience is less than optimal.  I thought the days of command line things were abandonned somewhere around 1995.&lt;/p&gt;

&lt;p&gt;Ok i have apache running let&amp;#8217;s get my rails app that talks to sql server using the ADO.rb file onto the linux server and fire it up.  I chose to use &lt;a href=&quot;http://mongrel.rubyforge.org/&quot;&gt;mongrel_cluster&lt;/a&gt; in combination with apache. Not that I really need it but I figure it&amp;#8217;s best to mimic a professional environment than to set up a totally different environment from the optimal one.&lt;br/&gt;
Ok so here we go :&lt;/p&gt;

&lt;p&gt;rake db:migrate RAILS_ENV=production  &lt;/p&gt;

&lt;p&gt;Whoops win32 required errors all over the place. Ah yes I connect over OLEDB which is an ms specific thing and hence not supported on linux. But you can connect over ODBC in linux to the sql server&amp;#8230; The even have a &lt;a href=&quot;http://wiki.rubyonrails.org/rails/pages/HowtoConnectToMicrosoftSQLServerFromRailsOnLinux&quot;&gt;page on the rails wiki&lt;/a&gt; to get it going.. sadly this page didn&amp;#8217;t really do it for me as things still didn&amp;#8217;t work. But what did work was &lt;a href=&quot;http://www.artima.com/forums/flat.jsp?forum=123&amp;amp;thread=182961&quot;&gt;this page&lt;/a&gt;. I still had some issues but I can&amp;#8217;t find the links anymore.&lt;/p&gt;

&lt;p&gt;Ok after a lot of tinkering, cursing and an injured pinkyI finally have got my rails app running on linux with my ms sql database.&lt;/p&gt;

&lt;p&gt;So now we are about 1 week later and finally everything is running smoothly. If mac os x is built on linux then i don&amp;#8217;t really see how they can provide the best user experience. The might have the prettiest interface but installation and management of a windows machine is vastly easier then the experience i got on linux&lt;/p&gt;
</description>
        <published>2007-01-03 14:45:09 +0100</published>
        <link>http://flanders.co.nz/2007/01/03/getting-started-with-rails-the-rocky-way/</link>
      </item>
      
    
      
      <item>
        <title>I&#8217;ve been tagged and I hid so well :)</title>
        <description>&lt;p&gt;Darryl &lt;a href=&quot;http://www.geekzone.co.nz/darrylb/1955&quot;&gt;has tagged me&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The idea of the tagging bit is that I don&amp;#8217;t talk about programming but find a couple of things you don&amp;#8217;t really know about me.&lt;/p&gt;

&lt;p&gt;So here we go.&lt;/p&gt;

&lt;p&gt;1) I used to be into playing volleyball and soccer (goalie) when i was a lot younger.. and I used to be in a band playing the bass. I obviously wasn&amp;#8217;t very good in the musical side otherwise i wouldn&amp;#8217;t be a programmer :)&lt;/p&gt;

&lt;p&gt;2) I&amp;#8217;m not married nor do I have a relationship at the current time. Not that I&amp;#8217;m not interested the last couple relationships just didn&amp;#8217;t work out.&lt;/p&gt;

&lt;p&gt;3) I didn&amp;#8217;t go to university, but i did start college. I think degrees are highly overrated. Passion, ambition and drive all together is much more important in my book.]&lt;/p&gt;

&lt;p&gt;4) I wasn&amp;#8217;t always a programmer. I&amp;#8217;ve been a bartender/waiter in a studentbar in Antwerp. I&amp;#8217;ve sold timesharing in Spain as an OPC and a sales rep. And in between i&amp;#8217;ve been a junior system engineer for SGS Belgium.&lt;/p&gt;

&lt;p&gt;5) When I was at school, I was the one with the big mouth, making jokes all the time and really walking the line of what can and can&amp;#8217;t be done without getting into too much trouble. I didn&amp;#8217;t get picked on really but also didn&amp;#8217;t do much of the picking that goes against my  nature.&lt;/p&gt;

&lt;p&gt;So these are my five things i wanted to share today. I guess now it&amp;#8217;s my time to tag somebody :&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m tagging &lt;a href=&quot;http://www.base4.net//blog.aspx&quot;&gt;Alex James&lt;/a&gt; - One of the smartest people I know&lt;/p&gt;

&lt;p&gt;Another person to tag is &lt;a href=&quot;http://www.micromiel.com/&quot;&gt;Miel Van Opstal&lt;/a&gt; we started out together and he is one of my oldest friends.  Miel is workig for Microsoft as an evangelist.&lt;/p&gt;

&lt;p&gt;Another Belgian to tag is &lt;a href=&quot;http://datafreakz.blogspot.com&quot;&gt;Raoul Jacobs&lt;/a&gt; he knows sql server inside out as well as access&lt;/p&gt;
</description>
        <published>2007-01-02 07:50:51 +0100</published>
        <link>http://flanders.co.nz/2007/01/02/ive-been-tagged-and-i-hid-so-well/</link>
      </item>
      
    
      
      <item>
        <title>Woohoo  my bluetooth headset is working again with vista</title>
        <description>&lt;p&gt;I could download the bluetooth stack from toshiba and my headset works&lt;/p&gt;

&lt;p&gt;I got the drivers here: &lt;a href=&quot;http://aps.toshiba-tro.de/bluetooth/pages/download.php&quot;&gt;Toshiba bluetooth stack for vista&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-12-25 17:20:01 +0100</published>
        <link>http://flanders.co.nz/2006/12/25/woohoo-my-bluetooth-headset-is-working-again-with-vista/</link>
      </item>
      
    
      
      <item>
        <title>A scriptaculous multi file selector class</title>
        <description>&lt;p&gt;For nblogr I wanted to provice a way to upload multiple files but just display one input field at a time.  So I worked out the following javascript class.&lt;/p&gt;

&lt;p&gt;Usage :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;new&amp;lt;/span&amp;gt; NBlogr.MultiSelector( &amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;element(id)&amp;lt;/span&amp;gt;, maxNumberOfFiles or -1 for unlimited );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The MultiSelector class:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NBlogr.MultiSelector = Class.create();
NBlogr.MultiSelector.prototype = {
    initialize : &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;function&amp;lt;/span&amp;gt;(file, max){
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options = {
            max : -1,
            container:&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;null,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/span&amp;gt;            file:&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;null&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/span&amp;gt;        };

        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.file = $(file);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.id = &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;0&amp;lt;/span&amp;gt;;
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.count=0;
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.initializeContainer();
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;if&amp;lt;/span&amp;gt;(max){
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.max = max;
        }
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;else&amp;lt;/span&amp;gt;{
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.max = -1;
        }
    },
    initializeContainer : &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;function&amp;lt;/span&amp;gt;(){
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;if&amp;lt;/span&amp;gt;(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.file){
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; ele = &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.file;
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.container = Builder.node(&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;div&#8217;&amp;lt;/span&amp;gt;,{id:ele.id + &amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;_container&#8217;&amp;lt;/span&amp;gt;,
                style:&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;background:transparent;display:inline;width:250px;font-size:small&#8217;&amp;lt;/span&amp;gt;});

            ele.parentNode.insertBefore(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.container,ele);
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.container.appendChild(ele);

            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;if&amp;lt;/span&amp;gt;(!&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.list){
                &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.list = Builder.node(&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;div&#8217;&amp;lt;/span&amp;gt;,{id:ele.id+&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;_list&#8217;&amp;lt;/span&amp;gt;,style:&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;display:block&#8217;&amp;lt;/span&amp;gt;});
            }
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.container.appendChild(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.list);
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.initializeFile(ele);
        }
    },
    initializeFile:&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;function&amp;lt;/span&amp;gt;(element){        

        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;if&amp;lt;/span&amp;gt;( element &amp;amp;&amp;amp; element.tagName == &amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;INPUT&#8217;&amp;lt;/span&amp;gt; &amp;amp;&amp;amp; element.type == &amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;file&#8217;&amp;lt;/span&amp;gt; ){
            element.name = &amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;file_&#8217;&amp;lt;/span&amp;gt; + &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;element&amp;lt;/span&amp;gt;.id;
            element.id = &amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;file_&#8217;&amp;lt;/span&amp;gt; + &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;element&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;.id++;


            Event.observe(element,&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;change&#8217;&amp;lt;/span&amp;gt;,&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.addFile.bindAsEventListener(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;));

            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;if&amp;lt;/span&amp;gt;( &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.max != -1 &amp;amp;&amp;amp; &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.count &amp;gt;= &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.max ){
                element.disabled = &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;true&amp;lt;/span&amp;gt;;
            };
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.count++;            
        } &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;else&amp;lt;/span&amp;gt; {
            alert( &amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;Error: not a file input element&#8217;&amp;lt;/span&amp;gt; );
        };
    },
    addFile:&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;function&amp;lt;/span&amp;gt;(ev){
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; ele = Event.element(ev);

        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; new_element = document.createElement( &amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;input&#8217;&amp;lt;/span&amp;gt; );
        new_element.type = &amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;file&#8217;&amp;lt;/span&amp;gt;;
        ele.parentNode.insertBefore( new_element, ele );
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.initializeFile( new_element );
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.addListRow( ele );
        ele.style.position = &amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;absolute&#8217;&amp;lt;/span&amp;gt;;
        ele.style.left = &amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;-1000px&#8217;&amp;lt;/span&amp;gt;;

        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;if&amp;lt;/span&amp;gt;(ev) Event.stop(ev);
    },
    removeFile:&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;function&amp;lt;/span&amp;gt;(ev){
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; ele = Event.element(ev); 

        ele.parentNode.parentNode.removeChild( ele.parentNode );
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.file.disabled = &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;false&amp;lt;/span&amp;gt;;
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.count&#8211;;        

        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;if&amp;lt;/span&amp;gt;(ev) Event.stop(ev);
    },
    addListRow : &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;function&amp;lt;/span&amp;gt;( element ){
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; new_row_button = Builder.node(&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;a&#8217;&amp;lt;/span&amp;gt;,{href:&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;javascript:;;&#8217;&amp;lt;/span&amp;gt;,
            title:&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;Remove this file from the list&#8217;&amp;lt;/span&amp;gt;},&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;Remove&#8217;&amp;lt;/span&amp;gt;);
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; new_row = Builder.node(&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;div&#8217;&amp;lt;/span&amp;gt;,{element:element},[$F(element) + &amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217; | &#8216;&amp;lt;/span&amp;gt;, new_row_button]);
        Event.observe(new_row_button,&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;click&#8217;&amp;lt;/span&amp;gt;,&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.removeFile.bindAsEventListener(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;));
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.list.appendChild( new_row );

    }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://11011.net/software/vspaste&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-12-16 12:11:04 +0100</published>
        <link>http://flanders.co.nz/2006/12/16/a-scriptaculous-multi-file-selector-class/</link>
      </item>
      
    
      
      <item>
        <title>Fraudulent postal mails from domain registrar</title>
        <description>&lt;p&gt;Today we got a mail from central registration service .com telling us that we need to pay 966 USD for &lt;a href=&quot;http://www.vandyck.co.nz&quot;&gt;www.vandyck.co.nz&lt;/a&gt; &lt;br/&gt;
Now I&amp;#8217;m very sure it&amp;#8217;s my domain name and not registered with these guys.&lt;/p&gt;

&lt;p&gt;The company poses as a New York based company but the letter is sent from Prague. &lt;/p&gt;

&lt;p&gt;I just blog about it because it looks kind of official and maybe other people might not discard it.&lt;/p&gt;

&lt;p&gt;When will I be able to put a spam filter on my regular mailbox ?&lt;/p&gt;
</description>
        <published>2006-12-13 07:37:30 +0100</published>
        <link>http://flanders.co.nz/2006/12/13/fraudulent-postal-mails-from-domain-registrar/</link>
      </item>
      
    
      
      <item>
        <title>Finally back to nblogr</title>
        <description>&lt;p&gt;I can finally spend a couple of days on nblogr. I hope I get enough done to have a releasable version after this time.&lt;/p&gt;
</description>
        <published>2006-12-12 20:27:05 +0100</published>
        <link>http://flanders.co.nz/2006/12/12/finally-back-to-nblogr/</link>
      </item>
      
    
      
      <item>
        <title>Wtf ?? Ajax and the hidden cost of use</title>
        <description>&lt;p&gt;In it world Sean McGrath has been talking about &lt;a href=&quot;http://www.itworld.com/AppDev/nlsebizajax061212/index.html&quot;&gt;Ajax and the hidden cost of use&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I got to this post through Jon Udell, who has a post about &lt;a href=&quot;http://weblog.infoworld.com/udell/2006/12/12.html#a1577&quot;&gt;ajax and automation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Anyway the sort of arguments that Sean is using make me think he has yet to complete a good ajax application.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;em&gt;A common buzzword in the industry is the concept of a &amp;#8220;front end&amp;#8221;. In an ideal world, the front end just handles all the graphical user interface stuff while the back end does all the real work. In this ideal world, you can just bypass the front end and work with the back end directly when you want to integrate applications. Sadly, we do not live in this ideal world&lt;/em&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&amp;#8217;m going of a rant here because I thought that the whole discussion AJAX is it good vs bad? was closed about a year ago.&lt;/p&gt;

&lt;p&gt;He obviously hasn&amp;#8217;t seen any of the Castle or ruby implementations who do just that. For example I can unit test my complete controllers base with out running a browser.&lt;/p&gt;

&lt;p&gt;Unless i&amp;#8217;m really sure that an application will be used in one type of browser or it&amp;#8217;s successor and this browser is ajax capable.. then and only then the user interface will rely on javascript for the interaction.&lt;/p&gt;

&lt;p&gt;People then go why don&amp;#8217;t you cache values and have javascript work it out for you the next time this gives a perceived performance benefit. There are 2 main reasons for it :&lt;/p&gt;

&lt;p&gt;1 separation of concerns the only decision an UI can make is should I show this red or green based on a value of the object etc. But nothing else.&lt;/p&gt;

&lt;p&gt;2 you want live data not data that is almost live (i&amp;#8217;m taling about a system where minutes matter in the workflow) :)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;em&gt;Think now of web-based applications you most like to use. How are their front ends and back ends? Well, historically, they have been quite cleanly separated. After all, a web browser only has limited capabilities. Behind the scenes it is really only capable of sending two commands GET and POST to things called URLs. Everything else (slight simplification!) happens at the back end. &lt;br/&gt;
Ah, but that was then and this is now. Now we have AJAX and JSON and Flash and the Google Web Toolkit and Windows Presentation Foundation and&amp;#8230; &lt;br/&gt;
All these things help us to make web applications easier to use. In so doing, the clean separation between front end and back end gets more and more blurred. &lt;strong&gt;With every blurring of the separation, application integration becomes more complex. &lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I guess somebody is really missing the point here a UI is just a shell over lots of services that can do the job with or without the UI on it.  All the real work is to be done in the service layer or deeper down in you app.&lt;/p&gt;

&lt;p&gt;I think Windows Presentation Foundation says it all in its name already &lt;em&gt;Presenation&lt;/em&gt; &lt;strong&gt;only &lt;/strong&gt;whatever is not related to the presenation of your data in the UI shouldn&amp;#8217;t be there.&lt;/p&gt;

&lt;p&gt;What I think is going on here is that he&amp;#8217;s affraid to take the plunge because the arguments he uses are arguments I had against building a full ajax site about 2 years ago.  I&amp;#8217;ve set them aside.. and just do it now.&lt;/p&gt;

&lt;p&gt;I must say that using &lt;a href=&quot;http://www.castleproject.org/&quot;&gt;castle&lt;/a&gt; has been a tremendous help for me into getting things done in the same timeframe as i would have with the classic model.&lt;/p&gt;

&lt;p&gt;For instance I&amp;#8217;m about to finish a project that  in a clasic model would have consisted out of 70+ very dataintensive forms. The result of using ajax a.o. technologies now has the application down to 5 forms&lt;/p&gt;

&lt;p&gt;I still had to write the 70+ views and but not nearly as many search functions etc.  I do ajax on the AHA  principle (which means I send html snippets) because JSON and building dom nodes breaks backwards compatibility and would have slowed down development a lot.&lt;/p&gt;

&lt;p&gt;To get to the automation bit .. I think ajax makes it much more easy to interact with the backend then the classic model would have done. There are many more options to choose from (which is kind of a dissease of our time.. too many options) and you have a much finer grained control over what passes through the pipeline in terms of bits and bytes. just pull up any http request listener and you&amp;#8217;ll have all the things you need to replay your actions vs. parse forms and go through the html to figure out the fields etc.&lt;/p&gt;

&lt;p&gt;Ok that&amp;#8217;s it for my morning rant.  I just thought somebody needed to put his views into context. I have to give him that technology certainly didn&amp;#8217;t come to a standstill over the last year so it&amp;#8217;s getting increasingly difficult to keep up.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve known a couple of really good people to give up the game this year because it&amp;#8217;s all moving too fast in some respects or not how they want it to move. In my opinion things are indeed moving very fast at the moment.. but that&amp;#8217;s what makes it so exciting :D&lt;/p&gt;
</description>
        <published>2006-12-12 06:00:40 +0100</published>
        <link>http://flanders.co.nz/2006/12/12/wtf-ajax-and-the-hidden-cost-of-use/</link>
      </item>
      
    
      
      <item>
        <title>DevExpress is giving away their controls</title>
        <description>&lt;p&gt;DevExpress is giving away 40 controls for free. The only thing you need to do is register on their site and you&amp;#8217;ll get an email with the controls.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.devexpress.com/Products/NET/WebRegistration/index.xml&quot;&gt;Over 40 Controls - Free of Charge&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-12-11 06:07:30 +0100</published>
        <link>http://flanders.co.nz/2006/12/11/devexpress-is-giving-away-their-controls/</link>
      </item>
      
    
      
      <item>
        <title>Scriptaculous accordion widget</title>
        <description>&lt;p&gt;Today I needed an accordion widget. I searched the internet but didn&amp;#8217;t really find one that was based  on scriptaculous and did what i wanted it to do and how i wanted.&lt;/p&gt;

&lt;p&gt;You need scriptaculous for this widget. Example markup is shown in the comments. Just add the javascript to a page and it will find the accordion just fine.&lt;/p&gt;

&lt;p&gt;I thought I&amp;#8217;d share the code:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;span style=&quot;color: rgb(0,128,0)&quot;&amp;gt;/**
 * @author Ivan Porto Carrero
 * 
 *
 * Styles:
 * *******
 * .accordeon{
 *         border: 1px solid #1F669B;

 *        font-family: Trebuchet MS, Arial, Helvetica, sans-serif;
 *        font-size: 11px;
 *        overflow:auto;
 *    }
 * h5 {
 *     font-size:12px;
 *    padding: 3px 5px 3px 5px;
 *     margin: 0;
 *     border-style: solid none solid none;
 *     border-top-color:#BDC7E7;
 *     border-bottom-color:#a1bbe4;
 *    border-width: 1px 0px 1px 0px;
 *    color:#fff;
 *    background-color: #63699C;
 *    cursor:pointer;
 * }
 * .panel_header{
 *     color:#878285;
 *     background-color: #63699C;
 *     background:url(images/shade.gif) 0 0 repeat-x;
 * }
 * .panel{
 *     margin: 0;
 *    padding-bottom:0;
 *    border: none;
 * }
 * .panel_body{padding:5px;}
 *
 *
 * Markup:
 * *******
 * 
 * &amp;lt;div class=&quot;accordeon&quot;&amp;gt;
 *    &amp;lt;div id=&quot;panel1&quot; class=&quot;panel&quot;&amp;gt;
 *        &amp;lt;h5 class=&quot;panel_header&quot;&amp;gt;Accordian 1 Title&amp;lt;/h5&amp;gt;
 *        &amp;lt;div id=&quot;panel1-body&quot; class=&quot;panel_body visible&quot;&amp;gt;
 *            &amp;lt;div&amp;gt;Content goes here&amp;lt;/div&amp;gt;
 *        &amp;lt;/div&amp;gt;
 *    &amp;lt;/div&amp;gt;
 *    &amp;lt;div id=&quot;panel2&quot; class=&quot;panel&quot;&amp;gt;
 *        &amp;lt;h5 class=&quot;panel_header&quot;&amp;gt;Accordian 2 Title&amp;lt;/h5&amp;gt;
 *        &amp;lt;div id=&quot;panel2-body&quot; class=&quot;panel_body&quot;&amp;gt;
 *            &amp;lt;div&amp;gt;Content goes here&amp;lt;/div&amp;gt;
 *        &amp;lt;/div&amp;gt;
 *    &amp;lt;/div&amp;gt;
 *    &amp;lt;div id=&quot;panel3&quot; class=&quot;panel&quot;&amp;gt;
 *        &amp;lt;h5 class=&quot;panel_header&quot;&amp;gt;Accordian 3 Title&amp;lt;/h5&amp;gt;
 *        &amp;lt;div id=&quot;panel3-body&quot; class=&quot;panel_body&quot;&amp;gt;
 *            &amp;lt;div&amp;gt;Content goes here&amp;lt;/div&amp;gt;
 *        &amp;lt;/div&amp;gt;
 *    &amp;lt;/div&amp;gt;
 *    &amp;lt;div id=&quot;panel4&quot; class=&quot;panel&quot;&amp;gt;
 *        &amp;lt;h5 class=&quot;panel_header&quot;&amp;gt;Accordian 4 Title&amp;lt;/h5&amp;gt;
 *        &amp;lt;div id=&quot;panel4-body&quot; class=&quot;panel_body&quot;&amp;gt;
 *            &amp;lt;div&amp;gt;Content goes here&amp;lt;/div&amp;gt;
 *        &amp;lt;/div&amp;gt;
 *    &amp;lt;/div&amp;gt;
 * &amp;lt;/div&amp;gt;
 */
&amp;lt;/span&amp;gt;Accordeon = Class.create();
Accordeon.prototype = {
    initialize:&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;function&amp;lt;/span&amp;gt;(element, options){
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options = {
            onBeforeSwitch:&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;null&amp;lt;/span&amp;gt;,
            onAfterSwitch:&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;null&amp;lt;/span&amp;gt;,
            activePanel:&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;null&amp;lt;/span&amp;gt;,
            panelClass:&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;panel&#8217;&amp;lt;/span&amp;gt;,
            headerClass:&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;panel_header&#8217;&amp;lt;/span&amp;gt;,
            bodyClass: &amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;panel_body&#8217;&amp;lt;/span&amp;gt;,
            activePanelClass:&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;active&#8217;&amp;lt;/span&amp;gt;,
            showAnim:&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;false
&amp;lt;/span&amp;gt;        };
        Object.extend(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options,options||{});        

        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.accordeon = $(element);
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.accordeon.panels = &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;new&amp;lt;/span&amp;gt; Array();
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; pnls = $A(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.accordeon.childNodes);
        pnls.each(
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;function&amp;lt;/span&amp;gt;(pnl){

                &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; ele = $(pnl);

                &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; headers = ele.getElementsByClassName(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.headerClass);
                &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;if&amp;lt;/span&amp;gt;(headers.length &amp;gt; 0){
                    &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; header = headers[0];
                    ele.header = header;
                    Event.observe(header,&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;click&#8217;&amp;lt;/span&amp;gt;, &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.onChange.bindAsEventListener(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;))
                }

                &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; bodies = ele.getElementsByClassName(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.bodyClass);
                &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;if&amp;lt;/span&amp;gt;(bodies.length &amp;gt; 0){
                    &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; body = bodies[0];
                    ele.body = body;
                    body.hide();
                }

                &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;if&amp;lt;/span&amp;gt;(ele.tagName.toLowerCase() == &amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;div&#8217;&amp;lt;/span&amp;gt; &amp;amp;&amp;amp; Element.hasClassName(ele,&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.panelClass)){
                    &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.accordeon.panels.push(ele);
                }
            }.bind(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;)
        );
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.setActivePanel(pnls[0],&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;false&amp;lt;/span&amp;gt;);

    },
    onChange:&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;function&amp;lt;/span&amp;gt;(ev){
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; ele = Event.element(ev);
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; parents = ele.ancestors();
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; panel;

        parents.each(
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;function&amp;lt;/span&amp;gt;(elm){                
                &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; obj = $(elm);
                &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;if&amp;lt;/span&amp;gt;(obj.hasClassName(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.panelClass)){
                    panel = obj;
                    &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;return&amp;lt;/span&amp;gt;;
                }                

            }.bind(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;)            
        );
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.setActivePanel(panel,&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;true&amp;lt;/span&amp;gt;);
    },
    setActivePanel:&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;function&amp;lt;/span&amp;gt;(panel,showAnim){
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;if&amp;lt;/span&amp;gt;(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.onBeforeSwitch)
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.onBeforeSwitch();

        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;if&amp;lt;/span&amp;gt;(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.activePanel &amp;amp;&amp;amp; &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.activePanel.id != panel.id ){    
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; hideAnim = &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;null&amp;lt;/span&amp;gt;;
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;if&amp;lt;/span&amp;gt;(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.showAnim)        
                &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;new&amp;lt;/span&amp;gt; Effect.toggle(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.activePanel.body,&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;blind&#8217;&amp;lt;/span&amp;gt;,{duration:0.3});
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;else
&amp;lt;/span&amp;gt;                &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.activePanel.body.hide();
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;._activatePanel(panel,showAnim,hideAnim);                
        }
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;else&amp;lt;/span&amp;gt; &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;if&amp;lt;/span&amp;gt; (!&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.activePanel){
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;._activatePanel(panel,showAnim);
        }
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;if&amp;lt;/span&amp;gt;(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.onAfterSwitch)
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.onAfterSwitch();

    },
    _activatePanel:&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;function&amp;lt;/span&amp;gt;(panel,showAnim,panelToHide){
        panel.body.addClassName(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.activePanelClass);
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;if&amp;lt;/span&amp;gt;(showAnim &amp;amp;&amp;amp; &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.showAnim){
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;new&amp;lt;/span&amp;gt; Effect.toggle(panel.body,&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;blind&#8217;&amp;lt;/span&amp;gt;,{duration:0.3});        
        }
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;else&amp;lt;/span&amp;gt;{
            panel.body.show();
        }
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.activePanel = panel;
    }
};

Accordeon.Widget = Class.create();
Accordeon.Widget.prototype = {
    initialize:&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;function&amp;lt;/span&amp;gt;(options){
        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options={
            containerClass:&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;null
&amp;lt;/span&amp;gt;        };
        Object.extend(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options,options||{});

        &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.accordeons = &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;new&amp;lt;/span&amp;gt; Array();
        $$(&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;.&#8217;&amp;lt;/span&amp;gt; + &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options.containerClass).each(
            &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;function&amp;lt;/span&amp;gt;(accordeon){
                &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.accordeons.push(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;new&amp;lt;/span&amp;gt; Accordeon(accordeon,&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;.options));
            }.bind(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;)
        );

    }
};

Event.observe(window,&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;load&#8217;&amp;lt;/span&amp;gt;,&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;function&amp;lt;/span&amp;gt;(){    
    &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;var&amp;lt;/span&amp;gt; options = {

            panelClass:&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;panel&#8217;&amp;lt;/span&amp;gt;,
            headerClass:&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;panel_header&#8217;&amp;lt;/span&amp;gt;,
            bodyClass: &amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;panel_body&#8217;&amp;lt;/span&amp;gt;,
            activePanelClass:&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;active&#8217;&amp;lt;/span&amp;gt;,
            showAnim:&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;true&amp;lt;/span&amp;gt;,
            containerClass:&amp;lt;span style=&quot;color: rgb(163,21,21)&quot;&amp;gt;&#8217;accordeon&#8217;
&amp;lt;/span&amp;gt;        };
    &amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;new&amp;lt;/span&amp;gt; Accordeon.Widget(options);
}.bindAsEventListener(&amp;lt;span style=&quot;color: rgb(0,0,255)&quot;&amp;gt;this&amp;lt;/span&amp;gt;));

&amp;lt;font color=&quot;#008000&quot;&amp;gt;&amp;lt;/font&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://11011.net/software/vspaste&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-12-08 18:23:41 +0100</published>
        <link>http://flanders.co.nz/2006/12/08/scriptaculous-accordion-widget/</link>
      </item>
      
    
      
      <item>
        <title>If you&#8217;re serious about javascript</title>
        <description>&lt;p&gt;Sorry for spamming your readers today. But this is an absolute must see&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ajaxian.com/archives/douglas-crockford-video-advanced-javascript&quot;&gt;http://ajaxian.com/archives/douglas-crockford-video-advanced-javascript&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-12-05 19:21:34 +0100</published>
        <link>http://flanders.co.nz/2006/12/05/if-youre-serious-about-javascript/</link>
      </item>
      
    
      
      <item>
        <title>One of my best friends is joining MS</title>
        <description>&lt;p&gt;One of my best friends is joining Microsoft in belgium.&lt;/p&gt;

&lt;p&gt;He has a blog concerning marketing and advertising campaigns.&lt;/p&gt;

&lt;p&gt;You can read all about it here : &lt;a href=&quot;http://blog.coolz0r.com/2006/12/05/changing-jobs/&quot;&gt;View his blog post&amp;#8230;&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-12-05 18:49:30 +0100</published>
        <link>http://flanders.co.nz/2006/12/05/one-of-my-best-friends-is-joining-ms/</link>
      </item>
      
    
      
      <item>
        <title>Microsoft is listening after all</title>
        <description>&lt;p&gt;Well today has been an interesting day.  I signed up for a day of presentations on user experience, which is something that can always improve. Turns out it are a bunch of presentations on Microsoft Expression (I guess in some ways that has to do with user experience )It&amp;#8217;s not something I personally will be using as it is more designer focussed and I use visual studio for all my development and web design.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Over the last couple of months or so I have been sensing that Microsoft isn&amp;#8217;t what they used to be and I&amp;#8217;m not the only one that is &lt;/em&gt;&lt;a href=&quot;http://online.wsj.com/public/article/SB116490323676636989-HnHPKLzkyy9xKy2wnokbd2bc_bE_20071130.html&quot;&gt;&lt;em&gt;inclined to think that way&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Mostly because I&amp;#8217;m currently working as a sole developer in my own company I feel very much left out by them.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Most of the issues I have is to quickly develop something, &lt;strong&gt;where I am in full control of what happens, &lt;/strong&gt;is not something that is easily done in asp.net.  (For more on reasons why I like castle vs asp.net webforms : &lt;/em&gt;&lt;a href=&quot;http://www.flanders.co.nz/Blog/2006/09/20/AmITooLate.aspx&quot;&gt;&lt;em&gt;Am I too late&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, &lt;/em&gt;&lt;a href=&quot;http://www.flanders.co.nz/Blog/2006/09/23/ABitFurtherDownTheCastleTrack.aspx&quot;&gt;&lt;em&gt;A bit further down the castle track&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Back to the original story &lt;br/&gt;
Those presentations didn&amp;#8217;t really hold value for me but I got into a conversation with 2 microsoft employees that were there with the goal of finding out why people like me are moving to rails and what microsoft isn&amp;#8217;t giving us and they should.&lt;/p&gt;

&lt;p&gt;My main points of discomfort would be:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feeling of not being in control&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Complexity to get it to render out pages&lt;/p&gt;

&lt;p&gt;Slow development pass (might be ok if you&amp;#8217;re a giant company in which people actually hold meetings and have managers but not in my case). I&amp;#8217;m all about agile (not to be confused with the TFS agile method) development. Plan, build, ship within 2 months would be average.&lt;/p&gt;

&lt;p&gt;Need to know a page lifecycle (which is statefull programming in a stateless environment, need i say more)&lt;/p&gt;

&lt;p&gt;Complexity to get things done&lt;/p&gt;

&lt;p&gt;No proper sample code available that shows something beyond &amp;#8220;Hello world&amp;#8221;&lt;/p&gt;

&lt;p&gt;Anyway we had this interesting talk about it, now it&amp;#8217;s again a case of waiting to see if they can make a change before the new year to keep me interested.&lt;/p&gt;

&lt;p&gt;While I&amp;#8217;m on the subject. Next week will be the week in which I&amp;#8217;ll try to build my first RoR site. I&amp;#8217;m pretty confident that it will work out and then i can finally assess myself which one is better for what.&lt;/p&gt;

&lt;p&gt;Ok I&amp;#8217;m off to buy Agile webdevelopment with ruby now&lt;/p&gt;
</description>
        <published>2006-12-05 15:21:04 +0100</published>
        <link>http://flanders.co.nz/2006/12/05/microsoft-is-listening-after-all/</link>
      </item>
      
    
      
      <item>
        <title>Went to buy a normal headset</title>
        <description>&lt;p&gt;I couldn&amp;#8217;t really say goodbye to vista. So I thought the cheaper option would be to go buy a wired headset in anticipation of the bluetooth headset drivers.&lt;/p&gt;

&lt;p&gt;I am dissapointed that they worked in RC1/RC2 but not in the RTM release.&lt;/p&gt;

&lt;p&gt;I can find some comfort in the matter that I&amp;#8217;m not the only one that has these problems. &lt;a href=&quot;http://forums.microsoft.com/TechNet/showpost.aspx?postid=985349&amp;amp;siteid=17&amp;amp;¬ification_id=413753&amp;amp;message_id=413753&amp;amp;agent=messenger&quot;&gt;http://forums.microsoft.com/TechNet/showpost.aspx?postid=985349&amp;siteid;=17&amp;amp;¬ification_id=413753&amp;message;_id=413753&amp;agent;=messenger&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-12-04 08:11:50 +0100</published>
        <link>http://flanders.co.nz/2006/12/04/went-to-buy-a-normal-headset/</link>
      </item>
      
    
      
      <item>
        <title>I can already scratch one idea of my wishlist</title>
        <description>&lt;p&gt;Hammet just announced that he will be creating an ironpython view engine for castle.  &lt;a href=&quot;http://hammett.castleproject.org/?p=93&quot;&gt;Read more about it here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/IronPython&quot;&gt;IronPython&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/Castle&quot;&gt;Castle&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-11-30 07:38:02 +0100</published>
        <link>http://flanders.co.nz/2006/11/30/i-can-already-scratch-one-idea-of-my-wishlist/</link>
      </item>
      
    
      
      <item>
        <title>Will have to lay off vista for a while</title>
        <description>&lt;p&gt;Vista is a cool operating system but the fact that I can&amp;#8217;t run IE6 on it plus the fact that I can&amp;#8217;t get any of my bluetooth headsets to work with it make it so that I have to roll back to xp for the time being.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;I can live without IE6 but not without skype :)&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;If somebody knows how to get a logitech or a motorola headset going on vista please let me know. That would mean I can stay on vista :D&lt;/p&gt;
</description>
        <published>2006-11-29 19:50:45 +0100</published>
        <link>http://flanders.co.nz/2006/11/29/will-have-to-lay-off-vista-for-a-while/</link>
      </item>
      
    
      
      <item>
        <title>Vista is available on MSDN</title>
        <description>&lt;p&gt;I just started downloading the vista RTM of the msdn website&lt;/p&gt;
</description>
        <published>2006-11-16 09:14:56 +0100</published>
        <link>http://flanders.co.nz/2006/11/16/vista-is-available-on-msdn/</link>
      </item>
      
    
      
      <item>
        <title>Another view engine for castle</title>
        <description>&lt;p&gt;Ken Egozi has created a c# and vb view engine for castle. It&amp;#8217;s not yet available for download but looks promising&lt;/p&gt;

&lt;p&gt;You can check it out at : &lt;a href=&quot;http://www.kenegozi.com/blog/2006/11/05/BuildingApplicationUsingCastleRC2.aspx&quot;&gt;AspView - Yet another MonoRail ViewEngine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As I mentioned previously that I do like boo but i miss intellisense in visual studio and let&amp;#8217;s face it at this moment NOTHING beats visual studio as an IDE. Although sharpdevelop scores a lot higher than eclipse in my book. And what an amazing tool they built with so little resources in comparison to the other IDE projects.&lt;/p&gt;

&lt;p&gt;I like c# obviously but have been toying around with ironpython a little lately. Once i pass the decorator bit I&amp;#8217;d sure love to port the brail view engine to an ironpython view engine (the only problem i see there is that i don&amp;#8217;t have time :S to really do it.)&lt;/p&gt;

&lt;p&gt;Anyway I thought I might share with you what i have planned as non-workrelated projects for the year that is to come.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Finish nblogr&lt;/li&gt;
&lt;li&gt;Make nblogr work on linux and on mysql and/or postgre&lt;strong&gt;s&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Create the ironpython view engine (from here onwards i want to be able to use ironpython as my primary language)&lt;/li&gt;
&lt;li&gt;Add forums to nblogr&lt;/li&gt;
&lt;li&gt;Add CMS capabilities to nblogr (very distant future)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Let me know what you think about the ironpython view engine ?&lt;/p&gt;

&lt;p&gt;As stated before I would love some help in any one of my side projects of course. Just drop me a line and I&amp;#8217;ll figure out where to fit you in :)&lt;/p&gt;

&lt;p&gt;I whished I had some more interesting stuff to talk about but the last 5-6 weeks I&amp;#8217;ve been buried in some application and hoping to finish it this week.&lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/Castle&quot;&gt;Castle&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/Brail&quot;&gt;Brail&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/AspView&quot;&gt;AspView&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/NBlogr&quot;&gt;NBlogr&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/Programming&quot;&gt;Programming&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/IronPython&quot;&gt;IronPython&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-11-14 07:08:12 +0100</published>
        <link>http://flanders.co.nz/2006/11/14/another-view-engine-for-castle/</link>
      </item>
      
    
      
      <item>
        <title>Photosynth. Cool stuff</title>
        <description>&lt;p&gt;A friend of mine just passed me on this link&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://labs.live.com/photosynth/view.html?collection=sanmarco/index1.sxs&quot;&gt;http://labs.live.com/photosynth/view.html?collection=sanmarco/index1.sxs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;_&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Welcome to Photosynth&lt;/strong&gt;, a new technology from &lt;a href=&quot;http://labs.live.com/&quot;&gt;Microsoft Live Labs&lt;/a&gt; that takes a large collection of photos of a place or an object, analyzes them for similarities, and displays them in a reconstructed three-dimensional space.&lt;/p&gt;

&lt;p&gt;We&amp;#8217;ve assembled a few collections for you to play with, and we&amp;#8217;re working on adding more. In the future you&amp;#8217;ll be able to &amp;#8220;photosynthesize&amp;#8221; your own photos, but we aren&amp;#8217;t there yet.&lt;/p&gt;

&lt;p&gt;_&lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/Cool%20stuff&quot;&gt;Cool stuff&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/microsoft%20preview&quot;&gt;microsoft preview&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-11-09 10:11:09 +0100</published>
        <link>http://flanders.co.nz/2006/11/09/photosynth-cool-stuff/</link>
      </item>
      
    
      
      <item>
        <title>Boo, Ironpython, Scriptaculous, MS Ajax and me</title>
        <description>&lt;p&gt;Over the weekend I got the idea of learning ironpython by moving the codebase that I have for nblogr to &lt;a href=&quot;http://www.codeplex.com/Wiki/View.aspx?ProjectName=IronPython&quot;&gt;ironpython&lt;/a&gt; script and compiling it.&lt;/p&gt;

&lt;p&gt;Everything went fine until I had to decorate a method to make it cache/participate in a transaction/set a layout on a controller because ironpython in all its beauty doesn&amp;#8217;t support attributes on methods or classes.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m also missing a reference for &lt;a href=&quot;http://www.codeplex.com/Wiki/View.aspx?ProjectName=IronPython&quot;&gt;ironpython&lt;/a&gt;. Something that shows the available functions and the syntax for inheritance etc.  which slowed me down of course.&lt;/p&gt;

&lt;p&gt;Why do I want a dynamic language ?&lt;/p&gt;

&lt;p&gt;The 2 main reasons are : &lt;a href=&quot;http://en.wikipedia.org/wiki/Duck_typing&quot;&gt;Duck typing&lt;/a&gt; and readable &lt;a href=&quot;http://en.wikipedia.org/wiki/Anonymous_closure&quot;&gt;anonymous functions&lt;/a&gt;.  In c# there is the concept of anonymous delegates but that code really looks like it has been hit by a train, ugly.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve been writing in &lt;a href=&quot;http://boo.codehaus.org/&quot;&gt;boo&lt;/a&gt; for a while now just as a templating language and yes I like &lt;a href=&quot;http://boo.codehaus.org/&quot;&gt;boo&lt;/a&gt; a lot.  It combines the nice features of python with the c# language in a wrist friendly way. (I never got the point of wrist friendly thing until I got &lt;a href=&quot;http://www.ninds.nih.gov/disorders/carpal_tunnel/detail_carpal_tunnel.htm#69013049&quot;&gt;carpal tunnel syndrome&lt;/a&gt;, now it suddenly is a major issue)&lt;/p&gt;

&lt;p&gt;I sure wish there would be a language service for visual studio to do boo development but I&amp;#8217;ve been using sharp develop 2.1 to check it out.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sharpdevelop.com/&quot;&gt;SharpDevelop 2.1&lt;/a&gt; is a nice piece of work definitely for an open source IDE&amp;#8217;, it beats eclipse in my book&lt;/p&gt;

&lt;p&gt;In boo everything is an object also your functions and expressions (read it has anonymous functions).  Boo is strong typed but mimics duck typing in some form.&lt;/p&gt;

&lt;p&gt;To conclude this little intermezzo : my next project will be written in boo :)&lt;/p&gt;

&lt;p&gt;On the ajax library front I would have to report that I haven &amp;#8216;t looked at atlas/ms ajax since the beginning of september . I had decided to use it again when they finally release the framework.  So I&amp;#8217;ve been checking out these other libraries that are out there.  I checked out &lt;a href=&quot;http://jquery.com&quot;&gt;jquery&lt;/a&gt; which is a cool library but it is also slower in execution than the other ones.&lt;/p&gt;

&lt;p&gt;The next one on the list was &lt;a href=&quot;http://script.aculo.us&quot;&gt;scriptaculous&lt;/a&gt; and that is the one I&amp;#8217;ve been using in my projects now.  Scriptaculous does exactly what is expected and uses the javascript prototype model which happens to be one i like :)&lt;/p&gt;

&lt;p&gt;The move from the guys at MS to make their ajax extensions based on prototype was surprising but very positive in my book :) So when they release it i&amp;#8217;ll look at creating an javascript provider for nblogr so that you would be able to switch between your favourite library (we have plans to support the major libraries out of the  box.) &lt;/p&gt;

&lt;p&gt;del.icio.us tags: &lt;a href=&quot;http://del.icio.us/popular/Boo&quot;&gt;Boo&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/IronPython&quot;&gt;IronPython&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/Programming&quot;&gt;Programming&lt;/a&gt;, &lt;a href=&quot;http://del.icio.us/popular/General&quot;&gt;General&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-11-07 07:16:53 +0100</published>
        <link>http://flanders.co.nz/2006/11/07/boo-ironpython-scriptaculous-ms-ajax-and-me/</link>
      </item>
      
    
      
      <item>
        <title>Moving to Wellington</title>
        <description>&lt;p&gt;A while ago i posted that I was hiring somebody.&lt;/p&gt;

&lt;p&gt;Well first of all ==&gt; It&amp;#8217;s not easy to find somebody&lt;/p&gt;

&lt;p&gt;Secondly this might have been jumping the gun a bit because in light of some recent developments I&amp;#8217;ve decided to move my whole operation to Welington aka &amp;#8220;Silicon Welly&amp;#8221;.Probably I&amp;#8217;ll have to look into hiring somebody again around may-june next year.&lt;/p&gt;

&lt;p&gt;So the goal is to be up and running in Wellington on the 1st of march. &lt;/p&gt;

&lt;p&gt;I won&amp;#8217;t be boring you with all the reasons why I think Wellington is a better place to be than New Plymouth for a technology company. But one of the main ones would be that cows don&amp;#8217;t really need websites or UI&amp;#8217;s.&lt;/p&gt;

&lt;p&gt;I hope I&amp;#8217;ll find myself a proper place to settle. I&amp;#8217;m looking for a reasonably small house (not shed or likewise) with a garden, preferrably one that will hold it&amp;#8217;s ground and not slide of the mountain when it rains.&lt;/p&gt;

&lt;p&gt;Looking forward to moving there :)&lt;/p&gt;
</description>
        <published>2006-11-06 13:40:37 +0100</published>
        <link>http://flanders.co.nz/2006/11/06/moving-to-wellington/</link>
      </item>
      
    
      
      <item>
        <title>Still in doubt about using castle ???</title>
        <description>&lt;p&gt;If so then maybe this post will give you some more clarity. It might also give your manager the push in the right direction.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://danbunea.blogspot.com/2006/10/agile-methodologies-presentation-from.html&quot;&gt;http://danbunea.blogspot.com/2006/10/agile-methodo&amp;#8230;&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-11-01 06:14:28 +0100</published>
        <link>http://flanders.co.nz/2006/11/01/still-in-doubt-about-using-castle/</link>
      </item>
      
    
      
      <item>
        <title>Castle and workflow foundation</title>
        <description>&lt;p&gt;Yesterday I had to implement workflow in an application.  I had never used it before, and kind of feared that it was going to take me a couple of days to get the hang of it.&lt;/p&gt;

&lt;p&gt;Well 2 hours later I had my test workflow going so it isn&amp;#8217;t hard at all. If I can do it in that amount of time I&amp;#8217;m sure many of you can beat me.&lt;/p&gt;

&lt;p&gt;Now I wanted to host the workflow runtime in my container and this is how I went about it:&lt;/p&gt;

&lt;p&gt;I made 2 wrapper properties in a settings class :&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; public static class SeshatAppSettings&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        public static WorkflowRuntime WorkflowRuntime&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                return HttpContext.Current.Application[&amp;#8220;WorkflowRuntime&amp;#8221;] as WorkflowRuntime;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            set&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                HttpContext.Current.Application[&amp;#8220;WorkflowRuntime&amp;#8221;] = value;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public static ManualWorkflowSchedulerService WorkflowScheduler&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                return WorkflowRuntime.GetService(typeof(ManualWorkflowSchedulerService)) as ManualWorkflowSchedulerService;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;The next thing that comes to mind is, hey I need to start this when my application starts (start, app starts == IStartable). Because the workflow is hosted in asp.net we need a persistence medium. I chose to stay with the standard workflow foundation sql persistence service. And that implementation goes a bit like this :&lt;/p&gt;

&lt;p&gt;public class WorkflowHost : IStartable&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        #region IStartable Members&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Starts this instance.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        public void Start()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            // Create an instance of the workflowRuntime&lt;/p&gt;

&lt;p&gt;            WorkflowRuntime workflowRuntime = new WorkflowRuntime();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            // Add a manual scheduling service&lt;/p&gt;

&lt;p&gt;            ManualWorkflowSchedulerService manualService = new ManualWorkflowSchedulerService();&lt;/p&gt;

&lt;p&gt;            workflowRuntime.AddService(manualService);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            // Add our persistence&lt;/p&gt;

&lt;p&gt;            AddPersistenceService(workflowRuntime);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            // Start the workflow runtime&lt;/p&gt;

&lt;p&gt;            workflowRuntime.StartRuntime();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            // Store it in a place so that the whole application can get to it.&lt;/p&gt;

&lt;p&gt;            SeshatAppSettings.WorkflowRuntime = workflowRuntime; &lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Stops this instance.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        public void Stop()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            WorkflowRuntime workflowRuntime = SeshatAppSettings.WorkflowRuntime;&lt;/p&gt;

&lt;p&gt;            workflowRuntime.StopRuntime();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        #endregion&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        private void AddPersistenceService(WorkflowRuntime runtime)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            // Create the SqlWorkflowPersistenceService.&lt;/p&gt;

&lt;p&gt;            string connectionString = &amp;#8220;Initial Catalog=WorkflowPersistenceStore;Data Source=localhost;Integrated Security=SSPI;&amp;#8221;;&lt;/p&gt;

&lt;p&gt;            bool unloadOnIdle = true;&lt;/p&gt;

&lt;p&gt;            TimeSpan instanceOwnershipDuration = TimeSpan.MaxValue;&lt;/p&gt;

&lt;p&gt;            TimeSpan loadingInterval = new TimeSpan(0, 2, 0);&lt;/p&gt;

&lt;p&gt;            SqlWorkflowPersistenceService persistService = new SqlWorkflowPersistenceService(connectionString, unloadOnIdle, instanceOwnershipDuration, loadingInterval);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            // Add the SqlWorkflowPersistenceService to the runtime engine.&lt;/p&gt;

&lt;p&gt;            runtime.AddService( persistService );&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;The last bit we need to take care of is adding our startable component to the container which is pretty easy to do.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;public class WorkflowFacility : AbstractFacility&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        protected override void Init()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            Kernel.AddComponent(&amp;#8220;workflow.defaultHost&amp;#8221;, typeof(IStartable), typeof(WorkflowHost));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;And the final piece is the configuration from the component&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;   &lt;/p&gt;

&lt;p&gt;    &amp;lt;facility&lt;/p&gt;

&lt;p&gt;          id=&amp;#8221;workflow.facility&amp;#8221;&lt;/p&gt;

&lt;p&gt;          type=&amp;#8221;Seshat.Common.WorkflowFacility, Seshat.Common&amp;#8221;&lt;/p&gt;

&lt;p&gt;    /&gt;&lt;/p&gt;

&lt;p&gt;That&amp;#8217;s it :)&lt;/p&gt;
</description>
        <published>2006-10-31 06:27:46 +0100</published>
        <link>http://flanders.co.nz/2006/10/31/castle-and-workflow-foundation/</link>
      </item>
      
    
      
      <item>
        <title>If you ever need intellisense for asp.net projects</title>
        <description>&lt;p&gt;Then these guys would be a good place to start.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.bluevisionsoftware.com/WebSite/ProductsAndServicesInfo.aspx?ID=9&quot;&gt;http://www.bluevisionsoftware.com/WebSite/Products&amp;#8230;&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-10-28 19:05:53 +0200</published>
        <link>http://flanders.co.nz/2006/10/28/if-you-ever-need-intellisense-for-aspnet-projects/</link>
      </item>
      
    
      
      <item>
        <title>I am looking for a junior developer</title>
        <description>&lt;p&gt;Please spread the word :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.seek.co.nz/jobsearch/index.ascx?DateRange=31&amp;amp;catlocation=1017&amp;amp;stateselected=true&amp;amp;Keywords=Flanders&amp;amp;searchfrom=quick&quot;&gt;http://www.seek.co.nz/jobsearch/index.ascx?DateRan&amp;#8230;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I  want somebody with almost no experience but a strong passion for the internet.&lt;/p&gt;

&lt;p&gt;This person will have to move to New Plymouth.&lt;/p&gt;

&lt;p&gt;If you know somebody please give them my details.&lt;/p&gt;
</description>
        <published>2006-10-27 07:36:02 +0200</published>
        <link>http://flanders.co.nz/2006/10/27/i-am-looking-for-a-junior-developer/</link>
      </item>
      
    
      
      <item>
        <title>Get intellisense for Base4 to edit schema&#8217;s</title>
        <description>&lt;p&gt;I don&amp;#8217;t know how many of you know about this but I certainly didn&amp;#8217;t&lt;/p&gt;

&lt;p&gt;When you download the source of base4 which you can find &lt;a href=&quot;http://www.base4.net/Blog.aspx?ID=165&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you navigate to the folder C:\Program Files\Base4 Solutions Ltd\Base4 version 2.1\Source**Base4.Storage\Resources**&lt;/p&gt;

&lt;p&gt;Or whereever you installed the source and copy the xsd file that is there to the folder C:\Program Files\Microsoft Visual Studio 8**Xml\Schemas** (the folder xml schemas in your visual studio install dir)&lt;/p&gt;

&lt;p&gt;When you restart/start visual studio now and you want to edit a schema now the things popup to assist you&lt;/p&gt;

&lt;p&gt;Don&amp;#8217;t forget to register on the base4 site if you haven&amp;#8217;t already.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Enjoy&lt;/p&gt;
</description>
        <published>2006-10-25 06:54:37 +0200</published>
        <link>http://flanders.co.nz/2006/10/25/get-intellisense-for-base4-to-edit-schemas/</link>
      </item>
      
    
      
      <item>
        <title>Ubuntu linux delivers great value</title>
        <description>&lt;p&gt;Yesterday evening I installed &lt;a href=&quot;http://www.ubuntu.com/&quot;&gt;Ubuntu&lt;/a&gt; linux because i want something where i can run mono on that is not running on a windows OS. Lately I&amp;#8217;ve got this thing that I want my apps to work cross-platform etc. So I&amp;#8217;ve been looking into linux type of OS&amp;#8217;es.&lt;/p&gt;

&lt;p&gt;The two I like are &lt;a href=&quot;http://www.novell.com/linux/&quot;&gt;suse&lt;/a&gt; and &lt;a href=&quot;http://www.ubuntu.com/&quot;&gt;ubuntu&lt;/a&gt; now. Don&amp;#8217;t really care much about redhat never have.&lt;/p&gt;

&lt;p&gt;In my life as an IT professional I&amp;#8217;ve worked with several linux distributions. I don&amp;#8217;t know if &lt;a href=&quot;http://www.mandriva.com/&quot;&gt;mandrake&lt;/a&gt; is still around but those guys were my first linux installation for firewall implementations, until they got the idea to make their software not free anymore.&lt;/p&gt;

&lt;p&gt;Anyway back to ubuntu. It isn&amp;#8217;t mac os but it is the easiest linux I&amp;#8217;ve used so far. It took me about 30 minutes to install it on my virtual server. And it took anoter 10 to get mono installed on it.&lt;/p&gt;

&lt;p&gt;The experience is a whole lot better than having to fiddle all over the place with settings and conf files.&lt;/p&gt;

&lt;p&gt;Also I didn&amp;#8217;t get the questions about root etc.. Yes this distibution is streamlined and works properly.&lt;/p&gt;

&lt;p&gt;And now I finally have a real operating system to put on the iMac that runs on our network. Because MacOS 9 isn&amp;#8217;t really networking and Ajax friendly.  The only browser that runs on that iMac is iCab and if you have some experience with iCab then you&amp;#8217;ll know that that is not really worth calling a browser.&lt;/p&gt;

&lt;p&gt;You can run download an alternate distro of ubuntu that runs on the iMac architecture.&lt;/p&gt;

&lt;p&gt;Yes another thing there were only a couple downloads to chose from not the usual list where you almost need to know your motherboard type to get the right version down.&lt;/p&gt;

&lt;p&gt;Below is a screenshot. Look at the folder list on the left. It&amp;#8217;s not your usual confusing bit but this time it has got real indications of what you want to do. :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.flanders.co.nz/Blog/content/binary/WindowsLiveWriter/Ubuntulinuxdeliversgreatvalue_7979/UbuntuScreen%5B7%5D.png&quot;&gt;&lt;img src=&quot;http://www.flanders.co.nz/Blog/content/binary/WindowsLiveWriter/Ubuntulinuxdeliversgreatvalue_7979/UbuntuScreen_thumb%5B5%5D.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This doesn&amp;#8217;t mean I will uninstall Vista and start working on linux from now on but I&amp;#8217;m happy about the fact that I don&amp;#8217;t have to deal with Mac OS 9 anymore on the intranet for the browser application.&lt;/p&gt;
</description>
        <published>2006-10-19 06:37:31 +0200</published>
        <link>http://flanders.co.nz/2006/10/19/ubuntu-linux-delivers-great-value/</link>
      </item>
      
    
      
      <item>
        <title>Globat.com tactics scandalous</title>
        <description>&lt;p&gt;First off I am not going to link to them in this post because that would be like free advertising.&lt;/p&gt;

&lt;p&gt;A couple of months ago I took 2 domainname accounts with them and ever since they have been sending me emails every couple of days telling me i need to upgrade my account to some super hosting plan they provide.&lt;/p&gt;

&lt;p&gt;I don&amp;#8217;t need the friggin hostiing because I have my own server running. &lt;br/&gt;
Their constant emailing has made me classify them into a folder that doesn&amp;#8217;t show up in my unread mails.&lt;/p&gt;

&lt;p&gt;So the latest tactic, which can be called dodgy at the very least, is to send an email about an automatic upgrade and if you fail to opt-out you get a hosting account @ 40USD/month&lt;/p&gt;

&lt;p&gt;The letters they sent (I won&amp;#8217;t be posting all the other mails of course) :&lt;/p&gt;

&lt;p&gt;1st e-mail :&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;em&gt;Dear Ivan,&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We would like to extend an incredible money-saving offer for medlr.com to thank you for your continued business. In 10 days from this date, we will be providing you with an upgrade to our new TeraByte Pro(tm) Hosting package at the low cost of just $39.95!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This amazing promotion is part of our new special upgrade program of hosting services for our loyal customers. The feedback we received about the upgrade program has been overwhelming. We heard from many of our customers who learned about these upgrade promotions too late or through a friend. Many customers then suggested that we utilize an automatic upgrade process along with some form of an additional incentive to initiate these upgrades. Well, we have listened to your feedback and we are ready to act!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;= = = Take Your Domain to the Next Level = = =&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;As our dedicated domain customer, you will be receiving an automatic upgrade to Globat.com&amp;#8217;s award-winning hosting services at a highly-discounted price of only $39.95, instead of $95.40! That breaks down to only $3.33 per month, truly a price that won&amp;#8217;t break the bank!&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;2nd e-mail: (medlr.com has nothing on it, don&amp;#8217;t follow)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;em&gt;Dear Ivan,&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Congratulation! As per our previous notices, today we have upgraded your hosting account for &lt;/em&gt;&lt;a href=&quot;http://www.medlr.com&quot;&gt;&lt;em&gt;www.medlr.com&lt;/em&gt;&lt;/a&gt;&lt;em&gt; to our all new Terabyte Pro™ level and processed your invoice 3629260 in the amount of $39.95 through your credit card account on file.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You are now utilizing Globat.com&amp;#8217;s industry-leading TeraByte Plus Hosting(TM) solution! With this upgrade you have also locked in your web hosting pricing for as long as your account remains in this program. You have also qualified to receive one free month of web hosting. To claim your free month please go to:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;https://order.globat.com/newOrder/nop_givemonth.pl&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;and enter the following coupon code&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;FREEMONTH&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;into the field provided. Then hit the &amp;#8220;Add My Free Month&amp;#8221; button. Upon completion of this step your free month will automatically be added to your current account renewal date and you can view your next renewal date at:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;https://login.globat.com/cp2/account.php&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;or view your receipt for this transaction at:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;https://login.globat.com/cp2/account.php?page=invoices&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;My response in as much words as i want to give them.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Excuse me I DON&amp;#8217;T want anything I DID NOT EXPLICITLY ORDER. &lt;br/&gt;
Please cancel your super promotion. I&amp;#8217;ll move my domain names because &lt;br/&gt;
I think these tactics are scandalous.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ll start blogging about it too.. What type of gangsters are you guys. &lt;br/&gt;
Where is it legal that I buy stuff because I did not tell you i didn&amp;#8217;t  want it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;By the time I had finished this email. They already came back to me telling me my money has been refunded.&lt;br/&gt;
I&amp;#8217;m going to post it anyway because I do think that if that is the direction we are heading then I think nobody will every be safe. Becauwe whenever you buy something somewhere it gives the seller the right to sell you more stuff without even approving the buy.&lt;/p&gt;

&lt;p&gt;Well, it feels good to get that of my chest. I&amp;#8217;m wondering where these globat people won their award, must be in the gangster syndicate or something, maybe they got it from the Soprano family or something.&lt;/p&gt;
</description>
        <published>2006-10-19 06:05:38 +0200</published>
        <link>http://flanders.co.nz/2006/10/19/globatcom-tactics-scandalous/</link>
      </item>
      
    
      
      <item>
        <title>Base4 and Castle&#8230; the controller</title>
        <description>&lt;p&gt;The next bit for pages in general is that often they represent a list. Often this list is a really long list that you&amp;#8217;d like to page through.&lt;/p&gt;

&lt;p&gt;I put this functionality into a generic base controller class. The whole idea of my set up is to provide a technique called progressive enhancement of forms.  In short you create an application that works completely without javascript using hyperlinks for gets and submit buttons etc.  Then you attach some css selector classes to the different bits of functionality and you attach these behaviors to the html elements on your page.&lt;/p&gt;

&lt;p&gt;I thought that that is a really nice way of enriching the experience of people that allow it to be enriched ;)  And that is the explanation of the ajaxCall bool variable on some of the methods&lt;/p&gt;

&lt;p&gt;The first thing is the interface for the class :&lt;/p&gt;

&lt;p&gt;using System;&lt;/p&gt;

&lt;p&gt;namespace NBlogr.Presenter&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;    public interface INBlogrController&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        bool IsCompositeView{get;}&lt;/p&gt;

&lt;p&gt;        void Delete(T item, int pageNumber, int pageSize);&lt;/p&gt;

&lt;p&gt;        void Delete(T item, int pageNumber, int pageSize, bool ajaxCall);&lt;/p&gt;

&lt;p&gt;        void Edit(Guid Id);&lt;/p&gt;

&lt;p&gt;        void Edit(Guid Id, bool ajaxCall);&lt;/p&gt;

&lt;p&gt;        void JumpToPage(int pageNumber, int pageSize);&lt;/p&gt;

&lt;p&gt;        void JumpToPage(int pageNumber, int pageSize, bool ajaxCall);&lt;/p&gt;

&lt;p&gt;        void List();&lt;/p&gt;

&lt;p&gt;        void List(bool ajaxCall);&lt;/p&gt;

&lt;p&gt;        void NavigateBack(int pageNumber, int pageSize);&lt;/p&gt;

&lt;p&gt;        void NavigateFirst(int pageSize);&lt;/p&gt;

&lt;p&gt;        void NavigateNext(int pageNumber, int pageSize);&lt;/p&gt;

&lt;p&gt;        void NavigateBack(int pageNumber, int pageSize, bool ajaxCall);&lt;/p&gt;

&lt;p&gt;        void NavigateFirst(int pageSize, bool ajaxCall);&lt;/p&gt;

&lt;p&gt;        void NavigateNext(int pageNumber, int pageSize, bool ajaxCall);&lt;/p&gt;

&lt;p&gt;        void Show();&lt;/p&gt;

&lt;p&gt;        void Show(bool ajaxCall);&lt;/p&gt;

&lt;p&gt;        void Save(T item, int pageNumber, int pageSize);&lt;/p&gt;

&lt;p&gt;        void Save(T item, int pageNumber, int pageSize, bool ajaxCall);&lt;/p&gt;

&lt;p&gt;        void CreateNew();&lt;/p&gt;

&lt;p&gt;        void CreateNew(bool ajaxCall);&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;And the next thing is the base class again :&lt;/p&gt;

&lt;p&gt;using System;&lt;/p&gt;

&lt;p&gt;using System.Collections.Generic;&lt;/p&gt;

&lt;p&gt;using System.Text;&lt;/p&gt;

&lt;p&gt;using Base4.Storage;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;namespace NBlogr.Presenter.Abstract&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;    public abstract class AbstractAdminController : AbstractController, INBlogrController where T: class, IItem, new()&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        bool compositeView;&lt;/p&gt;

&lt;p&gt;        int _pageSize;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public AbstractAdminController()&lt;/p&gt;

&lt;p&gt;            : base()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            this.compositeView = false;&lt;/p&gt;

&lt;p&gt;            _pageSize = 10;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public AbstractAdminController(bool compositeView) : base()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            this.compositeView = compositeView;&lt;/p&gt;

&lt;p&gt;            _pageSize = 10;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        internal abstract void getList(int pageNumber, int pageSize, bool skipLayout);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        internal void getList(int pageNumber, int pageSize)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            getList(pageNumber, pageSize, false);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;        #region INBlogrController Members&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public bool IsCompositeView&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                return compositeView;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;        public int PageSize&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                return _pageSize;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            set&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                _pageSize = value;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public void Delete(T item, int pageNumber, int pageSize)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            Delete(item,pageNumber,pageSize,false);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public abstract void Delete(T item, int pageNumber, int pageSize, bool ajaxCall);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public void CreateNew()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            CreateNew(false);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public virtual void CreateNew(bool ajaxCall)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            Edit(Guid.NewGuid(), ajaxCall);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public void Edit(Guid Id)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            Edit(Id, false);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public abstract void Edit(Guid Id, bool ajaxCall);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public void JumpToPage(int pageNumber, int pageSize)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            getList(pageNumber, pageSize);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public virtual void JumpToPage(int pageNumber, int pageSize, bool ajaxCall)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            getList(pageNumber, pageSize, ajaxCall);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public void List()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            getList(1, _pageSize);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public virtual void List(bool ajaxCall)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            getList(1, _pageSize, ajaxCall);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public void NavigateBack(int pageNumber, int pageSize)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            getList(&amp;#8211;pageNumber, pageSize);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public void NavigateFirst(int pageSize)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            getList(1, pageSize);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public void NavigateNext(int pageNumber, int pageSize)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            getList(++pageNumber, pageSize);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public virtual void NavigateBack(int pageNumber, int pageSize, bool ajaxCall)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            getList(&amp;#8211;pageNumber, pageSize, ajaxCall);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public virtual void NavigateFirst(int pageSize, bool ajaxCall)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            getList(1, pageSize, ajaxCall);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public virtual void NavigateNext(int pageNumber, int pageSize, bool ajaxCall)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            getList(++pageNumber, pageSize, ajaxCall);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public void Show()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            getList(1, _pageSize);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public virtual void Show(bool ajaxCall)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            getList(1, _pageSize, ajaxCall);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public void Save(T item, int pageNumber, int pageSize)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            Save(item, pageNumber, pageSize, false);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public abstract void Save(T item, int pageNumber, int pageSize, bool ajaxCall);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        #endregion&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Now onto the concrete implementation of my controller class&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;using System;&lt;/p&gt;

&lt;p&gt;using System.Collections.Generic;&lt;/p&gt;

&lt;p&gt;using System.Text;&lt;/p&gt;

&lt;p&gt;using NBlogr.Core;&lt;/p&gt;

&lt;p&gt;using NBlogr.Service;&lt;/p&gt;

&lt;p&gt;using Base4.Storage;&lt;/p&gt;

&lt;p&gt;using Castle.MonoRail.Framework;&lt;/p&gt;

&lt;p&gt;using NBlogr.Common.Base4Integration;&lt;/p&gt;

&lt;p&gt;using Castle.Services.Transaction;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;namespace NBlogr.Presenter&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;    public class BlogController : Abstract.AbstractAdminController&lt;Blog&gt;&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        BlogService blogService;&lt;/p&gt;

&lt;p&gt;        &lt;/p&gt;

&lt;p&gt;        public BlogController(IService&lt;Blog&gt; blogService)&lt;/p&gt;

&lt;p&gt;            : base(true)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            this.blogService = blogService as BlogService;&lt;/p&gt;

&lt;p&gt;             &lt;/p&gt;

&lt;p&gt;             &lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        private void internalGetList(int pageNumber, int pageSize)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            int pageCount;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            IItemList&lt;Blog&gt; blog = blogService.GetAll(&amp;#8220;Name&amp;#8221;, pageNumber, pageSize, out pageCount);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            internalMapProperties(blog , pageNumber,pageSize, pageCount);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        private void internalMapProperties(IItemList&lt;Blog&gt; blogs, int pageNumber, int pageSize, int pageCount)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            int totalCount = blogs.Count;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            if (PropertyBag[&amp;#8220;blog&amp;#8221;] == null)&lt;/p&gt;

&lt;p&gt;                PropertyBag.Add(&amp;#8220;blog&amp;#8221;, new Blog());&lt;/p&gt;

&lt;p&gt;            &lt;/p&gt;

&lt;p&gt;            PropertyBag.Add(&amp;#8220;blogs&amp;#8221;, pageNumber);&lt;/p&gt;

&lt;p&gt;            PropertyBag.Add(&amp;#8220;index&amp;#8221;, pageNumber);&lt;/p&gt;

&lt;p&gt;            PropertyBag.Add(&amp;#8220;count&amp;#8221;, totalCount);&lt;/p&gt;

&lt;p&gt;            PropertyBag.Add(&amp;#8220;pageCount&amp;#8221;, pageCount);&lt;/p&gt;

&lt;p&gt;            PropertyBag.Add(&amp;#8220;pageSize&amp;#8221;, pageSize);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        internal override void getList(int pageNumber, int pageSize, bool skipLayout)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            internalGetList(pageNumber, pageSize);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            if (!skipLayout)&lt;/p&gt;

&lt;p&gt;                RenderView(&amp;#8220;Show&amp;#8221;, false);&lt;/p&gt;

&lt;p&gt;            else&lt;/p&gt;

&lt;p&gt;                RenderView(&amp;#8220;List&amp;#8221;, true);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public override void Edit(Guid Id, bool ajaxCall)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            Blog blog = blogService.GetById(Id);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            PropertyBag.Add(&amp;#8220;blog&amp;#8221;, blog);&lt;/p&gt;

&lt;p&gt;             &lt;/p&gt;

&lt;p&gt;            if (!ajaxCall)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                getList(1, 0);&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            else&lt;/p&gt;

&lt;p&gt;                RenderView(&amp;#8220;Save&amp;#8221;, ajaxCall);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public override void Delete([DataBind(&amp;#8220;blog&amp;#8221;)] Blog item, int pageNumber, int pageSize, bool ajaxCall)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            blogService.Delete(item);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            if (!ajaxCall)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                getList(1, 0);&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            else&lt;/p&gt;

&lt;p&gt;                RenderText(getJsonResponse(&amp;#8220;Contract deleted successfully&amp;#8221;));&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public override void Save([DataBind(&amp;#8220;blog&amp;#8221;)] Blog item, int pageNumber, int pageSize, bool ajaxCall)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            PropertyBag.Add(&amp;#8220;blog&amp;#8221;, blogService.Save(item));&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            if (!ajaxCall)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                getList(1, 0);&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            else&lt;/p&gt;

&lt;p&gt;                RenderText(getJsonResponse(&amp;#8220;Contract saved successfully&amp;#8221;));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        private string getJsonResponse(string message)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            return &amp;#8220;{result: true, content: &amp;#8216;&amp;#8221; + message + &amp;#8220;&amp;#8217;}&amp;#8221;;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;
</description>
        <published>2006-10-18 08:14:07 +0200</published>
        <link>http://flanders.co.nz/2006/10/18/base4-and-castle-the-controller/</link>
      </item>
      
    
      
      <item>
        <title>Base4 and Castle &#8230; The service</title>
        <description>&lt;p&gt;&lt;em&gt;UPDATE: THE SERVICE CLASS HAS CHANGED AGAIN&lt;/em&gt;&lt;strong&gt;.&lt;br/&gt;
&lt;/strong&gt;&lt;em&gt;Scratch the update.. it assumes that the object is already in the database which isn&amp;#8217;t always the case. For this type of synchronisation to work I need some more time. So I reverted this back to the old version&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This post continues my previous posts on using base4 and castle together.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m sorry but there is no Active record in the base4 way of doing things.&lt;/p&gt;

&lt;p&gt;The previous posts you would be intrested in can be found here :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.flanders.co.nz/Blog/2006/10/12/HostingBase4InsideYourWebApplication.aspx&quot;&gt;Hosting base4 inside your web application&lt;br/&gt;
&lt;/a&gt;&lt;a href=&quot;http://www.flanders.co.nz/Blog/2006/10/16/Base4OnCastleContinuedTheFacility.aspx&quot;&gt;Base4 and Castle continued&amp;#8230; The facility&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Today I want to show you the abstract service class that I use so the controller only talks to the service and never to the dataobject directly. &lt;/p&gt;

&lt;p&gt;It is not a very big class but i found it pretty useful.  As it turns out almost all my service classes in a previous project started to look very much alike so I grouped that functionality in an abstract class. There is one thing you have to look out for and that is if you have something like audit fields (Created, LastModified,&amp;#8230;..) you need to first get the object from the datastore and then set just the changed properties on the retrieved object.&lt;/p&gt;

&lt;p&gt;The first thing you need is the contract/interface for the service. I expect this interface to grow over time so keep checking NBlogr for updates but this where I am at now :)&lt;/p&gt;

&lt;p&gt;using System;&lt;/p&gt;

&lt;p&gt;namespace NBlogr.Service&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;    public interface IService&lt;/p&gt;

&lt;p&gt;    where T : class, Base4.Storage.IItem, new()&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        void Delete(T item);&lt;/p&gt;

&lt;p&gt;        Base4.Storage.IItemList GetAll(string sortExpression, int pageNumber, int pageSize, out int pageCount);&lt;/p&gt;

&lt;p&gt;        T GetById(Guid Id);&lt;/p&gt;

&lt;p&gt;        T Save(T item);&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;And here&amp;#8217;s the abstract class :&lt;/p&gt;

&lt;p&gt;using Base4.Storage;&lt;/p&gt;

&lt;p&gt;using Castle.Core.Logging;&lt;/p&gt;

&lt;p&gt;using NBlogr.Common.Base4Integration;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;using User = NBlogr.Core.User;&lt;/p&gt;

&lt;p&gt;using Castle.Services.Transaction;&lt;/p&gt;

&lt;p&gt;using Base4.Storage.Utils;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;namespace NBlogr.Service.Abstract&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;    [Transactional]&lt;/p&gt;

&lt;p&gt;    public abstract class AbstractService : IService where T : class,IItem,new()&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        internal readonly ILogger logger;&lt;/p&gt;

&lt;p&gt;        internal IDataObject dao;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public AbstractService(ILogger logger, IDataObject dao)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            this.logger = logger;&lt;/p&gt;

&lt;p&gt;            this.dao = dao;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        [Transaction(TransactionMode.Requires)]&lt;/p&gt;

&lt;p&gt;        public virtual T Save(T item)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            return dao.Save(internalPrepareSave(item));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        internal abstract T internalPrepareSave(T item);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        [Transaction(TransactionMode.Requires)]&lt;/p&gt;

&lt;p&gt;        public virtual void Delete(T item)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            dao.Delete(item);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public virtual IItemList GetAll(string sortExpression, int pageNumber, int pageSize, out int pageCount)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            return dao.FindAll(sortExpression, pageNumber, pageSize, out pageCount);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public virtual T GetById(Guid Id)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            return dao.GetById(Id);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;And the last bit could be an implementation of this service.  I don&amp;#8217;t have companies in NBlogr. I took this class from another project :&lt;/p&gt;

&lt;p&gt;using System;&lt;/p&gt;

&lt;p&gt;using Castle.Services.Transaction;&lt;/p&gt;

&lt;p&gt;using Castle.Core.Logging;&lt;/p&gt;

&lt;p&gt;using NBlogr.Common.Base4Integration;&lt;/p&gt;

&lt;p&gt;using NBlogr.Core;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;namespace NBlogr.Service&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;    [Transactional]&lt;/p&gt;

&lt;p&gt;    public class BlogService : Abstract.AbstractService&lt;Blog&gt;&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public BlogService(ILogger logger, IDataObject&lt;Blog&gt; dao)&lt;/p&gt;

&lt;p&gt;            : base(logger, dao)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        internal override Blog internalPrepareSave(Blog item)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            Blog itemToSave = GetById(item.Id);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            if (!itemToSave.Internals.InDatabase)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                itemToSave.Created = DateTime.Now;&lt;/p&gt;

&lt;p&gt;                itemToSave.Creator = CurrentUser;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            itemToSave.AkismetKey = item.AkismetKey;&lt;/p&gt;

&lt;p&gt;            //TODO: finish mapping properties&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            return itemToSave;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;This concludes the service for use with base4.  I hope you find it as useful as I do.&lt;br/&gt;
If somebody knows improvements etc. Please let me know I am always keen to learn.&lt;/p&gt;

&lt;p&gt;I also realise that I can just call save on an IItem object but i like every tier to have it&amp;#8217;s specific task so the dataobject doesn&amp;#8217;t do much else than call IItem.Save() for now&lt;/p&gt;
</description>
        <published>2006-10-17 06:38:35 +0200</published>
        <link>http://flanders.co.nz/2006/10/17/base4-and-castle-the-service/</link>
      </item>
      
    
      
      <item>
        <title>No post yesterday I was moving from team foundation to subversion</title>
        <description>&lt;p&gt;I was using Team foundation workgroup edition  for the past year to manage collaborating with a couple of people. And the other stuff you use team foundation for.&lt;/p&gt;

&lt;p&gt;I like Team foundation a lot but unfortunately am not rich enough to buy licenses for everybody that needs to log bugs etc.  To avoid all those licensing issues we have switched over to a combination of open source packets.The total cost of the operation is about 450NZD for unlimited licenses.&lt;/p&gt;

&lt;p&gt;So what is the setup :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://subversion.tigris.org/&quot;&gt;Subversion&lt;/a&gt; as source control server&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://httpd.apache.org/&quot;&gt;Apache2&lt;/a&gt; with openSSL for people to connect to the subversion repository.
&lt;a href=&quot;http://raibledesigns.com/wiki/Wiki.jsp?page=ApacheSSL&quot;&gt;Install Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tortoisesvn.tigris.org/&quot;&gt;TortoiseSVN&lt;/a&gt; and/or &lt;a href=&quot;http://ankhsvn.tigris.org/&quot;&gt;AnkhSVN&lt;/a&gt; (VS2k5 integration) as source control client&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.countersoft.com/&quot;&gt;Gemini&lt;/a&gt; as project management tool&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://projectmanagementsuite.com/portal&quot;&gt;Gemini Time tracker&lt;/a&gt; to manage the time spent on issues/work items&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://gemini.countersoft.com/issue/ViewIssue.aspx?ID=302&quot;&gt;The plugin&lt;/a&gt; originally written by &lt;a href=&quot;http://www.syringe.net.nz/CategoryView,category,.NET.aspx&quot;&gt;Chris Auld&lt;/a&gt; and improved by &lt;a href=&quot;http://weblogs.asp.net/fbouma/&quot;&gt;Frans Bouma&lt;/a&gt; for hooking into subversion&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The whole experience took about 6 hours to configure ant that is because I didn&amp;#8217;t know apache at all and getting it to work with SSL did take me some time until I found the install guide that had a link to compiled binaries. I&amp;#8217;m not that good in compiling ansi-C on a windows 2k3 64-bit machine without the windows sdk installed. Not to mention all these little tools you have to download all over the place. Most of them i had never heard of before, so yes I was happy to find that guide.&lt;/p&gt;

&lt;p&gt;We are now completely switched over, except for the work items that are currently in team foundation server. It was a good moment to do this because the most of the previous projects have come to an end and the new wave is rolling in. I got really tired of retyping the emails etc I got into the issue tracker, simply becasue I couldn&amp;#8217;t afford it.&lt;/p&gt;
</description>
        <published>2006-10-16 06:35:43 +0200</published>
        <link>http://flanders.co.nz/2006/10/16/no-post-yesterday-i-was-moving-from-team-foundation-to/</link>
      </item>
      
    
      
      <item>
        <title>Redirecting based on a role in the loggedin event of the login control</title>
        <description>&lt;p&gt;Today I had to fix a website that is built by the guys over in Russia. Completely asp.net no castle involved whatsoever. There is not even an O/R mapper in the application.&lt;/p&gt;

&lt;p&gt;Real basic stuff. Sql datasource gridview/formview type of things.&lt;/p&gt;

&lt;p&gt;The client asked me to do redirect their site to certain pages depending on which role the user is in.&lt;/p&gt;

&lt;p&gt;Cool. Let&amp;#8217;s handle the LoggedIn event of the Login control. This is what I started of with. Makes perfect sense to me that that should work.&lt;/p&gt;

&lt;p&gt;    protected void Login1_LoggedIn(object sender, EventArgs e)&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        if (Roles.IsUserInRole(&amp;#8220;School&amp;#8221;))&lt;/p&gt;

&lt;p&gt;            Response.Redirect(string.Format(&amp;#8220;~/Career/School.aspx?ID={0}&amp;#8221;, CareerUser.GetUserTypeId(Membership.GetUser().ProviderUserKey)));&lt;/p&gt;

&lt;p&gt;        if (Roles.IsUserInRole(&amp;#8220;Student&amp;#8221;))&lt;/p&gt;

&lt;p&gt;            Response.Redirect(string.Format(&amp;#8220;~/Career/Student.aspx?ID={0}&amp;#8221;, CareerUser.GetUserTypeId(Membership.GetUser().ProviderUserKey)));&lt;/p&gt;

&lt;p&gt;        else&lt;/p&gt;

&lt;p&gt;            Response.Redirect(&amp;#8220;~/Login.aspx&amp;#8221;);&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;Now as expected that didn&amp;#8217;t do the trick. But this does&lt;/p&gt;

&lt;p&gt;    protected void Login1_LoggedIn(object sender, EventArgs e)&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        /*I have to do it this way because there is no cookie set yet so Membership.GetUser() returns an empty object.&lt;/p&gt;

&lt;p&gt;        * The same goes for the roles. No cookie means no data for the standard function.&lt;/p&gt;

&lt;p&gt;        */&lt;/p&gt;

&lt;p&gt;        Login login = sender as Login;&lt;/p&gt;

&lt;p&gt;        Guid userObjectKey = (Guid)Membership.GetUser(login.UserName).ProviderUserKey;&lt;/p&gt;

&lt;p&gt;        Guid userId = CareerUser.GetUserTypeId(login.UserName, userObjectKey);&lt;/p&gt;

&lt;p&gt;        if (Roles.IsUserInRole(login.UserName, &amp;#8220;School&amp;#8221;))&lt;/p&gt;

&lt;p&gt;            Response.Redirect(string.Format(&amp;#8220;~/Career/School.aspx?ID={0}&amp;#8221;, userId));&lt;/p&gt;

&lt;p&gt;        if (Roles.IsUserInRole(login.UserName, &amp;#8220;Student&amp;#8221;))&lt;/p&gt;

&lt;p&gt;            Response.Redirect(string.Format(&amp;#8220;~/Career/Student.aspx?ID={0}&amp;#8221;, userId));&lt;/p&gt;

&lt;p&gt;        else&lt;/p&gt;

&lt;p&gt;            Response.Redirect(&amp;#8220;~/Login.aspx&amp;#8221;);&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;Just thought I&amp;#8217;d share this for other people that have this problem.&lt;/p&gt;

&lt;p&gt;Anyway this is wtf numero 10 today. And I haven&amp;#8217;t had these moments in the last couple of weeks, using castle and all, so I was feeling a little nostalgic about the whole thing.&lt;/p&gt;
</description>
        <published>2006-10-14 17:59:21 +0200</published>
        <link>http://flanders.co.nz/2006/10/14/redirecting-based-on-a-role-in-the-loggedin-event-of/</link>
      </item>
      
    
      
      <item>
        <title>Some news on nblogr</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.codeplex.com/Wiki/View.aspx?ProjectName=Nblogr&quot;&gt;NBlogr&lt;/a&gt; isn&amp;#8217;t dead.. It just underwent a transformation for the better.&lt;/p&gt;

&lt;p&gt;I also changed the title of the application from &lt;strong&gt;NBlogr - An atlas blogging engine&lt;/strong&gt; to &lt;strong&gt;NBlogr - a blogging engine built on simplicity&lt;br/&gt;
&lt;/strong&gt;The reason for this change is the fact that it is currently built using jquery as javascript library.  I will look at atlas again when it releases.&lt;/p&gt;

&lt;p&gt;I moved &lt;a href=&quot;http://www.nblogr.com&quot;&gt;NBlogr&lt;/a&gt; to run on &lt;a href=&quot;http://www.castleproject.org/&quot;&gt;castle&lt;/a&gt;.  During the course of the next week I&amp;#8217;ll complete my posts on how to do Castle development with &lt;a href=&quot;http://www.base4.net/&quot;&gt;base4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you&amp;#8217;re interested in how it looks or you want a preview the &lt;a href=&quot;http://www.codeplex.com/SourceControl/ListDownloadableCommits.aspx?ProjectName=Nblogr&quot;&gt;last source in the repository builds&lt;/a&gt; and you should be able to run it in the development server of visual studio&lt;/p&gt;

&lt;p&gt;I had a chat with &lt;a href=&quot;http://blog.bluecog.co.nz/&quot;&gt;JD&lt;/a&gt; a while ago and he asked me about plugins. At that time I knew already I wanted to provide something for users to be able to add plugin&amp;#8217;s to the database.  But I hadn&amp;#8217;t really given it much thought on how I would do that.&lt;/p&gt;

&lt;p&gt;My reasoning on this subject is : &lt;br/&gt;
I want users to be able to add a plug in at runtime. Plugin&amp;#8217;s for a blog are lately both server related client side. So I will create a plugin factory with a couple of providers like a google video provider, grouper video, flickr, bookmark services.  And you can write a plugin using javascript and ironpython code. The engine will evaluate that code at runtime and there has been no application restarting etc. If somebody has a better plan for doing a plugin infrastructure please let me know I haven&amp;#8217;t done any of the ground work for this yet but create a schema in base4 so now would be the best time to stop me from making big mistakes.&lt;/p&gt;

&lt;p&gt;Another improvement is the fact that when nblogr reaches release it will come with a couple of templates for you to chose from. I&amp;#8217;ll try to include one that is built on the css scheme of csszengarden that way you&amp;#8217;ll have an infinite repository of css to make your blog look differently instantaneously.&lt;/p&gt;

&lt;p&gt;The next improvement is that a user is now able to mimic wildcard requests and nblogr will handle those. So there is no need for appending aspx to pages for rewriting (routing it is called in monorail)  You get the choice in the config file to have your webserver handle the wild card mapping or nblogr. When you choose for nblogr nblogr will need write access to 2 folders in your website and create a shadow folder structure to represent the rewrite tree structure. There is weaker point here and that is that the &lt;strong&gt;first&lt;/strong&gt; default document in IIS must be set to Default.aspx If you can map an extension to aspnet_isapi.dll at your webserver then you can also have the urls rewritten using a branded extension.&lt;/p&gt;

&lt;p&gt;I think that this are the 3 major changes for the moment to the engine.  This did set me back for the next release with a couple of weeks but in the end the final release can be done much more quickly than it would have been possible using the code I had before.&lt;/p&gt;

&lt;p&gt;I also promise that this time things mostly stay as they are. There will be no more experimenting but just getting Nblogr to a proper release state and shipped.&lt;/p&gt;
</description>
        <published>2006-10-14 08:12:26 +0200</published>
        <link>http://flanders.co.nz/2006/10/14/some-news-on-nblogr/</link>
      </item>
      
    
      
      <item>
        <title>Hosting Base4 inside your web application</title>
        <description>&lt;p&gt;Following up on the post of yesterday.  To use base4 with asp.net often you do not have the possibility to host &lt;a href=&quot;http://wwww.base4.net&quot;&gt;base4&lt;/a&gt; as a windows service. But to host base4 in the same appdomain as you website isn&amp;#8217;t all that hard.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ll just share my code and how to use it. The way to go is to create a class that extends the HttpApplicatin and handle the application start and end events.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ll also post the code i have to integrate this with castle.&lt;/p&gt;

&lt;p&gt;This is my base HttpApplication, every web app inherits of this one.&lt;/p&gt;

&lt;p&gt;using System;&lt;/p&gt;

&lt;p&gt;using System.Collections.Generic;&lt;/p&gt;

&lt;p&gt;using System.Text;&lt;/p&gt;

&lt;p&gt;using System.Web;&lt;/p&gt;

&lt;p&gt;using Base4.Storage.Server;&lt;/p&gt;

&lt;p&gt;using System.Text.RegularExpressions;&lt;/p&gt;

&lt;p&gt;using System.Reflection;&lt;/p&gt;

&lt;p&gt;using System.Data.SqlClient;&lt;/p&gt;

&lt;p&gt;using System.Configuration;&lt;/p&gt;

&lt;p&gt;using Base4.Storage;&lt;/p&gt;

&lt;p&gt;using System.Xml;&lt;/p&gt;

&lt;p&gt;using System.IO;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;namespace Flanders.Library.Base4Integration&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;    public class Base4HttpApplication : HttpApplication&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        ServerConfiguration config;&lt;/p&gt;

&lt;p&gt;        IServerProxy proxy;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public Base4HttpApplication()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public virtual void Application_Start(object sender, EventArgs e)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            //Build the base4 server configuration from the connection strings settings in the web.config&lt;/p&gt;

&lt;p&gt;            config = new ServerConfiguration();&lt;/p&gt;

&lt;p&gt;            config.Store.Root = Server.MapPath(&amp;#8220;~/&amp;#8221;);&lt;/p&gt;

&lt;p&gt;            config.Store.Root = config.Store.Root.EndsWith(&amp;#8220;&amp;#34;) ? config.Store.Root&lt;/p&gt;

&lt;p&gt;                + &amp;#8220;App_Data\Base4&amp;#8221; : config.Store.Root + &amp;#8220;\App_Data\Base4&amp;#8221;;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //Set the application name of the store. In my case I define a title for my application in a&lt;/p&gt;

&lt;p&gt;            //solution info file and use that as my app name&lt;/p&gt;

&lt;p&gt;            //For this to work you will need to name your database the same as your applicationname&lt;/p&gt;

&lt;p&gt;            if (Application[&amp;#8220;AppName&amp;#8221;] == null)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                Assembly assembly = Assembly.GetCallingAssembly();&lt;/p&gt;

&lt;p&gt;                Application[&amp;#8220;AppName&amp;#8221;] =&lt;/p&gt;

&lt;p&gt;                    (AssemblyTitleAttribute.GetCustomAttribute(assembly, typeof(AssemblyTitleAttribute)) as AssemblyTitleAttribute).Title;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            config.Store.Name = Application[&amp;#8220;AppName&amp;#8221;].ToString();&lt;/p&gt;

&lt;p&gt;            config.Store.Provider = &amp;#8220;SQL2005&amp;#8221;;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //Set the port for base4 to listen on.  This is defined in the web.config app settings&lt;/p&gt;

&lt;p&gt;            if (Application[&amp;#8220;AppPort&amp;#8221;] == null)&lt;/p&gt;

&lt;p&gt;                Application[&amp;#8220;AppPort&amp;#8221;] = string.IsNullOrEmpty(ConfigurationManager.AppSettings[&amp;#8220;Base4.Port&amp;#8221;]) ? 8809 :&lt;/p&gt;

&lt;p&gt;                    int.Parse(ConfigurationManager.AppSettings[&amp;#8220;Base4.Port&amp;#8221;]);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            config.Store.Port = (int)Application[&amp;#8220;AppPort&amp;#8221;];&lt;/p&gt;

&lt;p&gt;            //We are hosting base4 in the same process as the website. so localhost will do :)&lt;/p&gt;

&lt;p&gt;            config.Store.MachineName = &amp;#8220;localhost&amp;#8221;;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //Set the connection string for the base4 store&lt;/p&gt;

&lt;p&gt;            string connectionStringName = ConfigurationManager.AppSettings[&amp;#8220;DefaultConnection&amp;#8221;];&lt;/p&gt;

&lt;p&gt;            if (string.IsNullOrEmpty(connectionStringName) &amp;amp;&amp;amp; ConfigurationManager.ConnectionStrings != null&lt;/p&gt;

&lt;p&gt;                &amp;amp;&amp;amp; ConfigurationManager.ConnectionStrings.Count &gt; 0)&lt;/p&gt;

&lt;p&gt;                connectionStringName = ConfigurationManager.ConnectionStrings[0].Name;           &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            config.Store.ConnectionString = string.IsNullOrEmpty(connectionStringName) ?&lt;/p&gt;

&lt;p&gt;                ConfigurationManager.AppSettings[&amp;#8220;Store.ConnectionString&amp;#8221;] :&lt;/p&gt;

&lt;p&gt;                ConfigurationManager.ConnectionStrings[connectionStringName].ConnectionString;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //Set the master connection string&lt;/p&gt;

&lt;p&gt;            SqlConnectionStringBuilder connStrBuilder = new SqlConnectionStringBuilder(config.Store.ConnectionString);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            connStrBuilder.InitialCatalog = &amp;#8220;master&amp;#8221;;&lt;/p&gt;

&lt;p&gt;            config.MasterConnectionString = connStrBuilder.ToString();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //Check if we have a directory to store the files generated by base4&lt;/p&gt;

&lt;p&gt;            if(!Directory.Exists(config.Store.Root))&lt;/p&gt;

&lt;p&gt;                Directory.CreateDirectory(config.Store.Root);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //Actually start the server&lt;/p&gt;

&lt;p&gt;            proxy = ServerFactory.StartServer(config, false);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //Set the context for base4&lt;/p&gt;

&lt;p&gt;            string base4Context = string.Format(&amp;#8220;tcp://Server:@localhost:{0}/{1}&amp;#8221;, Application[&amp;#8220;AppPort&amp;#8221;], Application[&amp;#8220;AppName&amp;#8221;]);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            Application[&amp;#8220;Base4Context&amp;#8221;] = base4Context;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //Set the default storage context for base4&lt;/p&gt;

&lt;p&gt;            StorageContext.SetDefault(base4Context);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public virtual void Application_End(object sender, EventArgs e)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            proxy.Stop();&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Now to integrate this with monorail then this is you application class in your website :&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;using System.Web;&lt;/p&gt;

&lt;p&gt;using Castle.Windsor;&lt;/p&gt;

&lt;p&gt;using Base4.Storage;&lt;/p&gt;

&lt;p&gt;using System.Configuration;&lt;/p&gt;

&lt;p&gt;using Flanders.Library.Base4Integration;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;namespace NBlogr.Presentation&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;    public class ASPGlobal : Base4HttpApplication, IContainerAccessor&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        private static MonoRailContainer container;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public override void Application_Start(object sender, System.EventArgs e)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            base.Application_Start(sender, e);&lt;/p&gt;

&lt;p&gt;            container = new MonoRailContainer();&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public override void Application_End(object sender, System.EventArgs e)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            container.Dispose();&lt;/p&gt;

&lt;p&gt;            base.Application_End(sender, e);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        #region IContainerAccessor Members&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public IWindsorContainer Container&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get { return container; }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        #endregion&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;The global.asax should only contain one line :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;span class=&quot;asp&quot;&amp;gt;&amp;lt;%@ Application Inherits=&quot;NBlogr.Presentation.ASPGlobal&quot; Language=&quot;C#&quot; %&amp;gt;&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
        <published>2006-10-12 05:42:20 +0200</published>
        <link>http://flanders.co.nz/2006/10/12/hosting-base4-inside-your-web-application/</link>
      </item>
      
    
      
      <item>
        <title>More on logging</title>
        <description>&lt;p&gt;Earlier this week, about the same time that I was playing with health monitoring. I found out after a while that log4net isn&amp;#8217;t working on Vista RC1.&lt;/p&gt;

&lt;p&gt;Now I don&amp;#8217;t know about you but log4net seemed like the obvious choice for logging for me.  Now I was forced to have a look around what else is there. And castle supports also &lt;a href=&quot;http://www.nlog-project.org/&quot;&gt;nlog&lt;/a&gt;. I took a closer look at nlog and I like it a lot. It has much better integration with visual studio 2005 than log4net has.&lt;/p&gt;

&lt;p&gt;The configuration was much easier. I wrote a &amp;#8220;log provider&amp;#8221; (log target in the nlog dictionary) for base4 in about 15 minutes.  Ah yes extensibility is great for this product.&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s open source but it is a really tight project.  Maybe you too should investigate :)&lt;/p&gt;
</description>
        <published>2006-09-28 14:10:58 +0200</published>
        <link>http://flanders.co.nz/2006/09/28/more-on-logging/</link>
      </item>
      
    
      
      <item>
        <title>Custom Health monitoring for Asp.NET using Base4</title>
        <description>&lt;p&gt;It&amp;#8217;s been pretty quiet on my blog the last couple of days. But I had something cooking :)&lt;/p&gt;

&lt;p&gt;I think logging is a pretty important part of an application. I like to know what&amp;#8217;s going on when for errors etc.&lt;/p&gt;

&lt;p&gt;Asp.NET has a health monitoring service that does just that. With a couple of lines in the web.config you&amp;#8217;re good to go.&lt;/p&gt;

&lt;p&gt;I use &lt;a href=&quot;http://www.base4.net/&quot;&gt;base4&lt;/a&gt; for my dataaccess and i want do do all my data access through base4. From the asp.net services I use Membership, roleManager, profiles and health monitoring.&lt;/p&gt;

&lt;p&gt;This week I ported healthmonitoring, membership and rolemanager to Base4. I&amp;#8217;ll post the health monitoring provider and when I have also completed the profile provider I&amp;#8217;ll post a dll that contains all the providers and the Base4 schema&amp;#8217;s if somebody is interested.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;using System;&lt;/p&gt;

&lt;p&gt;using System.Collections.Generic;&lt;/p&gt;

&lt;p&gt;using System.Text;&lt;/p&gt;

&lt;p&gt;using System.Collections.Specialized;&lt;/p&gt;

&lt;p&gt;using Flanders.Library.Provider;&lt;/p&gt;

&lt;p&gt;using System.Web.Management;&lt;/p&gt;

&lt;p&gt;using System.Globalization;&lt;/p&gt;

&lt;p&gt;using Seshat.Data;&lt;/p&gt;

&lt;p&gt;using System.Collections;&lt;/p&gt;

&lt;p&gt;using System.Threading;&lt;/p&gt;

&lt;p&gt;using System.Configuration;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;namespace Flanders.Library.Base4Integration&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;    public class Base4WebEventProvider : BufferedWebEventProvider&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        const int SQL_MAX_NTEXT_SIZE = 1073741823;&lt;/p&gt;

&lt;p&gt;        const int NO_LIMIT = -1;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        int _maxEventDetailsLength = NO_LIMIT;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        DateTime &lt;em&gt;retryDate = DateTime.MinValue; // Won&amp;#8217;t try sending unless DateTime.UtcNow is &gt; &lt;/em&gt;retryDate&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public Base4WebEventProvider() { }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public override void Initialize(string name, NameValueCollection config)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            string temp = null;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            SecUtility.GetAndRemoveStringAttribute(config, &amp;#8220;connectionStringName&amp;#8221;, name, ref temp);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            SecUtility.GetAndRemovePositiveOrInfiniteAttribute(config, &amp;#8220;maxEventDetailsLength&amp;#8221;, name, ref _maxEventDetailsLength);&lt;/p&gt;

&lt;p&gt;            if (_maxEventDetailsLength == SecUtility.Infinite)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                _maxEventDetailsLength = NO_LIMIT;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            else if (_maxEventDetailsLength &gt; SQL_MAX_NTEXT_SIZE)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                throw new ConfigurationErrorsException(SR.GetString(SR.Invalid_max_event_details_length, name, _maxEventDetailsLength.ToString(CultureInfo.CurrentCulture)));&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //SecUtility.GetAndRemovePositiveAttribute(config, &amp;#8220;commandTimeout&amp;#8221;, name, ref _commandTimeout);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            base.Initialize(name, config);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        void FillParams(ApplicationEvent appEvent, WebBaseEvent eventRaised)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            Exception exception = null;&lt;/p&gt;

&lt;p&gt;            WebRequestInformation reqInfo = null;&lt;/p&gt;

&lt;p&gt;            string details = null;&lt;/p&gt;

&lt;p&gt;            WebApplicationInformation appInfo = WebBaseEvent.ApplicationInformation;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            appEvent.Id = eventRaised.EventID;&lt;/p&gt;

&lt;p&gt;            appEvent.EventId = eventRaised.EventID.ToString(&amp;#8220;N&amp;#8221;, CultureInfo.InstalledUICulture) ;&lt;/p&gt;

&lt;p&gt;            appEvent.EventTimeUtc = eventRaised.EventTimeUtc;&lt;/p&gt;

&lt;p&gt;            appEvent.EventTime = eventRaised.EventTime;&lt;/p&gt;

&lt;p&gt;            appEvent.EventType = eventRaised.GetType().ToString();&lt;/p&gt;

&lt;p&gt;            appEvent.EventSequence = eventRaised.EventSequence;&lt;/p&gt;

&lt;p&gt;            appEvent.EventOccurence = eventRaised.EventOccurrence;&lt;/p&gt;

&lt;p&gt;            appEvent.EventCode = eventRaised.EventCode;&lt;/p&gt;

&lt;p&gt;            appEvent.EventDetailCode = eventRaised.EventDetailCode;&lt;/p&gt;

&lt;p&gt;            appEvent.Message = eventRaised.Message;&lt;/p&gt;

&lt;p&gt;            appEvent.ApplicationPath = appInfo.ApplicationPath;&lt;/p&gt;

&lt;p&gt;            appEvent.ApplicationVirtualPath = appInfo.ApplicationVirtualPath;&lt;/p&gt;

&lt;p&gt;            appEvent.MachineName = appInfo.MachineName;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            // @RequestUrl&lt;/p&gt;

&lt;p&gt;            if (eventRaised is WebRequestEvent)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                reqInfo = ((WebRequestEvent)eventRaised).RequestInformation;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            else if (eventRaised is WebRequestErrorEvent)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                reqInfo = ((WebRequestErrorEvent)eventRaised).RequestInformation;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            else if (eventRaised is WebErrorEvent)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                reqInfo = ((WebErrorEvent)eventRaised).RequestInformation;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            else if (eventRaised is WebAuditEvent)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                reqInfo = ((WebAuditEvent)eventRaised).RequestInformation;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            appEvent.RequestUrl = Convert.ToString((reqInfo != null) ? reqInfo.RequestUrl : Convert.DBNull);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            // @ExceptionType&lt;/p&gt;

&lt;p&gt;            if (eventRaised is WebBaseErrorEvent)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                exception = ((WebBaseErrorEvent)eventRaised).ErrorException;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            appEvent.ExceptionType = Convert.ToString((exception != null) ? exception.GetType().ToString() : Convert.DBNull);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            // @Details&lt;/p&gt;

&lt;p&gt;            details = eventRaised.ToString();&lt;/p&gt;

&lt;p&gt;            if (_maxEventDetailsLength != NO_LIMIT &amp;amp;&amp;amp;&lt;/p&gt;

&lt;p&gt;                details.Length &gt; _maxEventDetailsLength)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                details = details.Substring(0, _maxEventDetailsLength);&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            appEvent.Details= details;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        void WriteToBase4(ICollection events, int eventsDiscardedByBuffer, DateTime lastNotificationUtc)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            // We don&amp;#8217;t want to send any more events until we&amp;#8217;ve waited until the _retryDate (which defaults to minValue)&lt;/p&gt;

&lt;p&gt;            if (_retryDate &gt; DateTime.UtcNow)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                return;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            try&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                ApplicationEvent appEvent = new ApplicationEvent();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;                try&lt;/p&gt;

&lt;p&gt;                {&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;                    if (eventsDiscardedByBuffer != 0)&lt;/p&gt;

&lt;p&gt;                    {&lt;/p&gt;

&lt;p&gt;                        WebBaseEvent infoEvent = new Base4BaseEvent(&lt;/p&gt;

&lt;p&gt;                            SR.GetString(SR.Sql_webevent_provider_events_dropped,&lt;/p&gt;

&lt;p&gt;                                eventsDiscardedByBuffer.ToString(CultureInfo.InstalledUICulture),&lt;/p&gt;

&lt;p&gt;                                lastNotificationUtc.ToString(&amp;#8220;r&amp;#8221;, CultureInfo.InstalledUICulture)),&lt;/p&gt;

&lt;p&gt;                                null,&lt;/p&gt;

&lt;p&gt;                                WebEventCodes.WebEventProviderInformation,&lt;/p&gt;

&lt;p&gt;                                WebEventCodes.SqlProviderEventsDropped);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;                        FillParams(appEvent, infoEvent);&lt;/p&gt;

&lt;p&gt;                        appEvent.Save();&lt;/p&gt;

&lt;p&gt;                    }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;                    foreach (WebBaseEvent eventRaised in events)&lt;/p&gt;

&lt;p&gt;                    {&lt;/p&gt;

&lt;p&gt;                        FillParams(appEvent, eventRaised);&lt;/p&gt;

&lt;p&gt;                        appEvent.Save();&lt;/p&gt;

&lt;p&gt;                    }&lt;/p&gt;

&lt;p&gt;                    EventProcessingComplete(events);&lt;/p&gt;

&lt;p&gt;                }&lt;/p&gt;

&lt;p&gt;                catch&lt;/p&gt;

&lt;p&gt;                {&lt;/p&gt;

&lt;p&gt;                    // Ignore all errors.&lt;/p&gt;

&lt;p&gt;                }&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            catch&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                // For any failure, we will wait at least 30 seconds or _commandTimeout before trying again&lt;/p&gt;

&lt;p&gt;                double timeout = 30;&lt;/p&gt;

&lt;p&gt;                _retryDate = DateTime.UtcNow.AddSeconds(timeout);&lt;/p&gt;

&lt;p&gt;                throw;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public override void ProcessEventFlush(WebEventBufferFlushInfo flushInfo)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            // Remove Debug.Trace from sample Debug.Trace(&amp;#8220;SqlWebEventProvider&amp;#8221;, &amp;#8220;EventBufferFlush called: &amp;#8221; +&lt;/p&gt;

&lt;p&gt;            WriteToBase4(flushInfo.Events, flushInfo.EventsDiscardedSinceLastNotification,&lt;/p&gt;

&lt;p&gt;                flushInfo.LastNotificationUtc);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;        public override void ProcessEvent(WebBaseEvent eventRaised)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            if (UseBuffering)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                base.ProcessEvent(eventRaised);&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            else&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                 WriteToBase4(new Base4BaseEventCollection(eventRaised), 0, new DateTime(0));&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected virtual void EventProcessingComplete(ICollection raisedEvents)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public override void Shutdown()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            try&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                Flush();&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            finally&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                base.Shutdown();&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;    public class Base4BaseEvent : WebBaseEvent&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public Base4BaseEvent(string message, object eventSource, int eventCode) : base(message, eventSource, eventCode) { }&lt;/p&gt;

&lt;p&gt;        public Base4BaseEvent(string message, Object eventSource, int eventCode, int eventDetailCode)&lt;/p&gt;

&lt;p&gt;            : base(message, eventSource, eventCode, eventDetailCode)&lt;/p&gt;

&lt;p&gt;        { }&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;    public sealed class Base4BaseEventCollection : ReadOnlyCollectionBase&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        public Base4BaseEventCollection(ICollection events)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            if (events == null)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                throw new ArgumentNullException(&amp;#8220;events&amp;#8221;);&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            foreach (WebBaseEvent eventRaised in events)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                InnerList.Add(eventRaised);&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        internal Base4BaseEventCollection(WebBaseEvent eventRaised)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            if (eventRaised == null)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                throw new ArgumentNullException(&amp;#8220;eventRaised&amp;#8221;);&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            InnerList.Add(eventRaised);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        // overloaded collection access methods&lt;/p&gt;

&lt;p&gt;        public WebBaseEvent this[int index]&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                return (WebBaseEvent)InnerList[index];&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public int IndexOf(WebBaseEvent value)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            return InnerList.IndexOf(value);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public bool Contains(WebBaseEvent value)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            return InnerList.Contains(value);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;
</description>
        <published>2006-09-27 13:17:19 +0200</published>
        <link>http://flanders.co.nz/2006/09/27/custom-health-monitoring-for-aspnet-using-base4/</link>
      </item>
      
    
      
      <item>
        <title>Base4 and Castle</title>
        <description>&lt;p&gt;Something I found very useful to use in &lt;a href=&quot;http://www.castleproject.org/&quot;&gt;castle&lt;/a&gt; is &lt;a href=&quot;http://www.base4.net/&quot;&gt;Base4&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;And as it so happens &lt;a href=&quot;http://www.fastchicken.co.nz/blog/&quot;&gt;Nic Wise&lt;/a&gt; just asked me if you could use the 2 together. The answer is yes you can.&lt;/p&gt;

&lt;p&gt;I know they support &lt;a href=&quot;http://www.nhibernate.org/&quot;&gt;nhibernate&lt;/a&gt; but that is not really the same :)  &lt;a href=&quot;http://www.base4.net/&quot;&gt;Base4&lt;/a&gt; just goes that extra mile.&lt;/p&gt;

&lt;p&gt;Since data access is always the same. And the examples on the castle site use concrete implementations of data access objects. I thought I really don&amp;#8217;t need a facility for the moment and can just use base4.&lt;/p&gt;

&lt;p&gt;Anyway here is the class I use to do all my data access. it&amp;#8217;s an abstract class that has concrete implementations so that I can extend the functionality if I need to.&lt;/p&gt;

&lt;p&gt;The interface for the class (the colors look different on my screen I swear  the gray bits should be some type of blue and the yellow also isn&amp;#8217;t quite right):&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;using System;&lt;/p&gt;

&lt;p&gt;namespace TimeSheets.Application.Contract.Data&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;    public interface IDataObject&lt;T&gt;&lt;/p&gt;

&lt;p&gt;    where T : class, Base4.Storage.IItem, new()&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        void Delete(T item);&lt;/p&gt;

&lt;p&gt;        Base4.Storage.IItemList&lt;T&gt; Find(string oPath, string sortExpression, int pageNumber, int pageSize, out int pageCount);&lt;/p&gt;

&lt;p&gt;        Base4.Storage.IItemList&lt;T&gt; Find(string oPath, string sortExpression);&lt;/p&gt;

&lt;p&gt;        Base4.Storage.IItemList&lt;T&gt; Find(string oPath);&lt;/p&gt;

&lt;p&gt;        Base4.Storage.IItemList&lt;T&gt; FindAll(string sortExpression, int pageNumber, int pageSize, out int pageCount);&lt;/p&gt;

&lt;p&gt;        Base4.Storage.IItemList&lt;T&gt; FindAll(string sortExpression);&lt;/p&gt;

&lt;p&gt;        Base4.Storage.IItemList&lt;T&gt; FindAll();&lt;/p&gt;

&lt;p&gt;        Base4.Storage.IItemList&lt;T&gt; FindById(Guid Id);&lt;/p&gt;

&lt;p&gt;        T GetById(Guid Id);&lt;/p&gt;

&lt;p&gt;        T GetOne(string oPath);&lt;/p&gt;

&lt;p&gt;        T Insert(T item);&lt;/p&gt;

&lt;p&gt;        string SortExpression { get; set; }&lt;/p&gt;

&lt;p&gt;        T Update(T item);&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;And this is the abstract class :&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;using System;&lt;/p&gt;

&lt;p&gt;using System.Collections.Generic;&lt;/p&gt;

&lt;p&gt;using System.Text;&lt;/p&gt;

&lt;p&gt;using Base4.Storage;&lt;/p&gt;

&lt;p&gt;using System.ComponentModel;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;namespace TimeSheets.Application.Base&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;    ///&lt;/p&gt;

&lt;p&gt;    /// A generic class that handles data access through Base4&lt;/p&gt;

&lt;p&gt;    ///&lt;/p&gt;

&lt;p&gt;    ///&lt;/p&gt;

&lt;p&gt;    public abstract class BaseDataObject&lt;T&gt; : Base.DataObject, Contract.Data.IDataObject&lt;T&gt; where T : class,IItem, new()&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        private string m_SortExpression;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Gets or sets the sort expression.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// The sort expression.&lt;/p&gt;

&lt;p&gt;        public virtual string SortExpression&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get { return m_SortExpression; }&lt;/p&gt;

&lt;p&gt;            set { m_SortExpression = value; }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Finds the specified in the object path.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// The Object path.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        public virtual IItemList&lt;T&gt; Find(string oPath)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            //set the default sort expression to none&lt;/p&gt;

&lt;p&gt;            this.m_SortExpression = string.Empty;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //Get my stuff&lt;/p&gt;

&lt;p&gt;            return StorageContext.Find&lt;T&gt;(initialiseObjectPath(new ObjectPath(oPath)));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Finds the specified Object path sorted by the provided sort expression.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// The Object path.&lt;/p&gt;

&lt;p&gt;        /// The sort expression.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        public virtual IItemList&lt;T&gt; Find(string oPath, string sortExpression)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            //Set the default sort expression&lt;/p&gt;

&lt;p&gt;            this.m_SortExpression = sortExpression;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //Get the data out&lt;/p&gt;

&lt;p&gt;            return StorageContext.Find&lt;T&gt;(initialiseObjectPath(new ObjectPath(oPath)));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Finds the specified Object path with server side paging.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// The Object path.&lt;/p&gt;

&lt;p&gt;        /// The sort expression.&lt;/p&gt;

&lt;p&gt;        /// The page number.&lt;/p&gt;

&lt;p&gt;        /// Size of the page.&lt;/p&gt;

&lt;p&gt;        /// The page count.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        public virtual IItemList&lt;T&gt; Find(string oPath, string sortExpression, int pageNumber, int pageSize, out int pageCount)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            //initialise the pagecount parameter&lt;/p&gt;

&lt;p&gt;            pageCount = 0;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //Set the pagecount parameter tot he actual value&lt;/p&gt;

&lt;p&gt;            pageCount = (int)Math.Ceiling(Convert.ToDouble(getCount() / pageSize));&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //if we got a sort expression do initialize with it please&lt;/p&gt;

&lt;p&gt;            if (!string.IsNullOrEmpty(sortExpression))&lt;/p&gt;

&lt;p&gt;                m_SortExpression = sortExpression;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //initialise the object pathe with the provide oPath parameter and initialise the order by&lt;/p&gt;

&lt;p&gt;            ObjectPath path = initialiseObjectPath(new ObjectPath(oPath));&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //Tell Base4 which page to retrieve&lt;/p&gt;

&lt;p&gt;            path.PageSize = pageSize;&lt;/p&gt;

&lt;p&gt;            path.PageNumber = pageNumber;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //Get the items&lt;/p&gt;

&lt;p&gt;            return StorageContext.Find&lt;T&gt;(path);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Finds all items.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        public virtual IItemList&lt;T&gt; FindAll()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            this.m_SortExpression = string.Empty;&lt;/p&gt;

&lt;p&gt;            return StorageContext.Find&lt;T&gt;(initialiseObjectPath());&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Finds all the items sorted.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// The sort expression.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        public virtual IItemList&lt;T&gt; FindAll(string sortExpression)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            this.m_SortExpression = sortExpression;&lt;/p&gt;

&lt;p&gt;            return StorageContext.Find&lt;T&gt;(initialiseObjectPath());&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Finds all.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// The sort expression.&lt;/p&gt;

&lt;p&gt;        /// The page number.&lt;/p&gt;

&lt;p&gt;        /// Size of the page.&lt;/p&gt;

&lt;p&gt;        /// The page count.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        public virtual IItemList&lt;T&gt; FindAll(string sortExpression, int pageNumber, int pageSize, out int pageCount)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            //initialise the pagecount parameter&lt;/p&gt;

&lt;p&gt;            pageCount = 0;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //Set the pagecount parameter tot he actual value&lt;/p&gt;

&lt;p&gt;            pageCount = (int)Math.Ceiling(Convert.ToDouble(getCount() / pageSize));&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //if we got a sort expression do initialize with it please&lt;/p&gt;

&lt;p&gt;            if (!string.IsNullOrEmpty(sortExpression))&lt;/p&gt;

&lt;p&gt;                m_SortExpression = sortExpression;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //initialise the object pathe with the provide oPath parameter and initialise the order by&lt;/p&gt;

&lt;p&gt;            ObjectPath path = initialiseObjectPath();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //Tell Base4 which page to retrieve&lt;/p&gt;

&lt;p&gt;            path.PageSize = pageSize;&lt;/p&gt;

&lt;p&gt;            path.PageNumber = pageNumber;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            //Get the items&lt;/p&gt;

&lt;p&gt;            return StorageContext.Find&lt;T&gt;(path);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        //internal method that gives the rowcount of all items.&lt;/p&gt;

&lt;p&gt;        protected int getCount()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            return StorageContext.FindAll&lt;T&gt;().Count;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        protected ObjectPath initialiseObjectPath()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            ObjectPath path = new ObjectPath();&lt;/p&gt;

&lt;p&gt;            return initialiseObjectPath(path);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Initialises the object path.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// The path.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        protected ObjectPath initialiseObjectPath(ObjectPath path)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            //Do we have a sort expression&lt;/p&gt;

&lt;p&gt;            if (!string.IsNullOrEmpty(m_SortExpression) &amp;amp;&amp;amp; m_SortExpression.Trim().Length &gt; 0)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                //Give me all the sort parameters&lt;/p&gt;

&lt;p&gt;                string[] sortParams = m_SortExpression.Split(&amp;#8220;,&amp;#8221;.ToCharArray());&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;                //Now go work out their object path&lt;/p&gt;

&lt;p&gt;                foreach (string s in sortParams)&lt;/p&gt;

&lt;p&gt;                {&lt;/p&gt;

&lt;p&gt;                    //Work out the direction&lt;/p&gt;

&lt;p&gt;                    OrderByDirection direction = s.IndexOf(&amp;#8220;DESC&amp;#8221;) &gt; -1 ? OrderByDirection.Descending : OrderByDirection.Ascending;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;                    //Work out the column&lt;/p&gt;

&lt;p&gt;                    string orderby = s.Substring(0, s.IndexOf(&amp;#8220;DESC&amp;#8221;) &gt; -1 ? s.IndexOf(&amp;#8220;DESC&amp;#8221;) : s.Length);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;                    path.AddOrderBy(orderby, direction);&lt;/p&gt;

&lt;p&gt;                }&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            return path;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Gets the Item as an item through a specified Object path.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// The Object path.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        public virtual T GetOne(string oPath)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            return StorageContext.FindOne&lt;T&gt;(new ObjectPath(oPath));&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Finds the item by id and returns a list.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// The id.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        public virtual IItemList&lt;T&gt; FindById(Guid Id)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            IItemList&lt;T&gt; itemList = StorageContext.Find&lt;T&gt;(&amp;#8220;Id=&amp;#8217;{0}&amp;#8217;&amp;#8221;, Id.ToString());&lt;/p&gt;

&lt;p&gt;            return itemList.Count &gt; 0 ? itemList : new ItemList&lt;T&gt;() as IItemList&lt;T&gt;;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Gets the item by id as an item.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// The id.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        public virtual T GetById(Guid Id)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            IItemList&lt;T&gt; itemList = FindById(Id);&lt;/p&gt;

&lt;p&gt;            return itemList.Count &gt; 0 ? itemList[0] : new T();&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Inserts the specified item.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// The item.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        public virtual T Insert(T item)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            ((IItem)item).Save();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            return item;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Updates the specified item.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// The item.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        public virtual T Update(T item)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            ((IItem)item).Save();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            return item;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// Deletes the specified item.&lt;/p&gt;

&lt;p&gt;        ///&lt;/p&gt;

&lt;p&gt;        /// The item.&lt;/p&gt;

&lt;p&gt;        public virtual void Delete(T item)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            ((IItem)item).Delete();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;This is the concrete implementation:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;using Fogcreek.FogbugzEx;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;namespace TimeSheets.Application.Dao&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;    public class TimesheetDao : Base.BaseDataObject&lt;Timesheet&gt;&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;
</description>
        <published>2006-09-23 10:08:32 +0200</published>
        <link>http://flanders.co.nz/2006/09/23/base4-and-castle/</link>
      </item>
      
    
      
      <item>
        <title>A bit further down the Castle track</title>
        <description>&lt;p&gt;I&amp;#8217;ve been playing with &lt;a href=&quot;http://www.castleproject.org/&quot;&gt;castle&lt;/a&gt; all day yesterday and I can say the more I work with it the more I like it and start to see the full power of the framework.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.flanders.co.nz/Blog/2006/09/20/AmITooLate.aspx&quot;&gt;My previous post&lt;/a&gt; was more about my frustrations when using the &lt;a href=&quot;http://www.asp.net&quot;&gt;webforms model&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One of castle&amp;#8217;s strengths is the &lt;a href=&quot;http://en.wikipedia.org/wiki/Inversion_of_control&quot;&gt;Inversion of Control pattern&lt;/a&gt;, an introduction to IoC can be found on the Joy of code &lt;a href=&quot;http://www.thejoyofcode.com/The_Awesome_Power_of_IoC.aspx#comments&quot;&gt;partI&lt;/a&gt;, &lt;a href=&quot;http://www.thejoyofcode.com/The_Awesome_Power_of_IoC_Part_II.aspx#comments&quot;&gt;partII&lt;/a&gt;.  In castle they apply it via the &lt;a href=&quot;http://www.castleproject.org/index.php/Windsor_Container&quot;&gt;windsor container&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An introduction to castle can be found on the codeproject : &lt;br/&gt;
&lt;a href=&quot;http://www.codeproject.com/cs/design/introducingcastle.asp&quot;&gt;Introducing castle part I&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://www.codeproject.com/cs/design/introducingcastleii.asp&quot;&gt;Introducing castle part II&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you&amp;#8217;re creating a website that has not a lot of interaction or a very complex interface you probably won&amp;#8217;t benefit too much from castle. However if you know your project will be growing a lot or the interface is becoming quite complex then you&amp;#8217;re probably better of using castle.&lt;/p&gt;

&lt;p&gt;Asp.NET gives you instant speed for development but this slows down as the project becomes larger and your pages more complex it loses it&amp;#8217;s power and attraction, at least in my case.  If you have ever spent a couple of hours on a site figuring out why something doesn&amp;#8217;t have a value that should have one etc. you&amp;#8217;ll understand what I&amp;#8217;m talking about probably.&lt;/p&gt;

&lt;p&gt;Castle on the other hand starts to really shine the more complex you&amp;#8217;re application gets.  You define something once and you can re-use it in your whole application.  This is nice it means I can define a master layout, have a standard layout render in that master so I have a page :)&lt;/p&gt;

&lt;p&gt;If you then add a list to that page with a detail you&amp;#8217;ll quickly see that you would be able to call that listview over and over again from anywhere.&lt;br/&gt;
Yes, I see the power of castle. The question is do you ?&lt;/p&gt;

&lt;p&gt;Tomorrow I&amp;#8217;ll start a series on how to create a master detail using castle if somebody is interested. One that walks you through all the steps involved because I had a hard time figuring some stuff out. Not too hard if you consider that it took me about 1 week to get started with asp.net and about 2 weeks to get started with the atlas library. I have a written a timesheet application in  a couple of hours&lt;/p&gt;
</description>
        <published>2006-09-23 09:08:42 +0200</published>
        <link>http://flanders.co.nz/2006/09/23/a-bit-further-down-the-castle-track/</link>
      </item>
      
    
      
      <item>
        <title>Am I too late ?</title>
        <description>&lt;p&gt;Yesterday I had a discussion with &lt;a href=&quot;http://www.base4.net/Blog.aspx&quot;&gt;Alex&lt;/a&gt; about asp.NET where I vented some of the frustrations I have building a CRM application on one form with multiple user controls that have enough functionality in them that other people would create separate pages for it.&lt;/p&gt;

&lt;p&gt;I don&amp;#8217;t like the fact that you loose information about something you&amp;#8217;re working on because you need to change a small piece of a bigger whole.&lt;/p&gt;

&lt;p&gt;Anyway my problem is that to do something that is more complex than just simply displaying one form on a page asp.NET gets pretty complicated. Events are firing all over the place. I have to take viewstate into account. (I turned viewsate off because it was about 50K half way through my app.) And then it became even more difficult to get stuff to respond the way I want them to respond.&lt;/p&gt;

&lt;p&gt;All in all it takes a really long time before I get something done properly. Where all it is actually doing is rendering small portions html out to the browser.&lt;/p&gt;

&lt;p&gt;I have also been discussing with Alex on how to create something that takes a view definition and merges it with base4 domain objects to get to a view.&lt;/p&gt;

&lt;p&gt;Well enter the &lt;a href=&quot;http://www.castleproject.org/&quot;&gt;castle project&lt;/a&gt;. I looked at it before but never really saw the point. Yesterday I got down and dirty with it and let me tell you I DO see the point now.&lt;/p&gt;

&lt;p&gt;The way they built their framework resembles very closely how I was going to build ours.&lt;/p&gt;

&lt;p&gt;It provides a more natural way of creating webpages in my mind than trying to force a winform programming model into a stateless model. Not to mention the speed in which you get things done.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.thejoyofcode.com/The_Awesome_Power_of_IoC.aspx&quot;&gt;I&amp;#8217;m not the only one who joins the party this late&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-09-20 08:49:40 +0200</published>
        <link>http://flanders.co.nz/2006/09/20/am-i-too-late/</link>
      </item>
      
    
      
      <item>
        <title>Underwear goes inside the pants</title>
        <description>&lt;p&gt;On myspace there is a page dedicated to a song &lt;a href=&quot;http://profile.myspace.com/index.cfm?fuseaction=user.viewprofile&amp;amp;friendID=74874292&quot;&gt;Underwear goes inside the pants by Lazy Boy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I got to this page via the blog of a friend of mine,&lt;a href=&quot;http://blog.coolz0r.com/2006/09/18/underwear-goes-inside-the-pants/&quot;&gt;Miel Van Opstal&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;It&amp;#8217;s worth a listen definitely. An excerpt of the lyrics would be:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;There are homeless people everywhere.&lt;br/&gt;
This homeless guy asked me for money the other day.&lt;br/&gt;
I was about to give it to him and then I thought he was going to use it on drugs or alcohol.&lt;br/&gt;
And then I thought, that’s what I’m going to use it on.&lt;br/&gt;
Why am I judging this poor bastard.&lt;br/&gt;
People love to judge homeless guys. Like if you give them money they’re just going to waste it.&lt;br/&gt;
Well, he lives in a box, what do you want him to do? Save it up and buy a wall unit?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enjoy.&lt;/p&gt;
</description>
        <published>2006-09-17 12:56:10 +0200</published>
        <link>http://flanders.co.nz/2006/09/17/underwear-goes-inside-the-pants/</link>
      </item>
      
    
      
      <item>
        <title>Open source project management</title>
        <description>&lt;p&gt;Yesterday I got to meet an &lt;a href=&quot;http://futureneutral.blogspot.com/&quot;&gt;Argentinian guy&lt;/a&gt; who joined the &lt;a href=&quot;http://www.nblogr.com&quot;&gt;NBlogr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;He showed me a couple of really cool sites that I thought would be a good idea to share.&lt;/p&gt;

&lt;p&gt;An open-source resource oriented project management system : &lt;a href=&quot;http://www.openworkbench.org/&quot;&gt;Open Workbench&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An open-source search engine (finds open source programs built on Lucence) : &lt;a href=&quot;http://www.krugle.com/&quot;&gt;Krugle&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;And last but not least an article on the codeproject :&lt;/p&gt;

&lt;p&gt;This article describes a &amp;#8220;script engine&amp;#8221; for the C# language. Here are some of the key features of the presented scripting system:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Based on the full featured C#.&lt;/li&gt;
&lt;li&gt;Full access to CLR and CTS.&lt;/li&gt;
&lt;li&gt;Can be run with any version of CLR (.NET 1.1/2.0), even potentially with future releases.&lt;/li&gt;
&lt;li&gt;Possibility of extending the functionality of any CLR application with &amp;#8220;scripting&amp;#8221;, by hosting the script engine in this application.&lt;/li&gt;
&lt;li&gt;Integration with common IDEs and debuggers.&lt;/li&gt;
&lt;li&gt;Integration with OS.&lt;/li&gt;
&lt;li&gt;Availability of comprehensive documentation (local and online Help, tutorials, samples&amp;#8230;).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;a href=&quot;http://www.codeproject.com/csharp/cs-script_for_cp.asp&quot;&gt;http://www.codeproject.com/csharp/cs-script_for_cp&amp;#8230;&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-09-16 11:43:44 +0200</published>
        <link>http://flanders.co.nz/2006/09/16/open-source-project-management/</link>
      </item>
      
    
      
      <item>
        <title>Adding a dynamic language to the toolbelt</title>
        <description>&lt;p&gt;It may or may not be a surprise to people that read my blog but I do web development and really like it.  But lately I feel constricted in my programming environment so I want to add another language. But let me share some of my history first.&lt;/p&gt;

&lt;p&gt;I started programming as a young boy and wrote my first menu system for my pc when I was 8 I think. It was nothing really complicated a series of batch scripts so that my mother could easily navigate the pc. She has been having problems with a computer for as long as I can remember :) &lt;/p&gt;

&lt;p&gt;After that I moved to GW BASIC like other people will have had the pleasure of jumping back and forth to line numbers. A couple of years later I wrote snake in that language and some game related to soccer.&lt;/p&gt;

&lt;p&gt;Around that time they put QuickBasic on the market and this is the point where everything that has the name Basic in it just looses my attention. Dim variable type = value just does NOT feel natural to me and that is just a variable declaration.. Don&amp;#8217;t get me started on the other stuff.&lt;/p&gt;

&lt;p&gt;So I kind of lost track of pc for a while and got a bass guitar instead.  Also a lot of fun, and the coolnes factor is not to be underestimated.&lt;/p&gt;

&lt;p&gt;Next I came in contact with TurboPascal (I&amp;#8217;m still not talking Object Oriented here) I think Turbopascal 4 and 5 it was, that I used to program some stuff in. Turbo pascal was a cool language and i wrote Black jack in that as my end project for the IT course in year 9 (3rd year of high school).&lt;/p&gt;

&lt;p&gt;Next I didn&amp;#8217;t really program at night anymore due to family related things and the fact that I didn&amp;#8217;t have a pc at home would have a lot to do with it. This situation remained until I was 20 something. I must say that I did meet a lot of girls and learnt how to pour cocktails etc :) &lt;br/&gt;
In school I did get to do some programming I learnt dbaseIV and access.&lt;/p&gt;

&lt;p&gt;So then I lost track of pc / IT all together for a while until I got a job as a helpdesk officer at an ISP. Helpdesk officer ==&gt; Team leader ==&gt; Junior Network engineer ==&gt; Own business as webdevelopment.&lt;/p&gt;

&lt;p&gt;I hadn&amp;#8217;t programmed in a long time 8+ years but had asked all the companies that hired me if I could get to some programming soon. Of course I could but never really got to do it. That&amp;#8217;s why I started my own company and so I re-learnt programming 3 years ago. I started with .NET in visual basic.NET that lasted about 5 days and switched to C#.&lt;/p&gt;

&lt;p&gt;Now 3 years later I know how to write C#, javascript, actionscript, xml, xsl, xsl-fo, T-SQL And that would be it. Not too much but also not too bad for 3 years working knowledge.&lt;/p&gt;

&lt;p&gt;Lately there has been ruby on stage as THE buzzword for productivity in programming. I think that it is more dynamic languages that are the strong point. Things I like in javascript are the anonymous functions or whatever they are called (  mypage.doSomework(&amp;#8216;myVar&amp;#8217;, function(){ do some other work in a function }); ) would be an example.&lt;/p&gt;

&lt;p&gt;Although a couple of people have been complaining about &lt;a href=&quot;http://www.joelonsoftware.com/items/2006/09/12.html&quot;&gt;Joel&amp;#8217;s posts on ruby&lt;/a&gt;. And I do think that on ruby Joel doesn&amp;#8217;t hit the nail on the head but generally he does. &lt;a href=&quot;http://www.iunknown.com/articles/2006/09/12/joel-spolsky-abducted-by-aliens&quot;&gt;John Lam&lt;/a&gt; strongly disagrees but he wrote &lt;a href=&quot;http://www.rubyclr.com/&quot;&gt;rubyclr&lt;/a&gt; so he&amp;#8217;s allowed to be defending his camp.&lt;/p&gt;

&lt;p&gt;Anyway I felt it was time to learn a new language. Since everything I know are mostly C-based languages I toyed with the idea of C++ but then I feel like I should practice a different strain of languages. &lt;br/&gt;
As you may or may not know, I talk quite a lot to Alex James of &lt;a href=&quot;http://www.base4.net/&quot;&gt;Base4&lt;/a&gt;. And he put me on to ironpython.  The choice falls on &lt;a href=&quot;http://www.codeplex.com/Wiki/View.aspx?ProjectName=IronPython&quot;&gt;IronPython&lt;/a&gt; or &lt;a href=&quot;http://www.rubyclr.com/&quot;&gt;Ruby&lt;/a&gt; at this point.  On investigating both languages i came to the constation that they are both very similar like java and c# or javascript and actionscript.&lt;/p&gt;

&lt;p&gt;And tonight I made a decission on which language to learn and it is &lt;a href=&quot;http://www.codeplex.com/Wiki/View.aspx?ProjectName=IronPython&quot;&gt;IronPython&lt;/a&gt;.  &lt;br/&gt;
Going by the rule if both sides of a dilemma are equal chose the one with the biggest emotional response :) So I chose &lt;a href=&quot;http://www.codeplex.com/Wiki/View.aspx?ProjectName=IronPython&quot;&gt;IronPython&lt;/a&gt; because it is invented by &lt;a href=&quot;http://www.python.org/~guido/&quot;&gt;Guido Van Rossum&lt;/a&gt; (on &lt;a href=&quot;http://en.wikipedia.org/wiki/Guido_van_Rossum&quot;&gt;wikipedia&lt;/a&gt;) who is a dutch guy which coincidentally happens to be my native language but I&amp;#8217;m from Belgium so a very different accent.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ll let you know how the python adventures go as i move through them.. But depending on the workload I have I might not be able to do much with it in a short period of time.&lt;/p&gt;
</description>
        <published>2006-09-15 00:20:40 +0200</published>
        <link>http://flanders.co.nz/2006/09/15/adding-a-dynamic-language-to-the-toolbelt/</link>
      </item>
      
    
      
      <item>
        <title>In all fairness to flight center</title>
        <description>&lt;p&gt;Flight center has posted a comment on the post that dealt with flight center.&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s quite lengthy so I&amp;#8217;ll just reblog it in a proper post.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Hi Ivan, &lt;br/&gt;
Here&amp;#8217;s our response to Craig, let me know if you have any more questions: &lt;br/&gt;
Hi Craig, &lt;br/&gt;
Your matter has now been discussed at length within our organisation, and while I can’t offer you the answer you want, I can certainly explain exactly how we have reached our conclusions, and offer further explanations to some of the questions you have posed. I have also posted this on your blog, and the other blogs that have been looking at this issue. &lt;br/&gt;
It’s very easy in blogs to portray a company as obstinate and heartless, but we have a very good track record of doing our utmost to solve any problem encountered by our clients – as you will appreciate, in the extremely competitive environment that is international travel, every client you have is one you try your best to keep. &lt;br/&gt;
But in this case we have assessed all of the evidence presented, including me personally contacting some of the people you have listed in your email, and have still come to the same conclusion – our agent would never have offered you indefinite validity on an overseas ticket. &lt;br/&gt;
The main reason for this are: &lt;br/&gt;
1. Tickets never have indefinite validity. This is one of the fundamental rules of air travel, and something our agents are trained in and reminded of on an ongoing basis. It would be just too high a liability for airlines to issue tickets such as this. In fact I can think of no tickets for services that have indefinite validity. Imagine cashing in an airfare bought in the early 1990’s for current air travel. &lt;br/&gt;
2. You had a complicated itinerary (hence the cost): &lt;br/&gt;
Outbound: Christchurch-Auckland-LA-Munich-Bratislava &lt;br/&gt;
Return: Bratislava-Munich-LA-Seattle-LA-Auckland-Christchurch &lt;br/&gt;
This is a very extensive return journey to book for an indefinite stay, something that would have been impossible to organise for indefinite travel, as you would have had to secure all these different legs to line up as indefinite. &lt;br/&gt;
3. You are a good client, you were spending a large amount of money with our agent whether buying one way or return, she would quickly have to take responsibility for her comments when you inevitably wanted to take up the return journey, and above all she is a well-respected and honest part of our team. Why, then, would she even consider ‘shafting’ you? &lt;br/&gt;
The evidence you have provided is circumstantial at best, and in a case of ‘he said, she said’, we, like any other organisation, will back our people when we are convinced our team member is genuine and the evidence compelling. She could not have said this by mistake, and the fact that not only would she not mislead you, but there would also be no real benefit from misleading you, speaks for itself. &lt;br/&gt;
Yes, we understand from the references you have provided that you felt you may not return. In this light, we strongly believe that you have either misheard or misjudged the terms of your tickets, thinking there would be some way to extend you tickets indefinitely. Again, it is extremely unfortunate, but there is no way to extend these tickets - we have exhausted every avenue over the past three months in searching for a way. &lt;br/&gt;
I apologise for bringing in the possibility of legal action, it was unnecessary, and a full and comprehensive answer should have always be the first port of call. This is the first time we have had to deal with a problem within a blog, and our response left much to be desired. I realise this will continue to be an ongoing debate within the blogosphere, but I offer anyone the chance to contact me and discuss this matter, as we want to keep our lines of communication open. &lt;br/&gt;
We have received a great deal of negative feedback (towards the individual concerned in particular) from the many people who have viewed this blog and the blogs that have now linked to it without offering our full side of the story. It is also our assessment that our company has already suffered a loss of business more than the costs of the refund, and will continue to suffer adverse effects from the posts. But we simply can’t pay off everyone who threatens our people with a high profile, negative blogging campaign. We will instead proactively discuss these points within whatever medium they come up, including this and any other blogs that have these threads, on a case by case basis. We would of course prefer the old method of conflict resolution, but we are quickly learning to adapt in this brave new world. &lt;br/&gt;
This is our point of view in a nutshell, and I hope you can understand that unless new and compelling evidence presents itself, it will not change. We would appreciate it if you could also remove the names and contact details of other participants in this dialogue; anyone wanting clarification or to make a further point is welcome to contact me on john.mcguinnessAT NOSPAMflightcentre dot co dot nz.&lt;/p&gt;

&lt;p&gt;Yours sincerely, &lt;br/&gt;
John McGuinness &lt;br/&gt;
Communications Manager &lt;br/&gt;
Flight Centre (NZ) Ltd&lt;/p&gt;
</description>
        <published>2006-09-14 09:25:04 +0200</published>
        <link>http://flanders.co.nz/2006/09/14/in-all-fairness-to-flight-center/</link>
      </item>
      
    
      
      <item>
        <title>A good visual of the asp.net page life cycle</title>
        <description>&lt;p&gt;While I was looking for something completely unrelated. I came across this picture.&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s a detailed graph on the page life cycle with the controls covering both asp.net 1.1 and 2.0&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pointerx.net/photos/screenshots/images/852/original.aspx&quot;&gt;http://pointerx.net/photos/screenshots/images/852/&amp;#8230;&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-09-13 19:51:49 +0200</published>
        <link>http://flanders.co.nz/2006/09/13/a-good-visual-of-the-aspnet-page-life-cycle/</link>
      </item>
      
    
      
      <item>
        <title>Base4 has joined NBlogr on Codeplex</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.base4.net/&quot;&gt;Alex James&lt;/a&gt; just informed me that base4 &lt;a href=&quot;http://www.codeplex.com/Wiki/View.aspx?ProjectName=Base4&quot;&gt;relocated to codeplex&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That is good news they live closer together now.&lt;/p&gt;

&lt;p&gt;Just a refresher you can get &lt;a href=&quot;http://www.nblogr.com&quot;&gt;NBlogr&lt;/a&gt; also from &lt;a href=&quot;http://www.codeplex.com/Wiki/View.aspx?ProjectName=NBlogr&quot;&gt;codeplex&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-09-11 18:17:35 +0200</published>
        <link>http://flanders.co.nz/2006/09/11/base4-has-joined-nblogr-on-codeplex/</link>
      </item>
      
    
      
      <item>
        <title>History and back button support for ATLAS</title>
        <description>&lt;p&gt;Nikhil comes yet again with an elegant solution to a nasty problem.&lt;/p&gt;

&lt;p&gt;When using an update panel the back button behavior gets broken. Nikhil Kothari wrote a history control that puts the developer in control of the navigational path through the website.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nikhilk.net/Entry.aspx?id=139&quot;&gt;http://www.nikhilk.net/Entry.aspx?id=139&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-09-10 18:51:27 +0200</published>
        <link>http://flanders.co.nz/2006/09/10/history-and-back-button-support-for-atlas/</link>
      </item>
      
    
      
      <item>
        <title>The conceptual internet</title>
        <description>&lt;p&gt;There has been some talk lately on how to define web 2.0&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.base4.net/Blog.aspx?ID=109&quot;&gt;The Conceptual Internet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.bluecog.co.nz/archives/2006/09/06/wtf-is-web-20/&quot;&gt;WTF is Web 2.0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In my opinion web 2.0 is something you add to the description of your application or service and have instantaneously a perceived coolness upgrade.&lt;/p&gt;

&lt;p&gt;Everything is else is just the web.  I&amp;#8217;m up to the point that if I hear somebody mention web 2.0 to me I&amp;#8217;ll run out the door screaming ;-)&lt;/p&gt;

&lt;p&gt;But let&amp;#8217;s talk a bit more about conceptual url&amp;#8217;s as &lt;a href=&quot;http://www.base4.net/Blog.aspx&quot;&gt;Alex&lt;/a&gt; has called them. I feel they should be more self-describing urls. &lt;a href=&quot;http://www.base4.net/Blog.aspx?ID=109&quot;&gt;Alex&lt;/a&gt; and I have been discussing this way of forming url&amp;#8217;s for a wee while now.&lt;/p&gt;

&lt;p&gt;Self describing urls are urls that mean something to everybody also your mum and nana. When talking to users I often find that they don&amp;#8217;t get anything that comes after &lt;a href=&quot;http://www.somedomain.com/FooBar&quot;&gt;http://www.somedomain.com/FooBar&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However if it were common to implement a scheme like &lt;a href=&quot;http://www.somedomain.com/MyAccount&quot;&gt;http://www.somedomain.com/MyAccount&lt;/a&gt;, &lt;a href=&quot;http://www.somedomain.com/Blog&quot;&gt;http://www.somedomain.com/Blog&lt;/a&gt;&lt;br/&gt;
That is something they also grasp but what they don&amp;#8217;t get (want to or need to) is why there is sometimes .aspx, .php, &amp;#8230;.. and definitely the question mark is where the look in their eyes becomes fully glazed.&lt;br/&gt;
So a common schema to implement  could be protocol://domain/DomainObject/View/RowIDOrFilter/Action/DomainObject/View/RowIdOrFilter/Action&amp;#8230;. Now why do i feel that they should be called self describing. The reason is because you can read them in plain english : &lt;br/&gt;
At &lt;em&gt;domain&lt;/em&gt; Get me the &lt;em&gt;domainObject&lt;/em&gt; as a &lt;em&gt;view &lt;/em&gt;with only &lt;em&gt;RowIdOrFilter&lt;/em&gt; and do &lt;em&gt;Action&lt;/em&gt; with it/make it&lt;em&gt; Action&lt;/em&gt;/apply &lt;em&gt;Action&lt;/em&gt; to it&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nblogr.com/Category/DetailByName/Venues/ShowSublist/Entry/List/&quot;&gt;http://www.nblogr.com/Category/DetailByName/Venues/ShowSublist/Entry/List/&lt;/a&gt; would be valid and would say then at nblogr.com get me the categories By name Venues and from those show me a sublist of entries as a list. Now that is something my grandfather with alzheimer still understands and quite possible could navigate.&lt;/p&gt;

&lt;p&gt;That way url&amp;#8217;s are in fact really easy to remember if you make them all up of meaningful words so that would make internet more transparent for everybody to use.&lt;/p&gt;

&lt;p&gt;This theory poses a problem when there are complex filters to be applied. However filters can be foreseen and hence be named upfront.  And the biggest problem I see here is to come to a world wide consensus on which naming to use for commonly used filters ect.  But in fact with predefined standards really everybody would benefit from it.&lt;/p&gt;

&lt;p&gt;In asp.net with virtual path providers you can store your whole website in sql server and never have a real physical website running&lt;/p&gt;

&lt;p&gt;Needless to say that I can&amp;#8217;t wait for IIS 7 to get rid of the aspx extensions etc on my projects.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;d say back to the basic idea of the computer/internet is here to assist people into doing better jobs not to confuse the hell out of them.&lt;/p&gt;
</description>
        <published>2006-09-09 10:16:45 +0200</published>
        <link>http://flanders.co.nz/2006/09/09/the-conceptual-internet/</link>
      </item>
      
    
      
      <item>
        <title>Flight centre doesn&#8217;t do what it promises</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://ims.co.nz/blog/archive/2006/09/08/2001.aspx&quot;&gt;http://ims.co.nz/blog/archive/2006/09/08/2001.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;holds the whole story. Go and check it out because you might be next.&lt;/p&gt;
</description>
        <published>2006-09-08 09:07:02 +0200</published>
        <link>http://flanders.co.nz/2006/09/08/flight-centre-doesnt-do-what-it-promises/</link>
      </item>
      
    
      
      <item>
        <title>Preview release of NBlogr</title>
        <description>&lt;p&gt;Today I put a preview release of NBlogr online.&lt;/p&gt;

&lt;p&gt;I still have to change the online site but will do so very shortly.&lt;/p&gt;

&lt;p&gt;This release has very basic functionality and is not yet feature complete so a lot may change later on.&lt;/p&gt;

&lt;p&gt;If anybody feels like joining the project do not hesitate :) All help I get is extremely welcome.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            [http://www.codeplex.com/Release/ProjectReleases.aspx?ProjectName=Nblogr](http://www.codeplex.com/Release/ProjectReleases.aspx?ProjectName=Nblogr)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;#8217;m heading into a very busy week/couple of weeks so I&amp;#8217;m not sure if I will be able to spend as much time as I&amp;#8217;ve been spending lately on the project.  But I think every week I will be able to show some progress at least.&lt;/p&gt;

&lt;p&gt;If you feel like it go ahead and give it a try but don&amp;#8217;t upgrade your blog just yet :).&lt;/p&gt;

&lt;p&gt;I&amp;#8217;d be keen to know what your thoughts are on the subject.&lt;/p&gt;
</description>
        <published>2006-09-02 23:30:22 +0200</published>
        <link>http://flanders.co.nz/2006/09/02/preview-release-of-nblogr/</link>
      </item>
      
    
      
      <item>
        <title>FileUploading for NBlogr</title>
        <description>&lt;p&gt;To upload files in nblogr. I wanted the user to have the possibility to upload as many files as they wanted but only show one file element.&lt;/p&gt;

&lt;p&gt;The upload procedure has to work without reloading the page entirely but there is no way of getting the size or the bytes of a file through the html input file control from clientscript without popping up a security warning.&lt;br/&gt;
And what do I personally think about security warnings : they are a necessary evil but limit you a lot in the development of contemporary sites with rich client interaction.&lt;br/&gt;
If I am to present a site to my parents and they have to figure stuff out themselves I&amp;#8217;m pretty sure that once the read the words : Security warning, Potential risk etc&amp;#8230; they will click no ==&gt; site doesn&amp;#8217;t work ==&gt; site == crap&lt;/p&gt;

&lt;p&gt;I wanted to include an upload with progress bar but decided to let that idea go and just give an implementation of a multiple file upload with a single inputelement. Maybe I will put this in during the next iteration. That way I can probably release a ctp this weekend and start thinking about a plugin architecture (thanks for the idea &lt;a href=&quot;http://blog.bluecog.co.nz/&quot;&gt;JD&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Because of the file issues i have to run it in an iframe :-s and have the page and the frame talk to eachother.&lt;/p&gt;
</description>
        <published>2006-09-01 09:13:37 +0200</published>
        <link>http://flanders.co.nz/2006/09/01/fileuploading-for-nblogr/</link>
      </item>
      
    
      
      <item>
        <title>Did Teched have an impact</title>
        <description>&lt;p&gt;In my case I guess it did.&lt;/p&gt;

&lt;p&gt;First of all there were the presentations on &lt;a href=&quot;http://www.netfx3.com/&quot;&gt;Presentation Foundation&lt;/a&gt; which were really cool and made me want to start playing with it right away.&lt;/p&gt;

&lt;p&gt;Unfortunately for my playing time, currently I am in a really busy period professionally so I&amp;#8217;ll just have to stick with what I know already.&lt;/p&gt;

&lt;p&gt;However I will start using &lt;a href=&quot;http://www.netfx3.com/&quot;&gt;communication foundation&lt;/a&gt; whenever possible as well as &lt;a href=&quot;http://www.netfx3.com/&quot;&gt;workflow foundation&lt;/a&gt; these two pieces are too useful for me not to use them.&lt;br/&gt;
Also it made me rethink the way I&amp;#8217;ve been using atlas and how I&amp;#8217;ve been evolving with the development of websites in atlas.&lt;/p&gt;

&lt;p&gt;In the beginning I was doing atlas I used update panels like everybody else. But soon I came across a lot of limitations of the update panel. Where they weren&amp;#8217;t flexible enough etc. That&amp;#8217;s when I started talking to webservices directly and did to everything client-side. This had as drawback that once you started to put a reasonable amount of functionality in the page the initialisation process takes a really long time. In meantime atlas has evolved for the better I must say. Also the control toolkit has grown a lot.&lt;/p&gt;

&lt;p&gt;Now the control toolkit holds the control I&amp;#8217;ve anticipated the most : the animation control. Also for about every bit of functionality you have a blueprint in the control toolkit that let you extend every server control on your page to do pretty much anything you want.&lt;/p&gt;

&lt;p&gt;Where I was in doubt last week if atlas was really the best choice to go the ajax route. Now these doubts have been erased.&lt;/p&gt;

&lt;p&gt;At tech ed I got a chance to have a chat with Scott Guthrie, who for a really smart guy knows how to communicate really well and certainly better than me :), and he couldn&amp;#8217;t say what was on the horizon atlaswise but just that it was going to be really cool. Even cooler than Nikhil Kothari&amp;#8217;s script sharp, I for one can&amp;#8217;t wait to set what they have in store for us.&lt;/p&gt;

&lt;p&gt;In short teched was excellent in my case and would love to do it again :)&lt;/p&gt;
</description>
        <published>2006-08-29 20:21:45 +0200</published>
        <link>http://flanders.co.nz/2006/08/29/did-teched-have-an-impact/</link>
      </item>
      
    
      
      <item>
        <title>A generic builder for unit tests</title>
        <description>&lt;p&gt;I&amp;#8217;ve been using &lt;a href=&quot;http://www.base4.net/&quot;&gt;base4&lt;/a&gt; quite a lot lately
:). And obviously I like it. But anyway for unit testing i found myself writing
virtually the same builder class over and over again.&lt;/p&gt;

&lt;p&gt;And since it is just test data that needs to be removed later it is always
very similar. I started thinking about my problem and came to the conclusion
that I could easily enough build a generic class that iterates over the object
and takes all the properties that belong to that type and not to any of the
parent types and fill them with valid data for their returntype.&lt;/p&gt;

&lt;p&gt;I got to work and not so long after that I came up with the following class:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                    using System;





                    using System.Collections.Generic;





                    using System.Text;





                    using Base4.Storage;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                    namespace NBlogr.NUnitTests.HelperClasses
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;    publicclassBuilder where T : class,IItem,new()&lt;/p&gt;

&lt;p&gt;    {&lt;/p&gt;

&lt;p&gt;        privateList items;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        publicList Items&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            get&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                if (items == null) items = newList();&lt;/p&gt;

&lt;p&gt;                return items;&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            set { items = value; }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        publicvirtual T Add()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            return Add(null);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        public T Add(int? index)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            T t = new T();&lt;/p&gt;

&lt;p&gt;            return Add(t, index, true);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        publicvirtual T Add(T t, int? index, bool generateValues)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            IItem item = t;&lt;/p&gt;

&lt;p&gt;            if (generateValues)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                foreach (PropertyImpl p in item.TypeDefinition.Properties)&lt;/p&gt;

&lt;p&gt;                {&lt;/p&gt;

&lt;p&gt;                    switch (p.ReturnTypeName)&lt;/p&gt;

&lt;p&gt;                    {&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;bool&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;Boolean&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;System.Boolean&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                            item[p.Name] = index.HasValue;&lt;/p&gt;

&lt;p&gt;                            break;&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;string&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;String&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;System.String&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                            if (index.HasValue)&lt;/p&gt;

&lt;p&gt;                                item[p.Name] = string.Format(&amp;#8220;Unittest {0} {1}&amp;#8221;, item.TypeDefinition.Name, index);&lt;/p&gt;

&lt;p&gt;                            else&lt;/p&gt;

&lt;p&gt;                                item[p.Name] = string.Format(&amp;#8220;Unittest {0}&amp;#8221;, item.TypeDefinition.Name);&lt;/p&gt;

&lt;p&gt;                            break;&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;uint&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;short&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;int&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;long&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;Int16&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;Int32&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;Int64&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;System.Int16&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;System.Int32&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;System.Int64&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                            item[p.Name] = index.HasValue ? index.Value : newRandom().Next();&lt;/p&gt;

&lt;p&gt;                            break;&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;byte&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;Byte&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;System.Byte&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                            item[p.Name] = index.HasValue ? Convert.ToByte(index.Value) : newbyte();&lt;/p&gt;

&lt;p&gt;                            break;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;double&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;Double&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;System.Double&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                            item[p.Name] = index.HasValue ? Convert.ToDouble(index.Value) : newRandom().NextDouble();&lt;/p&gt;

&lt;p&gt;                            break;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;byte[]&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;Byte[]&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;System.Byte[]&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                            Byte[] bytes = newbyte[128];&lt;/p&gt;

&lt;p&gt;                            Random rnd = newRandom();&lt;/p&gt;

&lt;p&gt;                            rnd.NextBytes(bytes);&lt;/p&gt;

&lt;p&gt;                            item[p.Name] = bytes;&lt;/p&gt;

&lt;p&gt;                            break;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;Guid&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                        case&amp;#8221;System.Guid&amp;#8221;:&lt;/p&gt;

&lt;p&gt;                            item[p.Name] = Guid.NewGuid();&lt;/p&gt;

&lt;p&gt;                            break;&lt;/p&gt;

&lt;p&gt;                    }&lt;/p&gt;

&lt;p&gt;                }&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;            item.Save();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            items.Add((T)item);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            return item as T;&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        publicvoid BuildList()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            BuildList(5);&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        publicvoid BuildList(int length)&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            if (items == null) items = newList();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;            for (int i = 0; i &amp;lt; length; i++)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                int index = i + 1;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;                Add(index);&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;        publicvoid CleanUp()&lt;/p&gt;

&lt;p&gt;        {&lt;/p&gt;

&lt;p&gt;            if (items != null &amp;amp;&amp;amp; items.Count&gt; 0)&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                foreach (IItem item in items)&lt;/p&gt;

&lt;p&gt;                {&lt;/p&gt;

&lt;p&gt;                    item.Delete();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;                }&lt;/p&gt;

&lt;p&gt;            }&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;
</description>
        <published>2006-08-29 11:45:06 +0200</published>
        <link>http://flanders.co.nz/2006/08/29/a-generic-builder-for-unit-tests/</link>
      </item>
      
    
      
      <item>
        <title>Aptana for writing atlas script</title>
        <description>&lt;p&gt;I write quite a lot of javascript code these days and have been looking for a couple of months for ways to make my life easier.&lt;/p&gt;

&lt;p&gt;Easier would mean in my opinion to get some kind of intellisense or autocomplete while writing javascript.&lt;/p&gt;

&lt;p&gt;As it turns out in visual studio orcas these features will be available so I&amp;#8217;ll be a very happy vs orcas user i guess :).  But in the meantime there is a free eclipse based IDE around aptana that let&amp;#8217;s you take advantage of autocomplete etc.&lt;/p&gt;

&lt;p&gt;I added the atlas debug files to the default code profile and I was in business.&lt;/p&gt;
</description>
        <published>2006-08-24 08:25:16 +0200</published>
        <link>http://flanders.co.nz/2006/08/24/aptana-for-writing-atlas-script/</link>
      </item>
      
    
      
      <item>
        <title>New Base4 CTP a must have</title>
        <description>&lt;p&gt;I&amp;#8217;ve been playing with the new base4 ctp that was released yesterday. And I must say that schema website thingy &amp;#8230; NICE ;-)&lt;/p&gt;

&lt;p&gt;I had trouble working out the joins from time to time but now I just browse my schema and it will show me the syntax if i click on a onetomany relationship which is SO cool.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;I&amp;#8217;d say Alex keep doing what you&amp;#8217;re doing :D&lt;/p&gt;
</description>
        <published>2006-08-18 11:12:14 +0200</published>
        <link>http://flanders.co.nz/2006/08/18/new-base4-ctp-a-must-have/</link>
      </item>
      
    
      
      <item>
        <title>The thing I re-learned again</title>
        <description>&lt;p&gt;I feel so stupid sometimes and today was such a day.. I&amp;#8217;d been putting of reinstalling my pc for a  while now. &lt;br/&gt;
I had installed vista on it but my machine just isn&amp;#8217;t fast enough.&lt;/p&gt;

&lt;p&gt;The thing I&amp;#8217;ve re-learned today is when installing a pc install the virus scanner last or disable it  during the install period. It shaved about 1 hour of my visual studio installation.&lt;/p&gt;

&lt;p&gt;All in all I think that feature saves me about 6 hours over the whole install.&lt;/p&gt;
</description>
        <published>2006-08-15 23:46:10 +0200</published>
        <link>http://flanders.co.nz/2006/08/15/the-thing-i-re-learned-again/</link>
      </item>
      
    
      
      <item>
        <title>This blog has joined technorati</title>
        <description>&lt;p&gt;I am now listed on technorati&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            [Technorati Profile](http://www.technorati.com/claim/gw6vhrb4gs)
&lt;/code&gt;&lt;/pre&gt;
</description>
        <published>2006-08-11 20:19:38 +0200</published>
        <link>http://flanders.co.nz/2006/08/11/this-blog-has-joined-technorati/</link>
      </item>
      
    
      
      <item>
        <title>Faces for Lebanon</title>
        <description>&lt;p&gt;A while ago I decided that I wouldn&amp;#8217;t reblog somebody else&amp;#8217;s posts. But I have to make an exception today because of what&amp;#8217;s going on in the world.&lt;/p&gt;

&lt;p&gt;People that have the chance to meet me in person can ask me for my view on that whole situation but I don&amp;#8217;t want to write a whole book here.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                    [
                            As my friend Miel blogs :
                    ](http://blog.coolz0r.com/2006/08/11/faces-for-lebanon/)







            [
                    Faces4Lebanon.org
            ](http://www.faces4lebanon.org/)
             seeks to demonstrate the solidarity of people with Lebanon and the Lebanese people. Millions of people around the world are calling for an immediate halt of all acts of aggression against Lebanon, and the humanitarian catastrophe that is worsening everyday.  

            [
                    Faces4Lebanon.org
            ](http://www.faces4lebanon.org/)
             aims to spread the words of millions who want to send a message to the world that they are against all acts of violence and aggression. By publishing your photo on 
            [
                    Faces4Lebanon.org
            ](http://www.faces4lebanon.org/)
            , you will contribute to the buzz we want to create globally and attract as much media attention as possible in a highly civilized and unique manner. Furthermore, your contribution will document the world’s solidarity with Lebanon and the widespread infuriation from this aggression on Lebanon.






            Stop the madness! War isn’t the answer! It never is!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <published>2006-08-11 09:00:33 +0200</published>
        <link>http://flanders.co.nz/2006/08/11/faces-for-lebanon/</link>
      </item>
      
    
      
      <item>
        <title>User group atlas presentations</title>
        <description>&lt;p&gt;This week I went to do a couple of presenations on atlas in the regional user groups here in New Zealand.&lt;/p&gt;

&lt;p&gt;At first I was really nervous, so I apologise to the people in hamilton for not getting the best presenation I could give you, I even forgot some stuff that would make all the pieces fit together.&lt;/p&gt;

&lt;p&gt;But after the first talk I started to get the hang of it, and now I regret that I can&amp;#8217;t do more talks but who knows what the future brings.&lt;/p&gt;

&lt;p&gt;It was really interesting to see that there are a lot of really skilled people with a passion for programming in New Zealand.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;So in all I would like to thank everybody for taking the time to come and listen to my ramblings on Atlas.&lt;br/&gt;
And perhaps we&amp;#8217;ll meet on Teched next week.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <published>2006-08-11 08:53:16 +0200</published>
        <link>http://flanders.co.nz/2006/08/11/user-group-atlas-presentations/</link>
      </item>
      
    
      
      <item>
        <title>Base4 Totally rocks !!!</title>
        <description>&lt;p&gt;The last couple of days I have been playing around with &lt;a href=&quot;http://www.base4.net&quot;&gt;base4&lt;/a&gt; and I have to tell you if you aren&amp;#8217;t using it now. You should hurry yourself to their site and start downloading.&lt;/p&gt;

&lt;p&gt;We are in the process of testing a schema generator that will wrap your existing databases to the base4 schema file.&lt;/p&gt;

&lt;p&gt;I have a code reduction of at least 33% with another OR/mapper so that counts in my book.&lt;/p&gt;

&lt;p&gt;Hurry to &lt;a href=&quot;http://www.base4.net&quot;&gt;base4.net&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;People interested in testing the mapper please email me or something.&lt;/p&gt;
</description>
        <published>2006-07-29 23:58:56 +0200</published>
        <link>http://flanders.co.nz/2006/07/29/base4-totally-rocks/</link>
      </item>
      
    
      
      <item>
        <title>Disable page caching globally</title>
        <description>&lt;p&gt;I decided to put some of the questions I get from time to time on my blog, if they involve code samples at least.&lt;/p&gt;

&lt;p&gt;Today :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            Sent: Wednesday, 26 July 2006 10:18 a.m.






            To: Ivan Porto Carrero






            Subject: Page Caching








                     







            I use the following markup to disable caching for specific pages in my app. 






            &amp;lt;%@ OutputCache Location=&quot;None&quot; VaryByParam=&quot;None&quot; %&amp;gt;







                     







            Do you know how to do this gloablly, for whole application? 







             





            Answer:






            void Application_PreSendRequestHeaders(object sender, EventArgs e)









                                        {









                            










                                            Response.ContentEncoding = System.Text.Encoding.UTF8;











                                            Response.Cache.SetCacheability(HttpCacheability.NoCache); 









                     










                                        }









                     







            Add that to the global.asax that will disable all caching







                     







            More info on the HttpCacheability object :






            [
                    http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpref/html/frlrfsystemwebhttpcachepolicyclasssetcacheabilitytopic.asp
            ](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpref/html/frlrfsystemwebhttpcachepolicyclasssetcacheabilitytopic.asp)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <published>2006-07-25 11:14:23 +0200</published>
        <link>http://flanders.co.nz/2006/07/25/disable-page-caching-globally/</link>
      </item>
      
    
      
      <item>
        <title>Some choices made regarding NBlogr</title>
        <description>&lt;p&gt;For the development of &lt;a href=&quot;http://www.flanders.co.nz/Blog/www.nblogr.com&quot;&gt;NBlogr&lt;/a&gt; I had to say goodbye to some of my favorite controls.&lt;/p&gt;

&lt;p&gt;The idea of &lt;a href=&quot;www.nblogr.com&quot;&gt;NBlogr&lt;/a&gt; is that it is Open Source so that means I can&amp;#8217;t use anything that is not open source / free in my project.  I use component arts excellent menu whenever I see fit except for now.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            [ComponentArt](www.componentart.com) have 2-3 controls in their range that I really like. The other ones aren&#8217;t really usefull in my case.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;#8217;ve been using the &lt;a href=&quot;www.freetextbox.com&quot;&gt;freetextbox&lt;/a&gt; control for 3,5 years now. But the latest versions aren&amp;#8217;t really good implementations. If I load up my control in a firefox browser and I reload the site by entering in the address bar.. I get 3-5 errors @ pageLoad.  And that just sucks because the rest of the javascript doesn&amp;#8217;t get executed and an atlas page won&amp;#8217;t execute.&lt;/p&gt;

&lt;p&gt;So for me it&amp;#8217;s down with the freetextbox control and up with the &lt;a href=&quot;http://tinymce.moxiecode.com&quot;&gt;tinymce&lt;/a&gt; control from moxiecode.&lt;br/&gt;
That one is the only true cross browser (IE, FF, Safari, Opera) richt text editor I can find&lt;/p&gt;

&lt;p&gt;Another benefit : It&amp;#8217;s smaller than the freetextbox and loads way faster.&lt;/p&gt;

&lt;p&gt;Captcha isn&amp;#8217;t a good solution for blocking comment spam. I&amp;#8217;ve decided to use &lt;a href=&quot;http://akismet.com/&quot;&gt;akismet &lt;/a&gt;as a refferer and comment blacklist service for NBlogr.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <published>2006-07-23 09:14:35 +0200</published>
        <link>http://flanders.co.nz/2006/07/23/some-choices-made-regarding-nblogr/</link>
      </item>
      
    
      
      <item>
        <title>Congrats to Tim and his wife with their new baby</title>
        <description>&lt;p&gt;Tim Haines became a father over the weekend.&lt;/p&gt;

&lt;p&gt;Congratulations to the happy family. I wonder if the little one will take after the father and start googling away after a few months/years :)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            [http://ims.co.nz/blog/archive/2006/07/22/1856.aspx](http://ims.co.nz/blog/archive/2006/07/22/1856.aspx)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;A picture of the adorable baby :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    ![Tane Haines](http://www.ims.co.nz/blog/images/tane.jpg)
&lt;/code&gt;&lt;/pre&gt;
</description>
        <published>2006-07-23 09:05:24 +0200</published>
        <link>http://flanders.co.nz/2006/07/23/congrats-to-tim-and-his-wife-with-their-new-baby/</link>
      </item>
      
    
      
      <item>
        <title>Make the freetextbox work inside an atlas updatpanel</title>
        <description>&lt;p&gt;A while ago I blogged about &lt;a href=&quot;http://www.flanders.co.nz/Blog/2006/05/22/ATLASContinuedGetTheFreetextboxGoing.aspx&quot;&gt;making the freetextbox work inside an updatepanel&lt;/a&gt;. I didn&amp;#8217;t put the code at that time because it wasn&amp;#8217;t what it should be.&lt;/p&gt;

&lt;p&gt;For the NBlogr engine I do need a working version of that control. And it should work on firefox and internet explorer. Now I have it somewhat working.  I thought it would be best to share this, as I&amp;#8217;m sure that there are others that are facing the same problem.&lt;/p&gt;

&lt;p&gt;You basically wrap it in an iframe so that it loads it&amp;#8217;s script in a page that does not have an update panel on it.
through javascript you get the value of the entered in the freetextbox and set it in an hiddenfield. and voila you&amp;#8217;re done.&lt;/p&gt;

&lt;p&gt;FreeTextBoxWrapper.ascx :&lt;/p&gt;

&lt;p&gt;&amp;lt;&lt;/p&gt;

&lt;p&gt;iframe&lt;/p&gt;

&lt;p&gt;runat
=&amp;#8221;server&amp;#8221;&lt;/p&gt;

&lt;p&gt;id
=&amp;#8221;ifrmTxt&amp;#8221;&lt;/p&gt;

&lt;p&gt;width
=&amp;#8221;600&amp;#8221;&lt;/p&gt;

&lt;p&gt;height
=&amp;#8221;400&amp;#8221;&lt;/p&gt;

&lt;p&gt;frameborder
=&amp;#8221;0&amp;#8221;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;iframe&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&amp;lt;&lt;/p&gt;

&lt;p&gt;asp
:
HiddenField&lt;/p&gt;

&lt;p&gt;ID
=&amp;#8221;hfFtbValue&amp;#8221;&lt;/p&gt;

&lt;p&gt;runat
=&amp;#8221;server&amp;#8221;&lt;/p&gt;

&lt;p&gt;/&gt;&lt;/p&gt;

&lt;p&gt;And the codebehind for the ascx :&lt;/p&gt;

&lt;p&gt;12 [ValidationProperty(&amp;#8220;Text&amp;#8221;)]&lt;/p&gt;

&lt;p&gt;13 publicpartialclassApp_Components_FreeTextBoxWrapper : System.Web.UI.UserControl&lt;/p&gt;

&lt;p&gt;14 {&lt;/p&gt;

&lt;p&gt;15 publicstringText&lt;/p&gt;

&lt;p&gt;16 {&lt;/p&gt;

&lt;p&gt;17 get&lt;/p&gt;

&lt;p&gt;18 {&lt;/p&gt;

&lt;p&gt;19 returnhfFtbValue.Value;&lt;/p&gt;

&lt;p&gt;20 }&lt;/p&gt;

&lt;p&gt;21 set&lt;/p&gt;

&lt;p&gt;22 {&lt;/p&gt;

&lt;p&gt;23 hfFtbValue.Value = value;&lt;/p&gt;

&lt;p&gt;24 }&lt;/p&gt;

&lt;p&gt;25 }&lt;/p&gt;

&lt;p&gt;26 publicstringWidth&lt;/p&gt;

&lt;p&gt;27 {&lt;/p&gt;

&lt;p&gt;28 get&lt;/p&gt;

&lt;p&gt;29 {&lt;/p&gt;

&lt;p&gt;30 returnifrmTxt.Attributes[&amp;#8220;width&amp;#8221;];&lt;/p&gt;

&lt;p&gt;31 }&lt;/p&gt;

&lt;p&gt;32 set&lt;/p&gt;

&lt;p&gt;33 {&lt;/p&gt;

&lt;p&gt;34 ifrmTxt.Attributes[&amp;#8220;width&amp;#8221;] = value;&lt;/p&gt;

&lt;p&gt;35 }&lt;/p&gt;

&lt;p&gt;36 }&lt;/p&gt;

&lt;p&gt;37 publicstringHeight&lt;/p&gt;

&lt;p&gt;38 {&lt;/p&gt;

&lt;p&gt;39 get&lt;/p&gt;

&lt;p&gt;40 {&lt;/p&gt;

&lt;p&gt;41 returnifrmTxt.Attributes[&amp;#8220;height&amp;#8221;];&lt;/p&gt;

&lt;p&gt;42 }&lt;/p&gt;

&lt;p&gt;43 set&lt;/p&gt;

&lt;p&gt;44 {&lt;/p&gt;

&lt;p&gt;45 ifrmTxt.Attributes[&amp;#8220;height&amp;#8221;] = value;&lt;/p&gt;

&lt;p&gt;46 }&lt;/p&gt;

&lt;p&gt;47 }&lt;/p&gt;

&lt;p&gt;48 protectedvoidPage_Load(objectsender, EventArgse)&lt;/p&gt;

&lt;p&gt;49 {&lt;/p&gt;

&lt;p&gt;50 //load the freetextbox page that has no theme and no masterpage set. The background color is the one I chose to blend in with my design&lt;/p&gt;

&lt;p&gt;51 ifrmTxt.Attributes[&amp;#8220;Src&amp;#8221;] = ResolveUrl(string.Format(&amp;#8220;~/App_Components/FreeTextBox.aspx?hf={0}&amp;amp;w={1}&amp;amp;h={2}&amp;#8221;, hfFtbValue.ClientID,Width,Height));&lt;/p&gt;

&lt;p&gt;52 ifrmTxt.Attributes[&amp;#8220;Name&amp;#8221;] = ifrmTxt.ClientID;&lt;/p&gt;

&lt;p&gt;53&lt;/p&gt;

&lt;p&gt;54 if (!IsPostBack)&lt;/p&gt;

&lt;p&gt;55 {&lt;/p&gt;

&lt;p&gt;56 Session[hfFtbValue.ClientID] = hfFtbValue.Value;&lt;/p&gt;

&lt;p&gt;57 }&lt;/p&gt;

&lt;p&gt;58 }&lt;/p&gt;

&lt;p&gt;59&lt;/p&gt;

&lt;p&gt;60 protectedoverridevoidOnDataBinding(EventArgse)&lt;/p&gt;

&lt;p&gt;61 {&lt;/p&gt;

&lt;p&gt;62 base.OnDataBinding(e);&lt;/p&gt;

&lt;p&gt;63 Session[hfFtbValue.ClientID] = hfFtbValue.Value;&lt;/p&gt;

&lt;p&gt;64 }&lt;/p&gt;

&lt;p&gt;65 }&lt;/p&gt;

&lt;p&gt;And the page that contains the freetextbox control :&lt;/p&gt;

&lt;p&gt;&amp;lt;%&lt;/p&gt;

&lt;p&gt;@&lt;/p&gt;

&lt;p&gt;Page&lt;/p&gt;

&lt;p&gt;Language
=&amp;#8221;C#&amp;#8221;&lt;/p&gt;

&lt;p&gt;AutoEventWireup
=&amp;#8221;true&amp;#8221;&lt;/p&gt;

&lt;p&gt;Theme
=&amp;#8221;&amp;#8221;&lt;/p&gt;

&lt;p&gt;CodeFile
=&amp;#8221;FreeTextBox.aspx.cs&amp;#8221;&lt;/p&gt;

&lt;p&gt;Inherits
=&amp;#8221;App_Components_FreeTextBox&amp;#8221;&lt;/p&gt;

&lt;p&gt;ValidateRequest
=&amp;#8221;false&amp;#8221;
%&gt;&lt;/p&gt;

&lt;p&gt;DOCTYPE&lt;/p&gt;

&lt;p&gt;html&lt;/p&gt;

&lt;p&gt;PUBLIC&lt;/p&gt;

&lt;p&gt;&amp;#8221;-//W3C//DTD XHTML 1.0 Transitional//EN&amp;#8221;&lt;/p&gt;

&lt;p&gt;&amp;#8220;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&amp;#8221;&gt;
&amp;lt;
html&lt;/p&gt;

&lt;p&gt;xmlns
=&amp;#8221;http://www.w3.org/1999/xhtml&amp;#8221;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&amp;lt;
head&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;runat
=&amp;#8221;server&amp;#8221;&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;
title&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;A wrapper for the freetextbox in an atlas:updatepanel&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;title&lt;/p&gt;

&lt;blockquote&gt;&lt;/blockquote&gt;

&lt;p&gt;&amp;lt;
style&lt;/p&gt;

&lt;p&gt;type
=&amp;#8221;text/css&amp;#8221;&gt;&lt;/p&gt;

&lt;p&gt;body
{&lt;/p&gt;

&lt;p&gt;background
:&lt;/p&gt;

&lt;h1&gt;ffdaa0&lt;/h1&gt;

&lt;p&gt;;//Set your color here&lt;/p&gt;

&lt;p&gt;margin
:
0
;
}&lt;/p&gt;

&lt;p&gt;style&lt;/p&gt;

&lt;blockquote&gt;&lt;/blockquote&gt;

&lt;p&gt;head&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&amp;lt;
body&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&amp;lt;
form&lt;/p&gt;

&lt;p&gt;id
=&amp;#8221;form1&amp;#8221;&lt;/p&gt;

&lt;p&gt;runat
=&amp;#8221;server&amp;#8221;&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;
div&lt;/p&gt;

&lt;blockquote&gt;&lt;/blockquote&gt;

&lt;p&gt;&amp;lt;
FTB
:
FreeTextBox&lt;/p&gt;

&lt;p&gt;ID
=&amp;#8221;ftb&amp;#8221;&lt;/p&gt;

&lt;p&gt;runat
=&amp;#8221;server&amp;#8221;&lt;/p&gt;

&lt;p&gt;SupportFolder
=&amp;#8221;~/&amp;#8221;&lt;/p&gt;

&lt;p&gt;ClientSideTextChanged
=&amp;#8221;onFtbClientTextChanged&amp;#8221;&gt;&lt;/p&gt;

&lt;p&gt;FTB
:
FreeTextBox&lt;/p&gt;

&lt;blockquote&gt;&lt;/blockquote&gt;

&lt;p&gt;div&lt;/p&gt;

&lt;blockquote&gt;&lt;/blockquote&gt;

&lt;p&gt;&amp;lt;
script&lt;/p&gt;

&lt;p&gt;type
=&amp;#8221;text/javascript&amp;#8221;&gt;&lt;/p&gt;

&lt;p&gt;//The lengthy constructor is there so that firefox also knows where to get the text.&lt;/p&gt;

&lt;p&gt;function&lt;/p&gt;

&lt;p&gt;onFtbClientTextChanged
(){&lt;/p&gt;

&lt;p&gt;window
.
parent
.
document
.
getElementById
(
&amp;#8216;&amp;lt;%= MainPageField %&gt;&amp;#8217;
).&lt;/p&gt;

&lt;h1&gt;value&lt;/h1&gt;

&lt;p&gt;document
.
getElementById
(
&amp;#8216;&amp;lt;%= ftb.ClientID %&gt;_designEditor&amp;#8217;
).
contentWindow
.
document
.
body
.
innerHTML
;
};&lt;/p&gt;

&lt;p&gt;if
(
navigator
.
userAgent
.
indexOf
(
&amp;#8220;Firefox&amp;#8221;
)!=-1)&lt;/p&gt;

&lt;p&gt;document
.
getElementById
(
&amp;#8220;&amp;lt;%= ftb.ClientID %&gt;_htmlEditorArea&amp;#8221;
).
addEventListener
(
&amp;#8216;change&amp;#8217;
,
onFtbClientTextChanged
,
true
);
//for firefox&lt;/p&gt;

&lt;p&gt;script&lt;/p&gt;

&lt;blockquote&gt;&lt;/blockquote&gt;

&lt;p&gt;form&lt;/p&gt;

&lt;blockquote&gt;&lt;/blockquote&gt;

&lt;p&gt;body&lt;/p&gt;

&lt;blockquote&gt;&lt;/blockquote&gt;

&lt;p&gt;html&lt;/p&gt;

&lt;blockquote&gt;&lt;/blockquote&gt;

&lt;p&gt;With it&amp;#8217;s codebehind:&lt;/p&gt;

&lt;p&gt;12 publicpartialclassApp_Components_FreeTextBox : System.Web.UI.Page&lt;/p&gt;

&lt;p&gt;13 {&lt;/p&gt;

&lt;p&gt;14 protectedstringMainPageField;&lt;/p&gt;

&lt;p&gt;15&lt;/p&gt;

&lt;p&gt;16 protectedvoidPage_Load(objectsender, EventArgse)&lt;/p&gt;

&lt;p&gt;17 {&lt;/p&gt;

&lt;p&gt;18 MainPageField = Request.QueryString[&amp;#8220;hf&amp;#8221;];&lt;/p&gt;

&lt;p&gt;19&lt;/p&gt;

&lt;p&gt;20 if (!IsPostBack)&lt;/p&gt;

&lt;p&gt;21 {&lt;/p&gt;

&lt;p&gt;22 //When the page first loads we need to set the freetextbox with the value from the hiddenfield for databinding etc.&lt;/p&gt;

&lt;p&gt;23 stringsetTextScript = string.Empty;&lt;/p&gt;

&lt;p&gt;24 if(Request.Browser.Browser != &amp;#8220;IE&amp;#8221;)//for firefox we need to reach the freetextbox design editor to place our html&lt;/p&gt;

&lt;p&gt;25 setTextScript = string.Format(&amp;#8220;document.getElementById(&amp;#8216;{0}_designEditor&amp;#8217;).contentWindow.document.body.innerHTML = window.parent.document.getElementById(&amp;#8216;{1}&amp;#8217;).value;\r\n&amp;#8221;, ftb.ClientID, MainPageField);&lt;/p&gt;

&lt;p&gt;26 else&lt;/p&gt;

&lt;p&gt;27 setTextScript = string.Format(&amp;#8220;document.getElementById(&amp;#8216;{0}&amp;#8217;).innerHTML = window.parent.document.getElementById(&amp;#8216;{1}&amp;#8217;).value;\r\n&amp;#8221;, ftb.ClientID, MainPageField);&lt;/p&gt;

&lt;p&gt;28&lt;/p&gt;

&lt;p&gt;29 Page.ClientScript.RegisterStartupScript(this.GetType(), &amp;#8220;setText&amp;#8221;, setTextScript, true);&lt;/p&gt;

&lt;p&gt;30 ftb.Text = Session[MainPageField].ToString();&lt;/p&gt;

&lt;p&gt;31 }&lt;/p&gt;

&lt;p&gt;32 //Set the width to 99% so that the freetextbox displays completely&lt;/p&gt;

&lt;p&gt;33 ftb.Width = Unit.Percentage(99);&lt;/p&gt;

&lt;p&gt;34&lt;/p&gt;

&lt;p&gt;35 //Get the height and widht and set the height relative to the width of the iframe (the toolbars move)&lt;/p&gt;

&lt;p&gt;36 intheight = int.Parse(Request.QueryString[&amp;#8220;h&amp;#8221;]);&lt;/p&gt;

&lt;p&gt;37 intwidth = int.Parse(Request.QueryString[&amp;#8220;w&amp;#8221;]);&lt;/p&gt;

&lt;p&gt;38 if (width &amp;lt; 550)&lt;/p&gt;

&lt;p&gt;39 ftb.Height = Unit.Pixel(height - 130);&lt;/p&gt;

&lt;p&gt;40 elseif (width &amp;lt; 600)&lt;/p&gt;

&lt;p&gt;41 ftb.Height = Unit.Pixel(height - 120);&lt;/p&gt;

&lt;p&gt;42 else&lt;/p&gt;

&lt;p&gt;43 ftb.Height = Unit.Pixel(height - 90);&lt;/p&gt;

&lt;p&gt;44&lt;/p&gt;

&lt;p&gt;45 }&lt;/p&gt;

&lt;p&gt;46&lt;/p&gt;

&lt;p&gt;47 }&lt;/p&gt;
</description>
        <published>2006-07-21 00:03:21 +0200</published>
        <link>http://flanders.co.nz/2006/07/21/make-the-freetextbox-work-inside-an-atlas-updatpanel/</link>
      </item>
      
    
      
      <item>
        <title>Now here&#8217;s an interesting idea with good tips on raising starting capital for your idea.</title>
        <description>&lt;p&gt;A few weeks ago I came across the concept of Crowd source.&lt;/p&gt;

&lt;p&gt;You can read more about it here : &lt;a href=&quot;http://www.cambrianhouse.com&quot;&gt;http://www.cambrianhouse.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I suggest you have a read through their site because that is pretty cool.  They are currently in beta but are really friendly and helpful and welcome all new members.&lt;/p&gt;

&lt;p&gt;I already know where I&amp;#8217;ll be getting &amp;#8220;hobby&amp;#8221; projects from because there are some interesting idea&amp;#8217;s on that site.&lt;/p&gt;

&lt;p&gt;Today I had a browse through their blog and found a post where the founder of cambrianhouse explains how he raised 2.5 million USD and more importantly he shares his tips in depth:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            **Tip 1: Sincerely believe.  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tip 2: Screw the business plan. Tell them your story.&lt;br/&gt;
Tip 3: Sh#t confidence.&lt;br/&gt;
Tip 4: Pretend you already have the money.&lt;br/&gt;
Tip 5: Don’t marry every woman you date.&lt;br/&gt;
Tip 6: Prime the pump.**&lt;/p&gt;

&lt;p&gt;You can read more about it here : &lt;a href=&quot;http://www.cambrianhouse.com/blog/startups-entrepreneurship/raising-capital-six-tips-on-eating-fear/&quot;&gt;http://www.cambrianhouse.com/blog/startups-entrepreneurship/raising-capital-six-tips-on-eating-fear/&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-07-20 08:50:53 +0200</published>
        <link>http://flanders.co.nz/2006/07/20/now-heres-an-interesting-idea-with-good-tips-on-raising/</link>
      </item>
      
    
      
      <item>
        <title>I opened a workspace for NBlogr on gotdotnet</title>
        <description>&lt;p&gt;Today I opened a workspace on gotdotnet for an open source blog engine I started writing.&lt;/p&gt;

&lt;p&gt;Everybody is welcome to join in. The space I have on gotdotnet is not so big which means that you&amp;#8217;ll have to email me for now to get the complete and current source database.&lt;/p&gt;

&lt;p&gt;A little bit later this week I will have a demo site/blog running on &lt;a href=&quot;http://www.nblogr.com&quot;&gt;http://www.nblogr.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The characteristics of the blog are :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;It&amp;#8217;s Atlas :)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It&amp;#8217;s free for everybody to use&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It&amp;#8217;s open source so please if you change something then let me know.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Will be focussing on integrating the whole web 2.0 (the real web 2.0) experience i.e. direct integration of flickr etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The conversion from your current blog software should run without glitches.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I am definitely in need of somebody that knows how to create good templates/xhtml/css designs because that is not my strongest side.&lt;/p&gt;

&lt;p&gt;The workspace is located @ &lt;a href=&quot;http://workspaces.gotdotnet.com/nblogr&quot;&gt;http://workspaces.gotdotnet.com/nblogr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <published>2006-07-17 21:49:39 +0200</published>
        <link>http://flanders.co.nz/2006/07/17/i-opened-a-workspace-for-nblogr-on-gotdotnet/</link>
      </item>
      
    
      
      <item>
        <title>Voting for blog of the year NZ has opened</title>
        <description>&lt;p&gt;You can vote for your favourite blog here :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            _

                            [http://www.dot.net.nz/Default.aspx?tabid=51](http://www.dot.net.nz/Default.aspx?tabid=51)

            _
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And you can vote for mine here :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            [http://www.dot.net.nz/blogvote?blogname=Ivan Porto Carrero](http://www.dot.net.nz/blogvote?blogname=Ivan Porto Carrero)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On thursday I have the first presentation about Atlas in our local user group.  I will try to support those talks with clear examples online of the concepts involved in atlas development.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <published>2006-07-16 21:31:58 +0200</published>
        <link>http://flanders.co.nz/2006/07/16/voting-for-blog-of-the-year-nz-has-opened/</link>
      </item>
      
    
      
      <item>
        <title>AjaxPatterns.org</title>
        <description>&lt;p&gt;For those of you that are concerned with design patterns for ajax check out this site :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            [http://ajaxpatterns.org/](http://ajaxpatterns.org/) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I have to say that that site is a real gem.  I for one am concerned with usability and am not discriminating so I think the leap to accessibility is only very small.  We are planning an application that is ajaxed and should still be completely usable by blind users which will be intresting to build.&lt;/p&gt;

&lt;p&gt;In preparation for this i stumbled upon &lt;a href=&quot;http://www.maxkiesler.com/index.php/weblog/comments/how_to_make_your_ajax_applications_accessible/&quot;&gt;http://www.maxkiesler.com/index.php/weblog/comments/how_to_make_your_ajax_applications_accessible/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That page has got about 40 links to sites that discuss accesibility in an ajaxed world.&lt;/p&gt;

&lt;p&gt;The last issue I&amp;#8217;m facing is the fact that because asp.NET renders webresource urls that are incredibly long. The w3 xhtml validator won&amp;#8217;t validate my pages and only because of this url.  I want to render valid xhtml 1.1 pages. So that&amp;#8217;s something I will be looking at in the next few weeks when I&amp;#8217;ve got some spare time.&lt;/p&gt;
</description>
        <published>2006-07-03 09:22:07 +0200</published>
        <link>http://flanders.co.nz/2006/07/03/ajaxpatternsorg/</link>
      </item>
      
    
      
      <item>
        <title>Javascript obfuscation</title>
        <description>&lt;p&gt;I&amp;#8217;ve been getting much better along with atlas lately. Almost up to the point that it takes me almost the same time to create page in asp.net than it does me to create a page in atlas. Notice the word almost :) And that&amp;#8217;s optimism talking&lt;/p&gt;

&lt;p&gt;Anyway it does take a wee while longer to create an atlas page than it would to create an asp.net page. But the result is about 10x as usable and than a normal page.&lt;/p&gt;

&lt;p&gt;That being said. All that atlas goodnes comes at a cost : A lot of javascript being pushed down to the browser. When I was in wellington on wednesday there was somebody talking about atlas in the user group.  Seen as I will go talk to the regional groups I was quite keen what Tatham had to say on the subject.&lt;/p&gt;

&lt;p&gt;It was interesting but at a certain point he talked about the &amp;#8220;obfuscated&amp;#8221; javascript files. Those are just packed. That made me think that I also want to have packed javascript that is slightly less readable. I remember I have some open source library that I downloaded a year or so ago.&lt;/p&gt;

&lt;p&gt;Well the guy has a nice library that you can download here :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dean.edwards.name/packer/&quot;&gt;http://dean.edwards.name/packer/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s nice but his HttpHandler doesn&amp;#8217;t work for me. But there&amp;#8217;s a simple work-around. Make your own handler that reads the javascript file and uses his Pack function.&lt;/p&gt;

&lt;p&gt;If somebody is interested in the code just drop me an email and i&amp;#8217;ll send it to you.&lt;/p&gt;
</description>
        <published>2006-06-30 21:23:05 +0200</published>
        <link>http://flanders.co.nz/2006/06/30/javascript-obfuscation/</link>
      </item>
      
    
      
      <item>
        <title>safari fix for the client library of atlas</title>
        <description>&lt;p&gt;If you&amp;#8217;re not using the control toolkit for atlas and are doing some client side scripting. you may find that the April CTP has doesn&amp;#8217;t always work in the safari browser.&lt;/p&gt;

&lt;p&gt;This is in part due to the way that safari attaches events.&lt;/p&gt;

&lt;p&gt;In the control toolkit they use the following script to &amp;#8220;patch&amp;#8221; the april CTP of atlas to support safari a whole lot better. Some might find it useful :-)&lt;/p&gt;

&lt;p&gt;   40     // This fixes a bug in the Atlas Safari compatibility layer that&lt;/p&gt;

&lt;p&gt;   41  // prevents chaining multiple handlers to an event.  We will remove&lt;/p&gt;

&lt;p&gt;   42  // this after an Atlas CTP refresh resolves the underlying issue.&lt;/p&gt;

&lt;p&gt;   43  //&lt;/p&gt;

&lt;p&gt;   44  if (window.__safari) {&lt;/p&gt;

&lt;p&gt;   45     window.console.log(&amp;#8220;Patching Safari compat layer&amp;#8221;);&lt;/p&gt;

&lt;p&gt;   46     (function() {&lt;/p&gt;

&lt;p&gt;   47         var attachEventProxy = function(eventName, eventHandler) {&lt;/p&gt;

&lt;p&gt;   48             this.addEventListener(eventName.slice(2), eventHandler, true);&lt;/p&gt;

&lt;p&gt;   49         }&lt;/p&gt;

&lt;p&gt;   50 &lt;/p&gt;

&lt;p&gt;   51         var detachEventProxy = function (eventName, eventHandler) {&lt;/p&gt;

&lt;p&gt;   52             this.removeEventListener(eventName.slice(2), eventHandler, true);&lt;/p&gt;

&lt;p&gt;   53         }&lt;/p&gt;

&lt;p&gt;   54 &lt;/p&gt;

&lt;p&gt;   55         window[&amp;#8220;HTMLHtmlElement&amp;#8221;] = document.createElement(&amp;#8220;html&amp;#8221;).constructor;&lt;/p&gt;

&lt;p&gt;   56 &lt;/p&gt;

&lt;p&gt;   57         function HTMLElement() {}&lt;/p&gt;

&lt;p&gt;   58 &lt;/p&gt;

&lt;p&gt;   59         HTMLElement.prototype = HTMLHtmlElement.&lt;strong&gt;proto&lt;/strong&gt;.&lt;strong&gt;proto&lt;/strong&gt;;&lt;/p&gt;

&lt;p&gt;   60         var HTMLDocument = document.constructor;&lt;/p&gt;

&lt;p&gt;   61         window.attachEvent = attachEventProxy;&lt;/p&gt;

&lt;p&gt;   62         window.detachEvent = detachEventProxy;&lt;/p&gt;

&lt;p&gt;   63         HTMLDocument.prototype.attachEvent = attachEventProxy;&lt;/p&gt;

&lt;p&gt;   64         HTMLDocument.prototype.detachEvent = detachEventProxy;&lt;/p&gt;

&lt;p&gt;   65         HTMLElement.prototype.attachEvent = attachEventProxy;&lt;/p&gt;

&lt;p&gt;   66         HTMLElement.prototype.detachEvent = detachEventProxy;&lt;/p&gt;

&lt;p&gt;   67 &lt;/p&gt;

&lt;p&gt;   68     })();&lt;/p&gt;

&lt;p&gt;   69 }&lt;/p&gt;
</description>
        <published>2006-06-28 21:12:49 +0200</published>
        <link>http://flanders.co.nz/2006/06/28/safari-fix-for-the-client-library-of-atlas/</link>
      </item>
      
    
      
      <item>
        <title>Make ATLAS support the Guid in javascript</title>
        <description>
</description>
        <published>2006-06-24 13:31:26 +0200</published>
        <link>http://flanders.co.nz/2006/06/24/make-atlas-support-the-guid-in-javascript/</link>
      </item>
      
    
      
      <item>
        <title>Django vs ruby</title>
        <description>&lt;p&gt;Ruby looks to me like a hack. I&amp;#8217;m not the only one with problems there :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://tabo.aurealsys.com/archives/2005/10/11/django-or-why-i-chose-it-over-turbogears-and-ruby-on-rails/&quot;&gt;http://tabo.aurealsys.com/archives/2005/10/11/django-or-why-i-chose-it-over-turbogears-and-ruby-on-rails/&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I  decided to ignore Ruby for the moment and focus on Rails. What i noted:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Very simple to install and set up new projects&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You create a database and it’s tables, and Rails will handle them&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Things get messy when you want to write SQL instead of using the framework to access the data model&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;URL generation is simple but not flexible&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Rails templates looked ASPish, horrible, almost cthulhian. I couldn’t stand the sight of them. There is too much code in them and worst of all, I couldn’t find a way to change the template system (Clearsilver in Rails anyone?)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</description>
        <published>2006-06-24 08:33:49 +0200</published>
        <link>http://flanders.co.nz/2006/06/24/django-vs-ruby/</link>
      </item>
      
    
      
      <item>
        <title>Modern web design time division</title>
        <description>&lt;p&gt;My &lt;a href=&quot;http://blog.coolz0r.com/2006/06/24/modern-web-design/&quot;&gt;friend Miel &lt;/a&gt;found this site from &lt;a href=&quot;http://poisonedminds.com/d/20060621.html&quot;&gt;poisoned minds.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They have a nice breakdow on how time is really spent when developing a website. Of course this is good for a laugh :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://poisonedminds.com/comics/pm20060621.png&quot; alt=&quot;Poisoned mind webdesign piechart&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I think they do have a point with the pure css lay-out. I for one am a dropshadow fan because if I put 2 divs on top of each other they need to look like there is some distance between them. I like the depth af the whole idea.  Up till now I haven&amp;#8217;t found a way to create a rectangle with rounded corners and a dropshadow (like in photoshop or fireworks dropshadow) using only divs. I can do it easily using tables tho.&lt;/p&gt;

&lt;p&gt;But IE users must die. People love to attack microsoft stuff and I think those that complain about the quirks in IE start developing their site for other browsers than IE and that&amp;#8217;s where those people make a thinking mistake. The logic behind it is : if 95% of the users use IE why would you start developing a site that does not target this browser primarily.&lt;/p&gt;

&lt;p&gt;Actually it is really starting to piss me off. All the time spent whining about how bad everything is what ms does, while working on a Windows XP machine with Office 2003/7 and visual studio on it, the time should be spent on making your life and the life of others easier. If you understand pc&amp;#8217;s and coding a little it means you rarely have to be faced with the same problem twice.&lt;br/&gt;
I&amp;#8217;ve been making websites for 8 years now, most of them not so pretty especially the first few years :)&lt;br/&gt;
And I haven&amp;#8217;t come across the IE problem that all the others seem to be facing.  However i do have problems with browsers like Konqueror (this is just a piece of sh**), safari (Konqueror based say no more) and Opera.&lt;br/&gt;
Up to the point that i don&amp;#8217;t want to spend the money on supporting those (except for safari if it is really necessary).&lt;/p&gt;
</description>
        <published>2006-06-24 08:13:21 +0200</published>
        <link>http://flanders.co.nz/2006/06/24/modern-web-design-time-division/</link>
      </item>
      
    
      
      <item>
        <title>Essential Tools for web development</title>
        <description>&lt;p&gt;Peter has a post giving an overview of some tools that are essential to him as a developer.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jonesie.net.nz/EssentialTools.aspx&quot;&gt;http://jonesie.net.nz/EssentialTools.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I would say that I use most of them but not all and I would like to add a few to the list because i mainly do webdevelopment and that&amp;#8217;s a different story then winforms.&lt;br/&gt;
Obviously I made the choice to go for atlas so I won&amp;#8217;t sum up any other ajax frameworks. That is reserved for a separate post. &lt;/p&gt;

&lt;p&gt;AJAX/Web development:&lt;/p&gt;

&lt;p&gt;Internet Explorer : &lt;br/&gt;
&lt;a href=&quot;http://www.fiddlertool.com/Fiddler/version.asp&quot;&gt;Fiddler&lt;/a&gt; - a tool to view http traffic (that gets sent through IE)&lt;br/&gt;
&lt;a href=&quot;http://www.nikhilk.net/Project.WebDevHelper.aspx&quot;&gt;WebdevelopmentHelper BHO &lt;/a&gt;- A tool written by Nikhil Kothari and I consider it crucial&lt;br/&gt;
&lt;a href=&quot;http://www.microsoft.com/downloads/details.aspx?familyid=e59c3964-672d-4511-bb3e-2d5e1db91038&amp;amp;displaylang=en&quot;&gt;Internet Explorer Developer Toolbar&lt;/a&gt; - This has got a lot of cool things you do want to know about your page sometimes.&lt;/p&gt;

&lt;p&gt;Mozilla/firefox : &lt;br/&gt;
&lt;a href=&quot;http://greasemonkey.mozdev.org/&quot;&gt;Greasemonkey&lt;/a&gt; - makes firefox highly extensible.&lt;br/&gt;
&lt;a href=&quot;http://chrispederick.com/work/webdeveloper/&quot;&gt;WebDeveloper toolbar&lt;/a&gt; - This has got a lot of cool things you do want to know about your page sometimes.&lt;br/&gt;
&lt;a href=&quot;http://www.mozilla.org/projects/venkman/&quot;&gt;Venkman Javascript Debugger&lt;/a&gt; - Javascript debugging is a must :)&lt;br/&gt;
&lt;a href=&quot;http://blog.monstuff.com/archives/000291.html&quot;&gt;Greasemonkey Http Trace script&lt;/a&gt; - does the same as the BHO or fiddler for IE.&lt;/p&gt;

&lt;p&gt;Collaborative development:&lt;br/&gt;
We are mostly using team foundation server to do continuous integration. However sometimes when a lot of different parties are involved we can&amp;#8217;t use the team foundation testing suite and then we use other tools to do our integration.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.testdriven.net/default.aspx&quot;&gt;TestDriven.NET&lt;/a&gt; - does nunit testing and code coverage in VS 2005 - this used to be free but it isn&amp;#8217;t anymore.&lt;br/&gt;
&lt;a href=&quot;http://confluence.public.thoughtworks.org/display/CCNET/Welcome+to+CruiseControl.NET&quot;&gt;CruiseControl.NET&lt;/a&gt; - does the builds based on nAnt or msbuild build scripts etc. It&amp;#8217;s the continous integration server alternative that we use&lt;br/&gt;
&lt;a href=&quot;http://www.roland-weigelt.de/ghostdoc/&quot;&gt;GhostDoc&lt;/a&gt; - essential for documenting your code.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <published>2006-06-23 09:17:39 +0200</published>
        <link>http://flanders.co.nz/2006/06/23/essential-tools-for-web-development/</link>
      </item>
      
    
      
      <item>
        <title>Enable Intellisense for skin files</title>
        <description>&lt;p&gt;Vladimir Bychkov explains it nicely.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://vladimir.bychkov.info/blog/PermaLink,guid,be76b3bf-c524-456c-9c8f-a2584924aa32.aspx&quot;&gt;http://vladimir.bychkov.info/blog/PermaLink,guid,be76b3bf-c524-456c-9c8f-a2584924aa32.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will take a lot of the pain out of creating themes :)&lt;/p&gt;
</description>
        <published>2006-06-01 10:23:44 +0200</published>
        <link>http://flanders.co.nz/2006/06/01/enable-intellisense-for-skin-files/</link>
      </item>
      
    
      
      <item>
        <title>.NET User group meeting tonight</title>
        <description>&lt;p&gt;Tonight we had a user group meeting on XForms.&lt;/p&gt;

&lt;p&gt;First let me tell you that I think it is a big shame that we don&amp;#8217;t get Xforms capabilities in IE6 or in IE7.&lt;br/&gt;
It would get rid of all the javascript hassle and hoops we have to go through to get the simplest things done.&lt;/p&gt;

&lt;p&gt;Anyway, I&amp;#8217;ve been working with atlas a bit more now. And it is really cool just a shame that i can&amp;#8217;t use other libraries in conjunction.  But I still have to explore the animation api maybe if i can do things that i consider cool enough I don&amp;#8217;t need other libraries any more.&lt;/p&gt;

&lt;p&gt;Back to the user group meeting. &lt;a href=&quot;http://www.vistic.net&quot;&gt;Peter Nunn&lt;/a&gt;, the driving force behind a .NET XSP server application, came to give us a very passionate explanation on how xforms work and how they implemented them. &lt;br/&gt;
The effect you get is very similar to what I&amp;#8217;m doing with ATLAS for the moment. Async pages that just get data from webservices, some might even call it SOA.&lt;br/&gt;
Where ATLAS gets cluttered combining 3 technologies in one page, Xforms does everything completely through xml. More clean&amp;#8230; yes sir, more reusable .. yes sir, easily queriable.. yes sir.&lt;/p&gt;

&lt;p&gt;Conclusion : we want more of where that came from but this time on every platform. Just once everybody should agree.. would make the life of a lot of developpers a lot easier :)  Would probably put a lot of people out of business too.&lt;/p&gt;

&lt;p&gt;Would i use it ?  In the case where i develop for intranet applications i might be tempted to do so. As for my applications for uncontrolled environments (the internet) no thank you.&lt;br/&gt;
Xforms is only supported in firefox and while everybody is telling you how great mozilla is, my stats still show over 90% of my visitors use internet explorer. That being said, people trust plug-ins that are widely accepted like the flash plug-in. But people don&amp;#8217;t tend to trust obscure plug-ins from sourceforge, or other unknown companies in my experience.&lt;/p&gt;

&lt;p&gt;So I&amp;#8217;ll continue the ATLAS path that I chose to take until there is  cross browser XFORMS solution that has penetrated deeply enough in peoples living rooms.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <published>2006-05-31 21:04:33 +0200</published>
        <link>http://flanders.co.nz/2006/05/31/net-user-group-meeting-tonight/</link>
      </item>
      
    
      
      <item>
        <title>Vista Beta 2 has to go :-(((</title>
        <description>&lt;p&gt;The company that hosts one of the servers that I use online is using OpenVPN as their vpn server.&lt;/p&gt;

&lt;p&gt;And there are no drivers available voor the enhanced security model of Windows vista.  Yep let&amp;#8217;s call it enhanced security model instead of f***** security dialog boxes that pop up whenever you want to do something that is not an installed program on your pc.&lt;br/&gt;
I am loving vista absolutely so I&amp;#8217;m not uninstalling because I don&amp;#8217;t think it works.&lt;/p&gt;

&lt;p&gt;I just think that in my case it is too early to make the move untill openvpn has support for vista in their range. Otherwise I can&amp;#8217;t connect to my online sql server and server which makes my life at lot more stress free but eventually their would be less money coming in :)&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <published>2006-05-30 09:03:14 +0200</published>
        <link>http://flanders.co.nz/2006/05/30/vista-beta-2-has-to-go/</link>
      </item>
      
    
      
      <item>
        <title>Weird vista stuff</title>
        <description>&lt;p&gt;Apart from the fact that my bluetooth headset won&amp;#8217;t work with vista. I do have a few other things that keep my mind busy.&lt;/p&gt;

&lt;p&gt;I think it sucks I can&amp;#8217;t debug my asp.net apps when they are hosted on a UNC share. (this behavior was already present in XP)&lt;/p&gt;

&lt;p&gt;If you are like me then you rarely turn off your pc and have it do a lot of stuff for maintenance during the night. This would be nighthly spyware checking, nightly virus scanning and defragmenting on certain days of the month.&lt;br/&gt;
Well if I leave my pc on during the night with a IE window open and outlook my internet is sluggish up to the point that I just gave up.  I had a look on other pc&amp;#8217;s on my network and internet was indeed working fine. So I restarted my vista box and yes sir we have somewhat fast internet again.&lt;/p&gt;

&lt;p&gt;Anyway i still can&amp;#8217;t find anything wrong with office 2007 ==&gt; probably because I don&amp;#8217;t look for stuff to be wrong.  And I do like new Outlook interface with the new sidebar on the right. Keeps me better informed :)&lt;/p&gt;

&lt;p&gt;Mauricio has a few more things to say on vista, and probably he will be a better source for information than I am.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.geekzone.co.nz/blogtrack.asp?postid=597&quot;&gt;http://www.geekzone.co.nz/blogtrack.asp?postid=597&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <published>2006-05-29 09:11:56 +0200</published>
        <link>http://flanders.co.nz/2006/05/29/weird-vista-stuff/</link>
      </item>
      
    
      
      <item>
        <title>Vista : a first glance</title>
        <description>&lt;p&gt;I installed vista on my laptop yesterday.&lt;/p&gt;

&lt;p&gt;And the whole install is very hands-off and painless the price you pay is that it takes ages to complete. But it did install and upgrade my windows XP machine.&lt;/p&gt;

&lt;p&gt;After booting my new system twice I grabbed the phone and ordered 2GB of extra memory because before vista i was already pushing it so now it&amp;#8217;s just a necessity to get it.&lt;/p&gt;

&lt;p&gt;Vista works surprisingly well, it&amp;#8217;s a shame though that I still can&amp;#8217;t debug my asp.net applications when they are hosted on a network share instead of on my pc.  Sure i can remotely debug them but that experience is not as nice as locally. I do put everything on a network share because of backups. If you ever get your laptop stolen with a few weeks worth of work on them without a backup you&amp;#8217;ll never let it happen again&lt;/p&gt;

&lt;p&gt;My favourite new feature would be the navigation in explorer over the folders. and the way you can quickly backtrack your path etc.&lt;/p&gt;

&lt;p&gt;My least favourite new feature would be the never ending security warnings. If I say unblock on a program that wants to access my firewall then I mean it and I don&amp;#8217;t need to be asked 3 times. you don&amp;#8217;t read them but it kind of sucks that it freezes your screen.&lt;/p&gt;

&lt;p&gt;All the animations are really cool :) but due to my ram limitation for the moment they aren&amp;#8217;t as fluent as could be. I hope the Dell people will be quick to send me my new mem.&lt;/p&gt;

&lt;p&gt;I don&amp;#8217;t really know what to say about office because i rarely use it. I do use Outlook a lot, Word I also use but all the other programs are wasted on me because I just don&amp;#8217;t need them. Once or twice a year somebody sends me an access database. This database gets turned into sql very quickly ;).&lt;/p&gt;

&lt;p&gt;But that toolbar thingy in word : VERY cool and accessible :D&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m a happy emailer&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <published>2006-05-28 20:51:26 +0200</published>
        <link>http://flanders.co.nz/2006/05/28/vista-a-first-glance/</link>
      </item>
      
    
      
      <item>
        <title>Webstock was great !</title>
        <description>&lt;p&gt;Last week on thursday and friday, I attended the webstock convention.&lt;/p&gt;

&lt;p&gt;The greatest thing about webstock for me personally was that I got to meet all these people that I ordinarily never would meet.&lt;/p&gt;

&lt;p&gt;I considered myself very lucky when i got to have dinner with &lt;a href=&quot;http://www.stopdesign.com/&quot;&gt;Douglas Bowman&lt;/a&gt;. I do feel somewhat ashamed for the stupid questions I asked him.&lt;br/&gt;
I also got to have a chat with &lt;a href=&quot;http://www.gotomedia.com/&quot;&gt;Kelly Goto&lt;/a&gt;, who came to enlighten us about ethnographics and their huge impact on how websites are perceived.&lt;/p&gt;

&lt;p&gt;As if that wasn&amp;#8217;t enough I also came across Tony Chor who is responsible for the IE blog and Team, he was accompanied by Grandhi another big guy. Both very pleasant gentlemen indeed.&lt;/p&gt;

&lt;p&gt;Now back to webstock, what did I personally take from that whole experience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Accessibility&lt;/strong&gt; isn&amp;#8217;t to be neglected and should be right up there with &lt;strong&gt;Usability&lt;/strong&gt; &lt;br/&gt;
All those people came a very long way to make these points very clear and to make us, designers and developers alike, very aware of that the web is more and more turning into an integral part of social life. And has changed social life as we knew it a few years ago completely.  I still remember the days very vividly that I needed to phone my friend on his landline to confirm that he was home or to talk to him. &lt;br/&gt;
If he wasn&amp;#8217;t home too bad, better luck next time&amp;#8230;&lt;/p&gt;

&lt;p&gt;Sitting there gave me a few good ideas for websites that i can build in a reasonable amount of time.&lt;/p&gt;

&lt;p&gt;Yes I met a whole bunch of people, that I liked as much as the aformentioned people but they didn&amp;#8217;t stand up on the stage to fill peoples brains with fresh ideas and views.&lt;/p&gt;
</description>
        <published>2006-05-28 20:39:40 +0200</published>
        <link>http://flanders.co.nz/2006/05/28/webstock-was-great/</link>
      </item>
      
    
      
      <item>
        <title>Script# : Nikhil does it again</title>
        <description>&lt;p&gt;Nikhil Kothari must be one of my favourite programmers on the whole world. Beside having learned a lot from his blog posts and book. He also develops these great little tools that really help my life as a developer.&lt;/p&gt;

&lt;p&gt;This time he wrote a utility called Script# which let&amp;#8217;s you code normal c# code, not everything is supported yet but in Nikhil I trust ;) and translates it to javascript without all the hassle of writing javascript.&lt;/p&gt;

&lt;p&gt;I like the possibilities of javascript a lot but hate the whole scripting experience :)&lt;/p&gt;

&lt;p&gt;Anyway here&amp;#8217;s the link : &lt;a href=&quot;http://www.nikhilk.net/ScriptSharpIntro.aspx&quot;&gt;http://www.nikhilk.net/ScriptSharpIntro.aspx&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-05-27 22:58:17 +0200</published>
        <link>http://flanders.co.nz/2006/05/27/script-nikhil-does-it-again/</link>
      </item>
      
    
      
      <item>
        <title>ATLAS continued : Get the freetextbox going.</title>
        <description>&lt;p&gt;I decided after working a bit more with ATLAS that the client-side needs a LOT more documentation. Some cooperation with other javascript libraries would also be nice.  &lt;br/&gt;
A properly working dataservice is lacking.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve turned back to the server side controls.  The start of this whole mission was to keep the freetextbox control on a page and still don&amp;#8217;t have full postbacks.  Upload pictures with progressbar was going to be a plus.&lt;/p&gt;

&lt;p&gt;How to upload files from within an update panel is something that I will come back to in the future but it isn&amp;#8217;t going to be pretty.&lt;/p&gt;

&lt;p&gt;The things I&amp;#8217;m about to write I will wrap in a control later (when I have time) for people to download&lt;/p&gt;

&lt;p&gt;Anyways you wrap your freetextbox in an Iframe and it works. Don&amp;#8217;t add a scriptmanager to your iframe page.&lt;/p&gt;

&lt;p&gt;Put a hiddenfield on your main page and in the ClientSideTextChanged event of the freetextbox control you update the hiddenfield on the parent.  If you wrap it inside a control then I suggest you add a property to the control that holds the Text variable :)&lt;/p&gt;

&lt;p&gt;That&amp;#8217;s about it, easy isn&amp;#8217;t it.&lt;/p&gt;
</description>
        <published>2006-05-22 09:02:25 +0200</published>
        <link>http://flanders.co.nz/2006/05/22/atlas-continued-get-the-freetextbox-going/</link>
      </item>
      
    
      
      <item>
        <title>Intellisense for Atlas Xml Script</title>
        <description>&lt;p&gt;I&amp;#8217;ve come across a french guy&amp;#8217;s blog who has created an intellisens xsd generator for the atlas framework.&lt;/p&gt;

&lt;p&gt;He says it&amp;#8217;s not perfect but I&amp;#8217;ll take whatever I can get that saves me from writing full words. It&amp;#8217;s not perfect in the sense that it doesn&amp;#8217;t show you if something is allowed there or not.&lt;/p&gt;

&lt;p&gt;The link to the article about the intellisense generator:&lt;br/&gt;
&lt;a href=&quot;http://blogs.developpeur.org/cyril/archive/2006/04/19/Intellisense_pour_Atlas_c_est_possible_generation_schema_xsd_en_javascript.aspx&quot;&gt;http://blogs.developpeur.org/cyril/archive/2006/04/19/Intellisense_pour_Atlas_c_est_possible_generation_schema_xsd_en_javascript.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To install the xsd just extract &lt;a href=&quot;http://www.cyrildurand.net/divers/fichiers/AtlasIntelissense.xsd.zip&quot;&gt;this file&lt;/a&gt; to &lt;em&gt;C:\Program Files\Microsoft Visual Studio 8\Xml\Schemas&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The next step is to separate the xml script from your aspx page so it doesn&amp;#8217;t look so cluttered anymore. Also the intellisense will only work in the xml editor.  The same guy has written another post on how to do just that.&lt;/p&gt;

&lt;p&gt;The link to his article : &lt;a href=&quot;http://blogs.developpeur.org/cyril/archive/2006/04/29/Atlas_Charge_un_fichier_xml_script_externe_dans_une_application_ATLAS_grace_a_Ajax.aspx&quot;&gt;http://blogs.developpeur.org/cyril/archive/2006/04/29/Atlas_Charge_un_fichier_xml_script_externe_dans_une_application_ATLAS_grace_a_Ajax.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The english explanation : &lt;br/&gt;
link to your atlas xml file like this : &lt;link type=&quot;text/xml-script&quot; href=&quot;DynamicLoad.atlas&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And next add some javascript to the page :&lt;/p&gt;

&lt;p&gt;Sys.Application.load.add(function(){&lt;br/&gt;
     var linkElements = document.getElementsByTagName(&amp;#8216;link&amp;#8217;);&lt;br/&gt;
     &lt;br/&gt;
     for (var i = 0; i &amp;lt; linkElements.length; i++){&lt;br/&gt;
            linkElement = linkElements[i]; &lt;br/&gt;
            if (linkElement.type= &amp;#8216;text/xml-script&amp;#8217; &amp;amp;&amp;amp; linkElement.href){&lt;br/&gt;
                   var request = new Sys.Net.WebRequest();&lt;br/&gt;
                   request.set_url(linkElement.href);&lt;br/&gt;
                   request.completed.add(function(e){&lt;br/&gt;
                        Sys.MarkupParser.processDocumentScripts(Sys.Application.getMarkupContext(), e.get_xml().childNodes, null);&lt;br/&gt;
                  });   &lt;br/&gt;
                  request.invoke(); &lt;br/&gt;
           }&lt;br/&gt;
     }&lt;/p&gt;

&lt;p&gt;});&lt;/p&gt;
</description>
        <published>2006-05-20 13:24:08 +0200</published>
        <link>http://flanders.co.nz/2006/05/20/intellisense-for-atlas-xml-script/</link>
      </item>
      
    
      
      <item>
        <title>A .NET IM VOIP client</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://synced0.blogspot.com/2006/03/intro-to-nexxia-messenger.html&quot;&gt;http://synced0.blogspot.com/2006/03/intro-to-nexxia-messenger.html&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-05-20 13:10:04 +0200</published>
        <link>http://flanders.co.nz/2006/05/20/a-net-im-voip-client/</link>
      </item>
      
    
      
      <item>
        <title>ATLAS cracked the nut</title>
        <description>&lt;p&gt;Ever since i knew about the ATLAS framework it intrigued me because it offers a lot of the features that made me avoid javascript in the past.  The issues that kept me from using javascript are well known to everybody who wrote 7 lines of javascript. Basically it comes down to browser differences in understanding javascript and the differences in the DOM implementation for the two.&lt;/p&gt;

&lt;p&gt;Then there was Ajax.NET very nice but a lot of extra programming is involved to get minor ajaxy effects. and still the browser incompatibility.&lt;/p&gt;

&lt;p&gt;Actually I wasn&amp;#8217;t looking for an ajax framework I wanted  the whole deal. And I stumbled upon ATLAS like many others have of course.  I had been using ajax in intranet applications through the magixajax panel, which still has at least one feature that the update panel from atlas doesn&amp;#8217;t have : the ability of a button to cause a regular postback from inside a panel.  It can be implemented in atlas by using a clientside control and have that cause a postback when it&amp;#8217;s clicked.&lt;/p&gt;

&lt;p&gt;Then &lt;a href=&quot;http://www.ims.co.nz/blog&quot;&gt;Tim Haines&lt;/a&gt; told me about the Anthem library. A library of controls that add instant ajax abilities to numerous familiar controls.  The library works well but i found it hard to debug hence it slowed me down a lot. I am not using Anthem anymore.&lt;/p&gt;

&lt;p&gt;The atlas framework was exactly what i wanted: extensible, cross-browser and shiny :)&lt;br/&gt;
The entry into the atlas world was definitely not the easiest one ever.  It started out with the updatepanels and the server side controls along with the AtlasControlToolkit. And from seeing how things worked in the control toolkit. &lt;br/&gt;
The updatepanel is a great tool for enhancing existing apps with instant ajax abilities, that much is certain. A downside I found with the updatepanel was the fact that the response you get back from the server is the full html version for your page and some added lines.  Not really a bandwith saver I would say. Accompanied with the fact that you can&amp;#8217;t put a freetextbox inside an updatepanel nor a file upload control made it a close but no cigar kinda tool.  The data exchange is what bugged me the most because more data means slower pages etc&amp;#8230;&lt;/p&gt;

&lt;p&gt;The next step presented itself, get using webservices and do the processing client-side. Cool let&amp;#8217;s take a look at the samples from the documentation. Aha a data service that sounds interesting. Ooops wait a minute xml script. So it took me a some time to get over the fact that it is xml script and to be convinced xml script does save you from writing tons of lines in javascript. Once you get used to the xml script it reads ok and more quickly than javascript.&lt;br/&gt;
The dataservice looked very cool.. it takes care of the processing of the datatables returned from my BLL. I tried to get it to work for a very long time but all I could get out of it was that it displays records (that part I had after 5 minutes) but i can&amp;#8217;t get it to save my data back to the database (that part cost me 2 days at least). This is through bindings and xml script.  No updating kinda cripples my whole application :( &lt;/p&gt;

&lt;p&gt;A day later i got it working after digging deeper and doing a lot of googling and live searching. I still can&amp;#8217;t use the dataservice except for loading data. but I can use regular webmethods to put stuff in the database and use the load method of the dataservice to get the fresh data bound to the listview and itemview controls&lt;/p&gt;

&lt;p&gt;So now I can have my somewhat SOA oriented applications and not spend hours trying to resolve browser issues or write thousands lines of javascript to parse my results into the page.&lt;/p&gt;

&lt;p&gt;Resources that I found to be very helpful : &lt;br/&gt;
&lt;a href=&quot;http://atlas.asp.net/docs/Client/Browser/jsBrowser.aspx&quot;&gt;http://atlas.asp.net/docs/Client/Browser/jsBrowser.aspx&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://atlas.asp.net/docs/default.aspx&quot;&gt;http://atlas.asp.net/docs/default.aspx&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://atlas.asp.net/docs/Client/default.aspx&quot;&gt;http://atlas.asp.net/docs/Client/default.aspx&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://aspadvice.com/blogs/garbin/archive/2006/03/05/15591.aspx&quot;&gt;http://aspadvice.com/blogs/garbin/archive/2006/03/05/15591.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Javascript transitions and good scripts can also be gotten from script.aculo.us &lt;br/&gt;
&lt;a href=&quot;http://script.aculo.us/&quot;&gt;http://script.aculo.us/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another problem with an ajax application is that the history button behavour gets broken. Or at least doesn&amp;#8217;t work as it is supposed to work. There is a library out there called the Real Simple History Framework that makes that a thing from the past. &lt;br/&gt;
A detailed article can be found here :&lt;br/&gt;
&lt;a href=&quot;http://www.onjava.com/pub/a/onjava/2005/10/26/ajax-handling-bookmarks-and-back-button.html?page=1&quot;&gt;http://www.onjava.com/pub/a/onjava/2005/10/26/ajax-handling-bookmarks-and-back-button.html?page=1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <published>2006-05-20 12:32:45 +0200</published>
        <link>http://flanders.co.nz/2006/05/20/atlas-cracked-the-nut/</link>
      </item>
      
    
      
      <item>
        <title>SqlCommandBuilder .. The one I forgot to complete the puzzel</title>
        <description>&lt;p&gt;Basically:.NET 2.0 is too cool :)))&lt;/p&gt;

&lt;p&gt;After exploring the smo classes the last part of the afternoon was about creating migrating the data. I hadn&amp;#8217;t used the ado api fully but remembered something about the commandbuilder. My conclusion : Worth taking a look at.&lt;/p&gt;

&lt;p&gt;I do realise that it isn&amp;#8217;t the worlds prettiest sql that gets generated but it gets the job done.  And in the case of my 125 tables that i need to migrate FAST it will save me about 1-2 weeks of writing import procedures etc. Generic datatable updates by writing one sql select command.&lt;/p&gt;

&lt;p&gt;   18  public void ImportData(DataTable dt)&lt;/p&gt;

&lt;p&gt;   19         {&lt;/p&gt;

&lt;p&gt;   20             System.Text.StringBuilder sb = new StringBuilder();&lt;/p&gt;

&lt;p&gt;   21             using (SqlConnection conn = new SqlConnection(ConfigurationManager.ConnectionStrings[&amp;#8220;ConnectionString&amp;#8221;].ConnectionString))&lt;/p&gt;

&lt;p&gt;   22             {&lt;/p&gt;

&lt;p&gt;   23                 SqlCommand cmd = new SqlCommand(string.Format(&amp;#8220;Select * from {0}&amp;#8221;, dt.TableName),conn);&lt;/p&gt;

&lt;p&gt;   24                 SqlDataAdapter da = new SqlDataAdapter(cmd);&lt;/p&gt;

&lt;p&gt;   25                 SqlCommandBuilder builder = new SqlCommandBuilder(da);&lt;/p&gt;

&lt;p&gt;   26                 //da.UpdateBatchSize = 15;&lt;/p&gt;

&lt;p&gt;   27                 da.Update(dt);&lt;/p&gt;

&lt;p&gt;   28 &lt;/p&gt;

&lt;p&gt;   29             }&lt;/p&gt;

&lt;p&gt;   30         }&lt;/p&gt;
</description>
        <published>2006-05-04 18:53:53 +0200</published>
        <link>http://flanders.co.nz/2006/05/04/sqlcommandbuilder-the-one-i-forgot-to-complete-the-puzzel/</link>
      </item>
      
    
      
      <item>
        <title>Woohoo&#8230; Microsoft.SqlServer.Management.Smo</title>
        <description>&lt;p&gt;The problem I was facing is that I need to keep an accounting database in sync with the &amp;#8220;real&amp;#8221; application this company uses.&lt;/p&gt;

&lt;p&gt;I don&amp;#8217;t need all the tables but about 125 need to be imported with data and the whole shabang.&lt;/p&gt;

&lt;p&gt;In my mind the best way to do that is to have something iterate the whole database, fill up a dataset and start creating the tables in sql if they don&amp;#8217;t exist. Next step is to import all the data from the dataset into the new database.&lt;/p&gt;

&lt;p&gt;Obviously this can be done if you just look at the dataset generator. It reads schema&amp;#8217;s and creates .net objects from database tables.&lt;br/&gt;
But how do i create tables ? And how do i do it without having to write long sql strings ?&lt;/p&gt;

&lt;p&gt;The answer is : &lt;strong&gt;Microsoft.SqlServer.Management.Smo&lt;br/&gt;
A managed library to manipulate sql 2005 :)&lt;/strong&gt; &lt;br/&gt;
You can create any number of items with this library including databases, tables, functions, views, stored procedures &amp;#8230;.&lt;br/&gt;
Hence woohoo.&lt;/p&gt;

&lt;p&gt;To support just the simple types (no objects) I now have a class that does exactly what I want it to do import a database and it took me about 70 lines of code :)&lt;/p&gt;

&lt;p&gt;All you need to know to get started can be found on the microsoft website or on david haydens website, that&amp;#8217;s where I learned of the existence of this namespace.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://davidhayden.com/blog/dave/archive/2006/01/27/2775.aspx&quot;&gt;http://davidhayden.com/blog/dave/archive/2006/01/27/2775.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://msdn2.microsoft.com/en-US/library/ms162203.aspx&quot;&gt;http://msdn2.microsoft.com/en-US/library/ms162203.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I won&amp;#8217;t be putting up any code with this post because it&amp;#8217;s too easy.  If you do run into problems, i can provide you with a snippet :)&lt;/p&gt;
</description>
        <published>2006-05-03 21:43:54 +0200</published>
        <link>http://flanders.co.nz/2006/05/03/woohoo-microsoftsqlservermanagementsmo/</link>
      </item>
      
    
      
      <item>
        <title>Generics are great</title>
        <description>&lt;p&gt;Today I explored generics properly and I must admit that I&amp;#8217;m very sorry i did not take the time earlier&lt;/p&gt;

&lt;p&gt;Bottom line : GENERICS ARE GREAT&lt;/p&gt;
</description>
        <published>2006-03-15 16:21:18 +0100</published>
        <link>http://flanders.co.nz/2006/03/15/generics-are-great/</link>
      </item>
      
    
      
      <item>
        <title>Multi-Threading in asp.net</title>
        <description>&lt;p&gt;I got a question asked just recently about multi threading and async execution of a page.&lt;/p&gt;

&lt;p&gt;About async execution I am a little bit biased because for asp.net I don&amp;#8217;t really see a huge benefit most of the time and I really believe it should be used very wisely.&lt;/p&gt;

&lt;p&gt;Spawning threads on the other hand is more convient for lengthy operations that are not essential to the execution of the page.  I will just copy paste the mail I&amp;#8217;ve sent to the other guy. It came with a question on what about cleaning of the objects afterwards&lt;/p&gt;

&lt;p&gt;If you use it async &lt;a href=&quot;http://asp.net/&quot;&gt;asp.net&lt;/a&gt; should take care of the cleaning.&lt;/p&gt;

&lt;p&gt;I haven&amp;#8217;t used the async scenario yet because I jump to separate threads more quickly that way my page isn&amp;#8217;t blocked ever and I can update the interface through a timed ajax call to a webservice.&lt;/p&gt;

&lt;p&gt;I use the multi threading to send mass emails with progress bar etc.&lt;/p&gt;

&lt;p&gt;Once you&amp;#8217;ve done it you will see that it is pretty easy to implement and has IMHO more advantages than simply executing a page async because you don&amp;#8217;t have to wait for the execution to end.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;You start by making a worker class with a parameterised constructor that implements at least the following interface&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;    4     interface IAggregatorWorker&lt;/p&gt;

&lt;p&gt;    5     {&lt;/p&gt;

&lt;p&gt;    6         void ExecuteTask();&lt;/p&gt;

&lt;p&gt;    7         bool KeepRunning { get; set; }&lt;/p&gt;

&lt;p&gt;    8     }&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The execute task method is the method where you do your work as long as KeepRunning is set to true.  I believe that sessionstate is unavailable in a spawned thread so you will have to find a way to persist your session objects differently if you are needing them at all.&lt;/p&gt;

&lt;p&gt;If you want to add properties for the worker thread to work with you that is no problem it behaves as a normal class as far as i can tell&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;In your page you start a thread by instantiating your workerclass and setting the properties&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;   45         BLL.MailThreadWorker mtc = new BLL.MailThreadWorker();&lt;/p&gt;

&lt;p&gt;   46         mtc.Body = tbBody.Text;&lt;/p&gt;

&lt;p&gt;   47         mtc.Subject = tbSubject.Text;&lt;/p&gt;

&lt;p&gt;   48         Guid id = Guid.NewGuid();&lt;/p&gt;

&lt;p&gt;   49         mtc.BaseUrl = Request.Url.DnsSafeHost;&lt;/p&gt;

&lt;p&gt;   50         mtc.SessionId = id;&lt;/p&gt;

&lt;p&gt;   51         System.Threading.Thread thread = new System.Threading.Thread( new System.Threading.ThreadStart(mtc.MailingStart));&lt;/p&gt;

&lt;p&gt;   52         thread.Name = &amp;#8220;MailingThread&amp;#8221; ;&lt;/p&gt;

&lt;p&gt;   53         thread.Start();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;You can stop or suspend the thread at any time and then you can dispose of your objects that are still hanging around. By setting the property of KeepRunning property of the worker instance to false.&lt;/p&gt;

&lt;p&gt;and there you should do your clean-up.  The code from the mailingthread is taken from the code beside (i believe is the new word for the file) of my aspx page.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;This is a link to an article on msdn that explains it probably a lot cleaner than I ever can. Other good examples to look at what you can do with threading is to look after articles about windows services there are a few that explain the concept really clearly&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dv_vstechart/html/vbtchUsingThreads.asp&quot;&gt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dv_vstechart/html/vbtchUsingThreads.asp &lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-03-01 21:30:15 +0100</published>
        <link>http://flanders.co.nz/2006/03/01/multi-threading-in-aspnet/</link>
      </item>
      
    
      
      <item>
        <title>FTP Server with sql acces</title>
        <description>&lt;p&gt;I have the need to run an ftp server for one of my applications. It is to complement a web application where there is a pretty big datatransfer.  Users need to be able to register and upon activation they need to be able to upload movies (20-70MB) to a folder online. These movies need to be made available online and proposed for review to somebody in the company.&lt;/p&gt;

&lt;p&gt;So far so good. Were it not that we are running IIS Ftp server for the moment who stores it&amp;#8217;s users in the AD of the server. That is not the place where I want to store credentials for my users. Also I wanted to make only one folder available for a user and to accomplish this IIS is just too difficult to manage.  Thus again time for an internet hunt and yessss there is is Blackmoon FTP server who allows to do the entire configuration in a sql database or an access database. &lt;/p&gt;

&lt;p&gt;Fits like a glove in my opinion :) &lt;br/&gt;
I downloaded it, installed it end yes it just works. I can now do the full configuration through the generated DAL from ORM.NET. All it took to integrate an FTP server in my application was one afternoon and that&amp;#8217;s it.&lt;/p&gt;

&lt;p&gt;You can download blackmoon from their site. They offer a free version for personal use. But even from the enterprise edition with domain license you won&amp;#8217;t become  poor man :)&lt;br/&gt;
http://www.blackmoonftpserver.com&lt;/p&gt;
</description>
        <published>2006-03-01 16:36:58 +0100</published>
        <link>http://flanders.co.nz/2006/03/01/ftp-server-with-sql-acces/</link>
      </item>
      
    
      
      <item>
        <title>A poor man&#8217;s code generation</title>
        <description>&lt;p&gt;There has been a lot of talk about code generation and ORM software around where I was.&lt;/p&gt;

&lt;p&gt;I got curious and embarked on a free codegeneration exploration. Being new to the concept of codegeneration my requirements were the following :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It needs to be faster then the dataset generator of visual studio 2005&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It needs to support relations&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It needs to support stored procedures or at the very least use dynamic query language that uses parameters to set up queries to the database.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It needs to be with a very very fast learning curve.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It needs to be free (although I also looked at the wilson O/R mapper which is practically free and LLBL codegen which is definetely not free)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;These are my findings :&lt;/p&gt;

&lt;p&gt;The one that is most easily found is mygeneration with the dOOdads architecture out of the box. Of course you can create your own templates to customize the generated code to you your specific needs and architecture.&lt;br/&gt;
my generation can be found at : &lt;a href=&quot;http://www.mygenerationsoftware.com/portal/default.aspx&quot;&gt;http://www.mygenerationsoftware.com/portal/default.aspx&lt;/a&gt;&lt;br/&gt;
It does work fine but the dOOdads architecture does not support relations and these you have to make yourself again.  I found it all a bit too much fiddling about and it didn&amp;#8217;t meet my 2 of my requirements, thus the search went on.&lt;/p&gt;

&lt;p&gt;Next I found ORM.NET, which is the one I am using for the moment. Total setup time of a DAL that is easily queried 1,5 min flat. I was impressed, and best of all it is completely free. Apparently it is written by a consulting firm that used it for their internal needs. They no longer support it and it turned open source.&lt;br/&gt;
ORM.NET gets my stars. And I will be using it a lot in simpler scenario&amp;#8217;s like websites etc.&lt;br/&gt;
ORM.NET can be found at : &lt;a href=&quot;http://www.olero.com/OrmWeb/index.aspx?p=ORM.ascx&quot;&gt;http://www.olero.com/OrmWeb/index.aspx?p=ORM.ascx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While looking for some documentation on ORM.NET I came across a link to ntiergen.net which can handle about any job. It generates stored procedures for you, along the DAL and the needed classes. You get to configure all your stored procedures beforehand and get the opportunity to create views and complicated queries through their interface.  Normally it is priced at $449 but the link I found offers a fully functional licensed version open for the public. I downloaded it and just gave it a brief look as I am very pressed for time at the moment.&lt;br/&gt;
nTierGen.NET can be found at &lt;a href=&quot;http://weblogs.asp.net/gavinjoyce/archive/2004/08/28/222017.aspx&quot;&gt;http://weblogs.asp.net/gavinjoyce/archive/2004/08/28/222017.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy code generating !!!&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <published>2006-03-01 15:50:25 +0100</published>
        <link>http://flanders.co.nz/2006/03/01/a-poor-mans-code-generation/</link>
      </item>
      
    
      
      <item>
        <title>Quirky IE behaviour for Add Event Listener</title>
        <description>&lt;p&gt;Today I had to build something so I needed to add multiple functions to the window.onload event&lt;/p&gt;

&lt;p&gt;So what I discovered today is when you use the following snippet for attaching events .. They don&amp;#8217;t get loaded in the right order by this I mean Firefox fires the one that says yay first and then the again one&amp;#8230; IE fires first the latter and then the first.  Nothing to be worried about for the moment,in my case at least, but when you need it to initialise some functions.. it can get you into a lot of head scratching.&lt;/p&gt;

&lt;p&gt;function myAddEvent(obj, event, listener, useCapture) {&lt;br/&gt;
  // Non-IE&lt;br/&gt;
  if(obj.addEventListener) {&lt;br/&gt;
    if(!useCapture) useCapture = false;&lt;/p&gt;

&lt;p&gt;    obj.addEventListener(event, listener, useCapture);&lt;br/&gt;
    return true;&lt;br/&gt;
  }&lt;/p&gt;

&lt;p&gt;  // IE&lt;br/&gt;
  else if(obj.attachEvent) {&lt;br/&gt;
    return obj.attachEvent(&amp;#8216;on&amp;#8217;+event, listener);&lt;br/&gt;
  }&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;function myListener() {&lt;br/&gt;
  alert(&amp;#8216;yay&amp;#8217;);&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;function myListener2() {&lt;br/&gt;
  alert(&amp;#8216;yay again&amp;#8217;);&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;myAddEvent(window, &amp;#8216;load&amp;#8217;, myListener);&lt;br/&gt;
myAddEvent(window, &amp;#8216;load&amp;#8217;, myListener2);&lt;/p&gt;
</description>
        <published>2006-02-28 14:18:44 +0100</published>
        <link>http://flanders.co.nz/2006/02/28/quirky-ie-behaviour-for-add-event-listener/</link>
      </item>
      
    
      
      <item>
        <title>Seems like work isn&#8217;t slowing down for the moment</title>
        <description>&lt;p&gt;I thought I was busy before I got this thing on my hand.   Now it&amp;#8217;s even worse.  &lt;br/&gt;
I don&amp;#8217;t know where to crawl first.&lt;/p&gt;

&lt;p&gt;I got my MYOB professional partner subscription last week and am trying to integrate it now in the program I&amp;#8217;m writing.  And I have to say.. It&amp;#8217;s not all that hard.. just open the docs and you&amp;#8217;re good to go.&lt;/p&gt;

&lt;p&gt;But what annoys the hell out of me, apart from not being able to run myob on a win2k3 server, is that myob is slow as a dog.  A request can easily take up to 30 seconds to complete. This gives me an excuse to delve into the async pattern. It appeals a lot to me.. but seens as I &amp;#8216;m always pressed for time I don&amp;#8217;t get to experiment all that often.. But this problem does give me the necessity to do it.&lt;/p&gt;

&lt;p&gt;Maybe I will post my findings later.  If the async pattern doesn&amp;#8217;t give me a good viable solution to my problem I have another way of going about it.  SQL server 2005 supports managed code, which we are all very aware off, so&lt;em&gt; &lt;/em&gt; I can reference and consume a webservice and stick all the myob datatable queries in a sql db as xml, index it and it is also searchable.&lt;/p&gt;

&lt;p&gt;But first let&amp;#8217;s get to the async pattern..&lt;/p&gt;
</description>
        <published>2006-02-26 20:30:42 +0100</published>
        <link>http://flanders.co.nz/2006/02/26/seems-like-work-isnt-slowing-down-for-the-moment/</link>
      </item>
      
    
      
      <item>
        <title>After one month of being banned from pc</title>
        <description>&lt;p&gt;I have been suffering from tendonitis and I found the time was come to take a break. So did my doctor who told me no pc for one month.. Well this has just been horrible because on top of not using a pc I was also banned from writing. In fact it was better to just not use or move my right hand completely.&lt;/p&gt;

&lt;p&gt;Uhm, I failed ;-) The writing no problemo I hardly ever write on a piece of paper (Save the trees !!!). The not using my right hand, well i interpreted unless you absolutely have to, because even now I still can&amp;#8217;t roll a cigarette with only my left (bad) hand.&lt;br/&gt;
The not using a pc .. let&amp;#8217;s say : Hello Dragon Natural Speaking. That&amp;#8217;s the name of my new friend :)  It took a while before it recognized my english, I&amp;#8217;m suffering from a bad accent, somewhere between German and Dutch I&amp;#8217;m told.&lt;/p&gt;

&lt;p&gt;But programming C# or Javascript with natural speaking is not what you want to do, so my pc usage was limited to writing English mails and having English chats or skyping to some the friends.&lt;/p&gt;

&lt;p&gt;Anyway I&amp;#8217;m back in action now and am not planning to take a break for some time to come.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <published>2006-02-14 10:27:00 +0100</published>
        <link>http://flanders.co.nz/2006/02/14/after-one-month-of-being-banned-from-pc/</link>
      </item>
      
    
      
      <item>
        <title>Can&#8217;t remember the connection string ?</title>
        <description>&lt;p&gt;There is a website out there that remembers them for you.  I&amp;#8217;ve used them on multiple occasions because my memory for these things seems to be in need of a reboot&lt;/p&gt;

&lt;p&gt;Anyway here&amp;#8217;s the url : http://www.connectionstrings.com/&lt;/p&gt;
</description>
        <published>2006-01-08 09:34:45 +0100</published>
        <link>http://flanders.co.nz/2006/01/08/cant-remember-the-connection-string/</link>
      </item>
      
    
      
      <item>
        <title>Compressing your ASP.NET 2.0 pages</title>
        <description>&lt;p&gt;After installing Dasblog I had problems with the compression module of &lt;a href=&quot;http://www.blowery.org/blog/Trackback.aspx?guid=116eb7f1-b368-46d1-a48d-346911a2e82c&quot;&gt;Ben Lowery&lt;/a&gt;. &lt;br/&gt;
In .NET 1.1 I had exactly the same problems.  No output was generated to the browser.&lt;/p&gt;

&lt;p&gt;I dissected his code and found that it could be greatly simplified, so i decided to rewrite it to a .NET 2.0 version.&lt;/p&gt;

&lt;p&gt;The first thing that needed to be done was rewrite the configuration, next get rid of all the inherited streams that were there for no reason in my opinion but to add some headers to the stream. I decided to hook them, the headers, up after I was sure that everything was compressed ok.&lt;/p&gt;

&lt;p&gt;In the blowery module you can provide paths in the web.config that need to be excluded and this works well as long as your app is running on a virtual directory and not on a website. If your page is &lt;a href=&quot;http://www.foo.com/default2.aspx&quot;&gt;www.foo.com/default2.aspx&lt;/a&gt; that needs to be excluded his parser returns efault2.aspx so I changed that to work properly as well.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve provided a zip with this post that contains the module, which you can use freely as long as you leave the copyright notice intact. If you have any questions do not hesitate to ask.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.flanders.co.nz/Blog/content/binary/HttpCompress.zip&quot;&gt;HttpCompress.zip (34.48 KB)&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2006-01-07 08:09:23 +0100</published>
        <link>http://flanders.co.nz/2006/01/07/compressing-your-aspnet-20-pages/</link>
      </item>
      
    
      
      <item>
        <title>Switched blogs today</title>
        <description>&lt;p&gt;I changed blogs today. My new blog can be found at &lt;a href=&quot;http://www.flanders.co.nz/blog&quot;&gt;http://www.flanders.co.nz/blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Together with the blog I also built a new site.. The only thing that is left to do for me is to migrate the posts from geeks to the new one.&lt;br/&gt;
This blog will allow me to post zip files with projects to go with the posts about coding that I do.&lt;/p&gt;

&lt;p&gt;I really love .NET 2.0 everything goes pretty quickly. To build my new site I spent about 14 hours that is for designing, lay-out in masterpages, sql database and content input. The site is bilingual so when dutch people hit my site they get almost everything in dutch and the rest of the world gets it in english.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <published>2006-01-05 14:43:28 +0100</published>
        <link>http://flanders.co.nz/2006/01/05/switched-blogs-today/</link>
      </item>
      
    
      
      <item>
        <title>Webresource.axd. How do I use it ???</title>
        <description>&lt;p&gt;Ever since I got my hands on .NET 2.0 I noticed the handler webresource.axd which seemed to provide a similar function as what I was using handlers for. &lt;/p&gt;

&lt;p&gt;I used handlers in .NET 1.1 and before today also in .NET 2.0 to handle my javascript and css that I need in controls I developped. &lt;br/&gt;
I mark them before compiling as embedded resource and then later on read them out via reflection and they get served up by the browser.&lt;/p&gt;

&lt;p&gt;I probably don&amp;#8217;t have to explain that (as long as your parameters don&amp;#8217;t change) this scripts get cached by the browser so they will only be downloaded once and re-used afterwards.&lt;/p&gt;

&lt;p&gt;Well in asp.NET 2.0 there is a feature that uses webresource.axd to handle all kinds of embedded resources (images, pages, etc&amp;#8230;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nikhilk.net/WebResourceAttribute.aspx&quot;&gt;Nikhil Kothari &lt;/a&gt;has a post on how to use them in &lt;a href=&quot;http://www.nikhilk.net/WebResourceAttribute.aspx&quot;&gt;his blog&lt;/a&gt;, and I just copy pasted the text below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Using Web Resources&lt;br/&gt;
&lt;/em&gt;&lt;/strong&gt;Imagine I am writing an HtmlEditor control and I want to use a stock bold button icon. Here&amp;#8217;s what I&amp;#8217;d do:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Embed &amp;#8220;Bold.gif&amp;#8221; as a resource with the same name into my control&amp;#8217;s assembly.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mark it as Web-accessible via the attribute:&lt;br/&gt;
&lt;code&gt;    [assembly: WebResource(&quot;Bold.gif&quot;, ContentType.ImageGif)]&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use the GetWebResourceUrl() method on Page to get a URL that can be rendered out to the client.&lt;br/&gt;
&lt;code&gt;    boldButton.ImageUrl = Page.GetWebResourceUrl(typeof(HtmlEditor), &quot;Bold.gif&quot;);&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;This results in a URL of the form:&lt;br/&gt;
&lt;code&gt;    WebResource.axd?a=MyControls&amp;amp;r;=Bold.gif&amp;amp;t;=632059604175183419&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.pheedo.com/click.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot;&gt;&lt;img src=&quot;http://www.pheedo.com/img.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://geekswithblogs.net/casualjim/aggbug/59980.aspx&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <published>2006-01-04 19:53:32 +0100</published>
        <link>http://flanders.co.nz/2006/01/04/webresourceaxd-how-do-i-use-it/</link>
      </item>
      
    
      
      <item>
        <title>WebDav Exchange &#8230; </title>
        <description>&lt;p&gt;I live in new zealand.&lt;/p&gt;

&lt;p&gt;I can successfully create appointments in exchange using webDAV.  But I can only create them in the timezone Z if I change the timezone to Y (which is mine) I always get bad request.&lt;/p&gt;

&lt;p&gt;Do I say ok.. so not during string conversion but I just calculate the offset and add that to the date and create the appointment then that should be ok. Also not !!!&lt;/p&gt;

&lt;p&gt;My conversion function is very basic but i didn&amp;#8217;t find a way to get it properly formatted in .NET so this is my way. The function below ends with “Y“ and this doesn&amp;#8217;t work, when I end it on Z it does work. Any suggestions ?&lt;/p&gt;

&lt;p&gt;All sorted now.. instead of passing on the timezone I should replace the Y with the offset of the timezone to +13:00 in the new zealand case.&lt;/p&gt;

&lt;p&gt;string&lt;/p&gt;

&lt;p&gt;formatDate(DateTime input){&lt;/p&gt;

&lt;p&gt;return input.ToString(&amp;#8220;yyyy-MM-ddTHH:mm:ss.fffzzz&amp;#8221;);&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;**** &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.pheedo.com/click.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot;&gt;&lt;img src=&quot;http://www.pheedo.com/img.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://geekswithblogs.net/casualjim/aggbug/63737.aspx&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <published>2006-01-04 19:53:32 +0100</published>
        <link>http://flanders.co.nz/2006/01/04/webdav-exchange/</link>
      </item>
      
    
      
      <item>
        <title>Run VS 2k5 Webserver from everywhere</title>
        <description>&lt;p&gt;The built in webserver from Visual Studio 2005 is great for locally quickviewing asp.net websites.&lt;br/&gt;
I always thought it was a pitty that I had to start visual studio for it.&lt;/p&gt;

&lt;p&gt;Today I came accross a blog of a guy who wrote a small shell extension so you can right-click any folder and choose run asp.net 2.0 website from the context menu. It will run the webserver on that folder. How easy do you want it ?&lt;/p&gt;

&lt;p&gt;Read more about it here : &lt;br/&gt;
&lt;a href=&quot;http://weblogs.asp.net/rmclaws/archive/2005/10/25/428422.aspx&quot;&gt;http://weblogs.asp.net/rmclaws/archive/2005/10/25/428422.aspx&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://weblogs.asp.net/rmclaws/archive/2005/10/26/428600.aspx&quot;&gt;http://weblogs.asp.net/rmclaws/archive/2005/10/26/428600.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download here :&lt;br/&gt;
&lt;a href=&quot;http://www.interscapeusa.com/downloads/download.aspx?file=WebServerHere_v1.msi&quot;&gt;http://www.interscapeusa.com/downloads/download.aspx?file=WebServerHere_v1.msi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.pheedo.com/click.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot;&gt;&lt;img src=&quot;http://www.pheedo.com/img.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://geekswithblogs.net/casualjim/aggbug/64042.aspx&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <published>2006-01-04 19:53:32 +0100</published>
        <link>http://flanders.co.nz/2006/01/04/run-vs-2k5-webserver-from-everywhere/</link>
      </item>
      
    
      
      <item>
        <title>Rss Parsing</title>
        <description>&lt;p&gt;As mentioned earlier in this blog, I am building a rss program together with &lt;a href=&quot;http://datafreakz.blogspot.com&quot;&gt;http://datafreakz.blogspot.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Right now we have about 100000 feeds from this feeds I had before the weekend about 5000 that failed. Now most of these feeds were valid rss although my google sidebar doesn&amp;#8217;t parse a lot of them either.&lt;/p&gt;

&lt;p&gt;Then I&amp;#8217;ve noticed that lots of people never took the time to read the specifications and dump whatever they like in an rss feed.&lt;br/&gt;
Furthermore there are a lot of people including w3c and ms that put stylesheets in their xml.  Up until last week (because I had a parser that seemed to parse a lot of it already), I was one of these people that thought that just using the System.Xml.XmlReader would be enough and that I would get everything on the first pass through my xml.&lt;/p&gt;

&lt;p&gt;Now after the weekend I&amp;#8217;ve figured out that it takes 3 passes, that is 3 different ways to get the xml in my program to parse almost everything. The next problem that shows up are feeds that do exist, but their hosts are pretty slow in resolving the domains etc.. so I will be needing some retry mechanism.  The idea behind our system is that we want to be able to parse &lt;strong&gt;every&lt;/strong&gt; &lt;strong&gt;valid&lt;/strong&gt; feed from the internet.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve got the different encodings sorted now.&lt;/p&gt;

&lt;p&gt;One of the feeds that bounces the first time :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://presscenter.org/repository/rss/nl/Ext_102110_5.xml&quot;&gt;http://presscenter.org/repository/rss/nl/Ext_102110_5.xml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And this one doesn&amp;#8217;t want to parse yet :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.musicalfan.be/rssfeed.xml&quot;&gt;http://www.musicalfan.be/rssfeed.xml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;probably because of its description field in a few posts.  but I do read feeds with html in them that is what I find so strange.. I don&amp;#8217;t know why this one doesn&amp;#8217;t want to parse.. for now. ;-)&lt;/p&gt;

&lt;p&gt;Always I will appreciate ideas&amp;#8230;. I can&amp;#8217;t show you my code for my parsers but it is based on the xml reader class, too which you pass an encoded textreader. at least the first try parser.  I parse more feeds than Rss.NET and I parse more than rssbandit or rssfeeder.net But I want to be able to say that I parse about 99,99% of the feeds out there. &lt;br/&gt;
I don&amp;#8217;t want to use serialisation because of the performance overhead.. If you need to parse 100 000 - 300 000 feeds every bit counts ;)  And once we open up for the general public it will be even more feeds.&lt;/p&gt;

&lt;p&gt;When everything will be finished online.. probably I will be providing a vs2k5 add in and outlook add in.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.pheedo.com/click.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot;&gt;&lt;img src=&quot;http://www.pheedo.com/img.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://geekswithblogs.net/casualjim/aggbug/63483.aspx&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <published>2006-01-04 19:53:32 +0100</published>
        <link>http://flanders.co.nz/2006/01/04/rss-parsing/</link>
      </item>
      
    
      
      <item>
        <title>My vision on protecting your querystrings</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://geekswithblogs.net/casualjim/articles/64639.aspx&quot;&gt;http://geekswithblogs.net/casualjim/articles/64639.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.pheedo.com/click.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot;&gt;&lt;img src=&quot;http://www.pheedo.com/img.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://geekswithblogs.net/casualjim/aggbug/64640.aspx&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <published>2006-01-04 19:53:32 +0100</published>
        <link>http://flanders.co.nz/2006/01/04/my-vision-on-protecting-your-querystrings/</link>
      </item>
      
    
      
      <item>
        <title>MS Antispyware doesn&#8217;t do its job</title>
        <description>&lt;p&gt;I had a discussion with my friend Miel (Coolz0r) about spyware and their scanners for it. 6 months ago I did a test of several anti-spyware programs and MS antispyware became the winner. It found the most spyware and what I liked most about it was that it provide everything that Ad-aware and Spybot supplied all together. This and the spynet option.  But in 6 months a lot can change and now I have whenU on my machine together with some other heavy duty spyware.  More on the reasons for this you can find in the link below&lt;/p&gt;

&lt;p&gt;_&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.coolz0r.com/posted/microsoft-antispy-downgrades-claria-apps.html&quot;&gt;http://blog.coolz0r.com/posted/microsoft-antispy-downgrades-claria-apps.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;_&lt;/p&gt;

&lt;p&gt;So the search for a good, free spyware cleaner goes on &amp;#8230; I&amp;#8217;ll post more when I&amp;#8217;ve found one.  If anybody has a recommendation please let me know, because spyware me-no-like.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://geekswithblogs.net/casualjim/aggbug/51020.aspx&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <published>2006-01-04 19:53:32 +0100</published>
        <link>http://flanders.co.nz/2006/01/04/ms-antispyware-doesnt-do-its-job/</link>
      </item>
      
    
      
      <item>
        <title>Got added to the new zealand user group</title>
        <description>&lt;p&gt;I haven&amp;#8217;t been posting much lately because I got pretty busy over the past few months and it looks like it isn&amp;#8217;t going to change quickly either.&lt;/p&gt;

&lt;p&gt;I got added to the new zealand .NET user group with this blog. and would like to thank nic wise for adding me. his blog can be found @ &lt;a href=&quot;http://www.fastchicken.co.nz/blog&quot;&gt;http://www.fastchicken.co.nz/blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I decided together with 2 other guys to start writing a book about quick and simple programming using .NET 2 technology. And what better way is there than to write a fully working application for this.&lt;br/&gt;
The application that we will be writing will be a Forum engine à la Communityserver&lt;/p&gt;

&lt;p&gt;The software will be developped under an open source license. I will be posting regularly articles about what I did and the controls I built. &lt;/p&gt;

&lt;p&gt;If somebody has a suggestion on features that are missing now in communityserver, or in other forum engines in general, now would be a good time to comment them in this post.&lt;/p&gt;

&lt;p&gt;For the moment I am planning the rss engine.  I decided that I will just be supporting RSS 2.0 and Atom 1.0  as syndicators (OPML seems to be becoming pretty popular too, so maybe I will look at OPML as well).&lt;br/&gt;
The feed outputs will be kept as simple as possible (I think simple is good, the simpler it is the more programs will be able to read it even the poorly written ones.)&lt;/p&gt;

&lt;p&gt;The aggregator used should be based on AJAX and if I feel really bored someday I will build a smart client to as an extension as well.&lt;/p&gt;

&lt;p&gt;That&amp;#8217;s all for now..&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.pheedo.com/click.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot;&gt;&lt;img src=&quot;http://www.pheedo.com/img.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://geekswithblogs.net/casualjim/aggbug/61341.aspx&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <published>2006-01-04 19:53:32 +0100</published>
        <link>http://flanders.co.nz/2006/01/04/got-added-to-the-new-zealand-user-group/</link>
      </item>
      
    
      
      <item>
        <title>Design templates for websites from microsoft</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://msdn.microsoft.com/asp.net/reference/design/templates/default.aspx&quot;&gt;http://msdn.microsoft.com/asp.net/reference/design/templates/default.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.pheedo.com/click.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot;&gt;&lt;img src=&quot;http://www.pheedo.com/img.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://geekswithblogs.net/casualjim/aggbug/64035.aspx&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <published>2006-01-04 19:53:32 +0100</published>
        <link>http://flanders.co.nz/2006/01/04/design-templates-for-websites-from-microsoft/</link>
      </item>
      
    
      
      <item>
        <title>Atlas New RC build released</title>
        <description>&lt;p&gt;There is a new Atlas RC available for download.  &lt;br/&gt;
This one has got really cool new features.  If you haven&amp;#8217;t looked at atlas before you should look at it now.&lt;/p&gt;

&lt;p&gt;AJAX just became as simple as 1-2-3.&lt;/p&gt;

&lt;p&gt;Nikhil Kothari blogs about the new features :&lt;/p&gt;

&lt;p&gt;A quick tour of Atlas December CTP :&lt;br/&gt;
&lt;a href=&quot;http://www.nikhilk.net/AtlasM1.aspx&quot;&gt;http://www.nikhilk.net/AtlasM1.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The role and functionality of the Atlas Scriptmanager :&lt;br/&gt;
&lt;a href=&quot;http://www.nikhilk.net/AtlasScriptManager.aspx&quot;&gt;http://www.nikhilk.net/AtlasScriptManager.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That should get your appetite for AJAX going :-D&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.pheedo.com/click.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot;&gt;&lt;img src=&quot;http://www.pheedo.com/img.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://geekswithblogs.net/casualjim/aggbug/63988.aspx&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <published>2006-01-04 19:53:32 +0100</published>
        <link>http://flanders.co.nz/2006/01/04/atlas-new-rc-build-released/</link>
      </item>
      
    
      
      <item>
        <title>A good url regular expression ?</title>
        <description>&lt;p&gt;I have been looking for a good first layer of validating an url to see if it is valid.&lt;/p&gt;

&lt;p&gt;For checking the format of the url it seems to me to be the most logical approach to use regular expressions. Up until now I always discarded them as being to “geeky”, meaning i don&amp;#8217;t consider it my life&amp;#8217;s biggest goal to be typing (/?[]\w) all day long (so why did i become a programmer, aaaah yes to make life easier for other people)&lt;/p&gt;

&lt;p&gt;Anyway.. to find a good regular expression to that validates urls not url domains. One that doesn&amp;#8217;t allow spaces in the domainname and where the domain can be suffixed with the port number.  Also I need support for the ~/ paths&lt;/p&gt;

&lt;p&gt;This is what I came up with.. if somebody as a better idea&amp;#8230; or finds a mistake please let me know.. Always happy to learn something new.&lt;/p&gt;

&lt;p&gt;&lt;strike&gt;&lt;sup&gt;(((ht|f)tps?\:\/\/)|~/|/)?([a-zA-Z]{1}([\w-]+.)+([\w]{2,5})(:[\d]{1,5})?)/?(\w+.[\w]{3,4})?((\?\w+=\w+)?(&amp;amp;\w+=\w+)*)?&lt;/strike&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;I was a bit quickly in using this regex. Simeon pilgrim indicated that the ftp urls won&amp;#8217;t validate when you add a username and a password. &lt;/p&gt;

&lt;p&gt;I don&amp;#8217;t really need to validate ftp so I should have removed the ftp protocol from the list of choices.  I need this just to validate urls for weblinks and the link element in an rss feed.  When I need them for ftp I will post the ftp version.. but for now I don&amp;#8217;t have time to spend on elaborating the regex.&lt;/p&gt;

&lt;p&gt;Anyway here is the right one : &lt;strike&gt;&lt;sup&gt;(http(s?)\:\/\/|~/|/)?([a-zA-Z]{1}([\w-]+.)+([\w]{2,5}))(:[\d]{1,5})?/?(\w+.[\w]{3,4})?((\?\w+=\w+)?(&amp;amp;\w+=\w+)*)?&lt;/strike&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;A full url validation would include resolving names through dns or making a webrequest to the provided url to see if we get a 200 response. The only way to be sure is to test if it is there in my opinion.&lt;/p&gt;

&lt;p&gt;Thanks Simeon.&lt;/p&gt;

&lt;p&gt;And for those who really want the ftp validation : &lt;strike&gt;&lt;sup&gt;((ht|f)tp(s?)\:\/\/|~/|/)?([\w]+:\w+@)?([a-zA-Z]{1}([\w-]+.)+([\w]{2,5}))(:[\d]{1,5})?/?(\w+.[\w]{3,4})?((\?\w+=\w+)?(&amp;amp;\w+=\w+)*)?&lt;/strike&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;I am not sure about numbers in the username but I believe you can have a username of numbers alone.&lt;/p&gt;

&lt;p&gt;Comments don&amp;#8217;t seem to work on this blog engine.. so just send me a mail through the contact form. thanks&lt;/p&gt;

&lt;p&gt;Two days later &amp;#8230;&lt;/p&gt;

&lt;p&gt;I discovered there is still a problem with my regular expressions&amp;#8230; folders don&amp;#8217;t get parsed.&lt;br/&gt;
I&amp;#8217;ve solved the path issue, so now it should be finding all url&amp;#8217;s&lt;/p&gt;

&lt;p&gt;Expression:&lt;br/&gt;
**&lt;sup&gt;((ht|f)tp(s?)\:\/\/|~/|/)?([\w]+:\w+@)?([a-zA-Z]{1}([\w-]+.)+([\w]{2,5}))(:[\d]{1,5})?((/?\w+/)+|/?)(\w+.[\w]{3,4})?((\?\w+=\w+)?(&amp;amp;\w+=\w+)*)?**&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Should parse the url below&lt;br/&gt;
&lt;em&gt;&lt;a href=&quot;http://hh-1hallo.msn.blabla.com:80800/test/test/test.aspx?dd=dd&amp;amp;id=dki&quot;&gt;http://hh-1hallo.msn.blabla.com:80800/test/test/test.aspx?dd=dd&amp;id;=dki&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But not :&lt;br/&gt;
&lt;a href=&quot;http://hh-1hallo&quot;&gt;http://hh-1hallo&lt;/a&gt;. msn.blablabla.com:80800/test/test.aspx?dd=dd&amp;id;=dki&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.pheedo.com/click.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot;&gt;&lt;img src=&quot;http://www.pheedo.com/img.phdo?s=ws-58bab757b1982e63240738f517c2db883329859&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://geekswithblogs.net/casualjim/aggbug/61722.aspx&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <published>2006-01-04 19:53:32 +0100</published>
        <link>http://flanders.co.nz/2006/01/04/a-good-url-regular-expression/</link>
      </item>
      
    
      
      <item>
        <title>A clear explanation of generics in c# 2.0</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.ondotnet.com/pub/a/dotnet/2004/05/17/liberty.html?page=2&quot;&gt;http://www.ondotnet.com/pub/a/dotnet/2004/05/17/liberty.html?page=2&lt;/a&gt;&lt;img src=&quot;http://geekswithblogs.net/casualjim/aggbug/53259.aspx&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <published>2006-01-04 19:53:32 +0100</published>
        <link>http://flanders.co.nz/2006/01/04/a-clear-explanation-of-generics-in-c-20/</link>
      </item>
      
    
      
      <item>
        <title>Saving null values to a DateTime field</title>
        <description>
</description>
        <published>2005-08-07 13:06:00 +0200</published>
        <link>http://flanders.co.nz/2005/08/07/saving-null-values-to-a-datetime-field/</link>
      </item>
      
    
      
      <item>
        <title>Creating pdf in .NET without crystal reports</title>
        <description>&lt;p&gt;More in the article you can find here :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.geekswithblogs.net/casualjim/articles/49098.aspx&quot;&gt;http://www.geekswithblogs.net/casualjim/articles/49098.aspx&lt;/a&gt;&lt;/p&gt;
</description>
        <published>2005-08-04 13:03:47 +0200</published>
        <link>http://flanders.co.nz/2005/08/04/creating-pdf-in-net-without-crystal-reports/</link>
      </item>
      
    
  </channel>
</rss>