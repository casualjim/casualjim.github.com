<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Lunch with geeks | Ivan Porto Carrero]]></title>
  <link href="http://flanders.co.nz/categories/lunch-with-geeks/atom.xml" rel="self"/>
  <link href="http://flanders.co.nz/"/>
  <updated>2012-04-24T00:43:57+02:00</updated>
  <id>http://flanders.co.nz/</id>
  <author>
    <name><![CDATA[Ivan Porto Carrero]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Wellington - Lunch with geeks (04/09/2007)]]></title>
    <link href="http://flanders.co.nz/2007/09/04/wellington-lunch-with-geeks-04092007/"/>
    <updated>2007-09-04T05:07:21+02:00</updated>
    <id>http://flanders.co.nz/2007/09/04/wellington-lunch-with-geeks-04092007</id>
    <content type="html"><![CDATA[<p>This week we had another lunch with geeks.  The attendance was good and we talked about a number of things.</p>

<p>The first thing we talked about was broadening the scope of this group to other technologies. We are looking for people from RoR community and the Java community. We do have 1 java person that attends our meetings regularly but we'd like to get some more. So if you're in Wellington and you do development these lunches may be something for you.</p>

<p> </p>

<p>Another thing we talked about was: What's the best microsoft product? And what's the worst?</p>

<p>on the question of worst we had a consensus : windows ME.</p>

<p>on the question what is the best product I guess the most votes went to CLR/.NET Framework. Somebody also mentioned Flight Simulator :)</p>

<p> </p>

<p>We also talked about Aspect Oriented programming and we got a little confused by what the PolicyInjection Block is about in the Enterprise Library.  It claims to do AOP but somebody pointed out that it doesn't quite do that. It does most of the AOP features but not all of them and it's a little intrusive because it has to be defined by the caller.</p>

<p> </p>

<p>The only problem we had was that there was another group in the pizza place so I couldn't understand most of what was being said. Please email me the stuff I forgot about or add it in the comments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wellington - Lunch with geeks (21/08/2007)]]></title>
    <link href="http://flanders.co.nz/2007/08/21/wellington-lunch-with-geeks-21082007/"/>
    <updated>2007-08-21T21:11:26+02:00</updated>
    <id>http://flanders.co.nz/2007/08/21/wellington-lunch-with-geeks-21082007</id>
    <content type="html"><![CDATA[<p>Last week there was no lunch with geeks because of Tech Ed.  Naturally we started our session rehashing what we thought were the highlights of Tech Ed NZ.</p>

<p>In general everybody really liked the keynote by <a href="http://www.expeng.com/lou-carbone.htm">Lou Carbone</a> and we were definitely not the only ones, mauricio has a more <a href="http://www.geekzone.co.nz/teched/3539">detailed post on the keynote</a>.  Anyway it was really entertaining and educational at the same time, I couldn't believe some of the things hotels do with towels and toilet rolls.  Designing for to trigger emotions instead of functionality would be the biggest lesson for me. <br/>
My favourite quote from tech ed would be something <a href="http://jim.webber.name/">Jim Webber</a> said during a session about Dynamic languages vs. Static languages:</p>

<blockquote><p>If you polish a turd, your hands will be smelly but you will still have a turd. <br/>
(Jim Webber on wsdl)</p></blockquote>

<p>After that we started the topic at hand: <strong><em>Vendor certification is it really worth it? </em></strong>- A topic suggested by <a href="http://blogs.provoke.co.nz/theengineroom">Pablo Garcia</a> from <a href="http://provoke.co.nz/">Provoke solutions</a>.</p>

<p>The discussion was long but seemed to often get back to the same basic ideas. I'll just summarize:</p>

<p>It's worth it:</p>

<ul>
<li>It's worth it if you're an intermediate or a junior developer and looking for a job</li>
<li>It's a benchmark for people that have been in the industry for a long time to assure that they are still current.</li>
<li>it can be really useful for systems people</li>
</ul>


<p>It's not worth it:</p>

<ul>
<li>A senior that has heaps of certifications and boasts about them => Mort alert</li>
<li>it doesn't teach you any of the concepts behind problem solving and analysis, but focusses more on learning-by-heart</li>
<li>it often promotes less-than-best practices aka enterprise practices</li>
<li>it is in no way a guarantee that the person really knows his stuff it only proves he can memorize a bunch of things.</li>
<li>seen as software development is an art, exams are inappropriate because the grader needs to like your writing style before everything else.</li>
</ul>


<p>The discussion went on about the benefit of a university training vs. the certification process and that seemed to go on forever. Some of the members of our group started recalling memories from when they were in uni and why exams were too subjective to effectively measure the skill of a student.</p>

<p> </p>

<p>We did all agree that certification done by vendors isn't the best way to go about it, and that it would be a much better idea if these certifications would be issued by some global, independent organization. That would immediately raise the credibility of these disciplines.</p>

<p>That was our session.</p>

<p>If forgot something please let me know :)</p>

<p><strong>UPDATE:</strong> I added a link to Pablo's blog <a href="http://blogs.provoke.co.nz/theengineroom">http://blogs.provoke.co.nz/theengineroom</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lunch with geeks (7/8/2007)]]></title>
    <link href="http://flanders.co.nz/2007/08/10/lunch-with-geeks-782007/"/>
    <updated>2007-08-10T04:36:59+02:00</updated>
    <id>http://flanders.co.nz/2007/08/10/lunch-with-geeks-782007</id>
    <content type="html"><![CDATA[<p>We had another geeks lunch on tuesday. We discussed a number of topics but focussed mainly on design patterns.</p>

<p>Some of the observations we made are the following.</p>

<p>The most overused design pattern : Singleton. With the remark that a singleton should only be used when you need to keep state in your object internally.</p>

<p>You shouldn't care about design patterns until you figured out a couple yourself. This is a bit the chicken or the egg question because you would have to know the design patterns in order to know that you are using one.</p>

<p>Lot's of programmers get by without the patterns although the solutions may not look as elegant.  Design patterns are in no way a silver bullet for creating quality software they just help you solve problems in a predictable way.</p>

<p>One of the ways suggested to start adopting these patterns is to write code that works first and then refactor it to use the patterns.</p>

<p>Next I'd like to list a bunch of resources/books that were mentioned during this discussion:</p>

<p>Thanks to Bevan Arps for this list of books:</p>

<p><strong>Design Patterns (Gang of Four)<br/>
</strong>Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides<br/>
ISBN 0 204 63361 2</p>

<p><strong>Refactoring - Improving the Design of Existing Code<br/>
</strong>Martin Fowler<br/>
ISBN 0 204 48567 2</p>

<p><strong>Analysis Patters - Reusable Object Models<br/>
</strong>Martin Fowler<br/>
ISBN 0 201 89542 0</p>

<p><strong>Refactoring to Patterns<br/>
</strong>Joshua Kerievsky<br/>
ISBN 0 321 21335 1</p>

<p> </p>

<p>Ivan Towlson has put up a <a href="http://hestia.typepad.com/flatlander/2007/08/design-patterns.html">blog post</a> listing the books that he remembered.</p>

<p>And here are some urls that hold some information on design patterns.</p>

<p><a href="http://www.developer.com/design/article.php/1474561">http://www.developer.com/design/article.php/1474561</a></p>

<p><a href="http://www.dofactory.com/Patterns/Patterns.aspx">http://www.dofactory.com/Patterns/Patterns.aspx</a></p>

<p><a href="http://www.designpatternsfor.net/">http://www.designpatternsfor.net/</a></p>

<p> </p>

<p> </p>

<p>del.icio.us tags: <a href="http://del.icio.us/popular/Lunch%20with%20geeks">Lunch with geeks</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wellington - Lunch with geeks (24/7/2007)]]></title>
    <link href="http://flanders.co.nz/2007/07/24/wellington-lunch-with-geeks-2472007/"/>
    <updated>2007-07-24T05:19:44+02:00</updated>
    <id>http://flanders.co.nz/2007/07/24/wellington-lunch-with-geeks-2472007</id>
    <content type="html"><![CDATA[<p>I didn't put the minutes up from last week because we had too many people there and we didn't get a real group conversation going.. It was mostly little separated groups so I don't really know what has been talked about.  I also have a deadline for a client rapidly approaching so I didn't really find the time to add this to my blog.</p>

<p>But I would like to thank everybody that was there last week for attending.</p>

<p>Anyway today we had another Geek lunch and the topic of discussion was:</p>

<p>What will you do to become a better programmer this year ?</p>

<p>I'll sum up the list of things to do that we all agreed upon.</p>

<ol>
<li><p>Take an advanced reading course to improve your reading speed. People make a couple of really common mistakes when reading stuff and this course unlearns them. It improves your reading speed up to 3 times.. The course only takes 4 mornings so it's definitely something I'll be doing in the near future.</p></li>
<li><p>Read a new book every month/ 2months.</p></li>
<li><p>Take an advanced writing course in order to write that dreaded documentation a lot faster.</p></li>
<li><p>Learn a new language every year. By taking a quick poll around the table it seemed that the most likely candidates here are Smalltalk, Ruby, Errlang, ...</p></li>
<li><p>Contribute to open source that way you get to meet a lot of good coders and you learn sooo much.</p></li>
<li><p>Get a membership with ACM they give you free books and courses if you're a member.</p></li>
<li><p>Work with as much people and on as many projects as possible in order to gain more experience ==> See open source :)</p></li>
</ol>


<p> </p>

<p>I want to thank everybody for coming and making this lunch another great one :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wellington - Lunch with geeks (10/7/2007)]]></title>
    <link href="http://flanders.co.nz/2007/07/11/wellington-lunch-with-geeks-1072007/"/>
    <updated>2007-07-11T10:21:09+02:00</updated>
    <id>http://flanders.co.nz/2007/07/11/wellington-lunch-with-geeks-1072007</id>
    <content type="html"><![CDATA[<p>We had another lunch session yesterday. It was a quiet session probably because of the Wellington weather, there were 7 people attending.</p>

<p>The first topic we discussed was mobilizing your application.</p>

<p>The first issue that was raised around this subject what usability issues have you got to tackle around mobile applications.  Like navigation should be vastly different because of the lack of screen real estate. navigation is mostly done with a joystick or keypad there is no mouse which in itself is already a pretty difficult problem to tackle. </p>

<p>Another person mentioned that dropdownlists are pretty difficult to navigate too.  It would be naive to assume that you can use one codebase and make some style changes to get a great mobile application.  You need to take the fact of mobilizing more serious than that and be prepared to make some drastic changes in how your app flows.</p>

<p>One of the reasons that we haven't really seen a great mobile app make it big is probably because of the user interface we are facing when operating a mobile device. Technology has changed a lot since mobile phones came to be but the interface hasn't hardly changed at all. It went from a disc to buttons to buttons with a little display. Until the cell phone was there and we got a menu to operate our phones. The navigation of those menus has evolved somewhat but it's still the same way of using it. Of course this is when the iPhone came into the conversation, and because I work at Xero i got to play briefly <a href="http://www.drury.net.nz/2007/07/06/iphone-love/">with an iPhone</a></p>

<p>I have to say that the touch screen navigation was really cool and refreshing and definitely a step in the right direction.</p>

<p>After which our conversation drifted off a little and we dreamt of futuristic interfaces and new ways of interacting with computers.</p>

<p><a href="http://codeclimber.net.nz/archive/2007/07/11/7-months-of-CodeClimber-and-6-months-in-NZ.aspx">Simone has got a great post on life in wellington as a european in which he talks about our lunches and other things.</a></p>
]]></content>
  </entry>
  
</feed>
