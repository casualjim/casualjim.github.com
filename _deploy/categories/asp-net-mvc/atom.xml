<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ASP.NET MVC | Ivan Porto Carrero]]></title>
  <link href="http://flanders.co.nz/categories/asp-net-mvc/atom.xml" rel="self"/>
  <link href="http://flanders.co.nz/"/>
  <updated>2012-04-23T22:54:14+02:00</updated>
  <id>http://flanders.co.nz/</id>
  <author>
    <name><![CDATA[Ivan Porto Carrero]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A rant on a talk falling to pieces]]></title>
    <link href="http://flanders.co.nz/2009/07/02/a-rant-on-a-talk-falling-to-pieces/"/>
    <updated>2009-07-02T14:45:21+02:00</updated>
    <id>http://flanders.co.nz/2009/07/02/a-rant-on-a-talk-falling-to-pieces</id>
    <content type="html"><![CDATA[<p>Earlier this week I had the pleasure of doing a talk for the Belgian .NET user group. During this talk I ran in to all kinds of problems. I've done presentations where I was royally underprepared and to avoid that this time I actually started prepping for this talk on time. I was done on time, was prepared had 5 backups of my presentation and samples. What did I learn from this, if you're prepared other things will go wrong.    <br/>
I'll share the story of stuff that can go wrong.</p>

<p>Before starting the rant I have some links to share.</p>

<ul>
<li><p><a href="http://www.slideshare.net/casualjim/ruby-loves-dot-net">Slides</a></p></li>
<li><p>IronRubyMvc sample – <a href="http://irtodo.koolkraft.net/">live demo</a> – <a href="http://github.com/casualjim/ironrubymvc-sample/tree/master">source</a></p></li>
<li><p>Silverlight sample – <a href="http://samples.koolkraft.net/picture_view/">live demo</a> – <a href="http://samples.koolkraft.net/picture_view.zip">source</a></p></li>
<li><p>IronRubyMVC specs – <a href="http://github.com/casualjim/ironrubymvc/tree">source</a></p></li>
<li><p>Sinatra – <a href="http://samples.koolkraft.net/sinatra.zip">source</a></p></li>
<li><p>Metaprogramming - <a href="http://samples.koolkraft.net/metaprogramming.zip">source</a></p></li>
</ul>


<p>I have a device that I call internet on a stick, which is a vodafone usb 3G modem that I plug in to my system and it gets me on the internet (mistake 1). Since I assumed that that thing would continue to work I made most of my demos internet enabled (mistake 2). For example I have a demo where I go download pics from flickr and then show them with some animations with silverlight.    <br/>
Before my presentation I changed the fonts, opened all the files I was going to talk about ran all the demos again to make sure they would work and everything went fine.     <br/>
I unplug the USB device and go into the room to hook up the projector etc. The presentation starts and for the first hour everything went really well (from my perspective at least don't know about the people attending).     <br/>
We have a break and I plug the USB device in, at this point the vodafone program hangs (first time ever I swear). What's more I can't make it go away at all so I reboot my pc (this is still during the break).</p>

<p>Now I'm getting a little desperate because it still doesn't work. With rebooting I also lost all my carefully opened files earlier (I'm showing code in about 3 different environments and 2 different OS'es).    <br/>
So during the presentation I apologise and try to reboot once more while taking questions from the audience and hoping somebody will try to start a discussion with me. After rebooting I got a message saying my date was set to 2001 which I thought was peculiar but clicked it away. I boot vmware fusion with windows 7 (this took fairly long and is a little bit funky as the screen resolution changes a lot during this process).     <br/>
Ok so far so good, by now I've already skipped the silverlight demo promising that it will be available as a download on my blog and will be moving on to the ironrubymvc sample. To prove I do actually use visual studio at times I wanted to open my demo project in visual studio. I open visual studio only for it to tell me that my trial has expired and I can either upgrade or close the application. Oooooookay this is completely weird because i get my software through my msdn subscription and I had been using it earlier that day.</p>

<p>Moral of the story: Either go vastly underprepared and wing it. Or don't rely on the internet and always take at least 2 laptops that have identical configurations but I'm pretty sure those would or explode in my face or something will fall from the ceiling, building collapses or other mishaps.</p>

<p>Instead of having one demo go bad on me now I'm probably facing a reinstall of my mac because it lost a bunch of settings, for which I'm holding the vodafone responsible. At this moment I'm fairly certain that I should go less prepared and just wing it just out of fear for bigger disasters, people may die.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Very simple IronRuby MVC sample application]]></title>
    <link href="http://flanders.co.nz/2009/06/09/very-simple-ironruby-mvc-sample-application/"/>
    <updated>2009-06-09T23:45:03+02:00</updated>
    <id>http://flanders.co.nz/2009/06/09/very-simple-ironruby-mvc-sample-application</id>
    <content type="html"><![CDATA[<p>Over the weekend I wrote a very simple task list application with IronRuby MVC and LightSpeed as an OR/M. And I’ve just put a demo live. This demo is running on a windows 2008 vps with IIS 7 as webserver. The source of this sample is also available.</p>

<p>At this moment I’m working on the <a href="http://github.com/jschementi/ironrubymvc/">Ironruby mvc</a> sample for my book. And while I was playing around to get some samples together I tried building the simplest application possible that has some degree relations in the db and does some crud. And I came up with the original idea of creating a task list application.</p>

<p>As an OR/M I choose to use <a href="http://www.mindscape.co.nz/products/LightSpeed/">LightSpeed</a> and it runs on a sqlite database so it should be immediately usable after checking out. There is one caveat though. If you’re using a 32-bit OS you’ll need to replace the sqlite dll that is included in the dependencies tree with a 32-bit version of the dll and rebuild the solution.</p>

<p>The links:</p>

<p>Demo:    <br/>
<a href="http://irtodo.koolkraft.net/">http://irtodo.koolkraft.net/</a></p>

<p>Source of sample:   <br/>
<a href="http://github.com/casualjim/ironrubymvc-sample">http://github.com/casualjim/ironrubymvc-sample</a></p>

<p>IronRubyMVC source:</p>

<p><a href="http://github.com/jschementi/ironrubymvc">http://github.com/jschementi/ironrubymvc</a></p>

<p>LightSpeed:   <br/>
<a href="http://www.mindscape.co.nz/products/LightSpeed/">http://www.mindscape.co.nz/products/LightSpeed/</a></p>

<p>Technorati Tags: <a href="http://technorati.com/tags/IronRuby+MVC">IronRuby MVC</a>,<a href="http://technorati.com/tags/IronRuby">IronRuby</a>,<a href="http://technorati.com/tags/ASP.NET+MVC">ASP.NET MVC</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Binder for ironruby mvc]]></title>
    <link href="http://flanders.co.nz/2009/04/08/binder-for-ironruby-mvc/"/>
    <updated>2009-04-08T19:07:22+02:00</updated>
    <id>http://flanders.co.nz/2009/04/08/binder-for-ironruby-mvc</id>
    <content type="html"><![CDATA[<p>I’ve progressed far enough with <a href="http://ironruby.net">IronRuby</a> MVC to start thinking about a sample and I’ve decided to write 2 separate samples both on the same technologies. As an OR/M I will be using <a href="http://www.mindscape.co.nz/products/LightSpeed/default.aspx">LightSpeed</a> from Mindscape, just because it’s an awesome piece of technology.</p>

<p>At this moment I’m looking at creating a binder for objects that takes a hash as input. The default model binder of ASP.NET MVC doesn’t quite fit all that well with the ironruby implementation so I’m creating a ruby binder implementation. This stuff is just something that makes ruby shine.</p>

<p>While doing so I came up with this little tidbit of code:</p>

<pre><code>class System::Object

  class &lt;&lt; self

    def create_from_hash(options)
      result = self.new
      result.populate_from_hash options
      result
    end

  end

  def populate_from_hash(options)
    options.each do |k, v|
      mn = "#{k}=".to_sym
      self.send(mn, v) if self.respond_to?(mn)
    end
  end
end
</code></pre>

<p>This code allows you to populate any .NET object from a hash.</p>

<p>So doing Person.create_from_hash(:username => “joe”) would create a user instance with the property username set to joe.</p>

<p>You do need to provide a hash where the values have the correct type.</p>

<p>Technorati Tags: <a href="http://technorati.com/tags/IronRuby+MVC">IronRuby MVC</a>,<a href="http://technorati.com/tags/IronRuby">IronRuby</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IronRuby MVC progress]]></title>
    <link href="http://flanders.co.nz/2009/03/09/ironruby-mvc-progress/"/>
    <updated>2009-03-09T19:18:22+01:00</updated>
    <id>http://flanders.co.nz/2009/03/09/ironruby-mvc-progress</id>
    <content type="html"><![CDATA[<p>If you follow my tweets or the <a href="http://ironruby.net">IronRuby</a> mailinglist then you would know that I’ve been working on taking <a href="http://ironruby.net">IronRuby</a> ASP.NET MVC from the prototype stages to a more complete application. For me this has been a great experience getting familiar with the insides of ASP.NET MVC as well as playing around with integrating <a href="http://ironruby.net">IronRuby</a> in an existing C# application.</p>

<p>The guys over at MSFT (<a href="http://www.iunknown.com">John Lam</a>, <a href="http://blog.jimmy.schementi.com">Jimmy Schementi</a> and <a href="http://haacked.com">Phil Haack</a>) had previously created a prototype and I built upon their work. You can read more about the previous versions of the prototype.     <br/>
<a href="http://www.iunknown.com/2008/06/ironruby-and-aspnet-mvc.html">http://www.iunknown.com/2008/06/ironruby-and-aspnet-mvc.html</a>     <br/>
<a href="http://blog.jimmy.schementi.com/2008/07/aspnet-and-dynamic-languages.html">http://blog.jimmy.schementi.com/2008/07/aspnet-and-dynamic-languages.html</a>     <br/>
<a href="http://haacked.com/archive/2008/06/12/ironruby-and-asp.net-bffs-forever.aspx">http://haacked.com/archive/2008/06/12/ironruby-and-asp.net-bffs-forever.aspx</a>     <br/>
<a href="http://haacked.com/archive/2008/07/20/ironruby-aspnetmvc-prototype.aspx">http://haacked.com/archive/2008/07/20/ironruby-aspnetmvc-prototype.aspx      <br/>
</a><a href="http://haacked.com/archive/2009/02/17/aspnetmvc-ironruby-with-filters.aspx">http://haacked.com/archive/2009/02/17/aspnetmvc-ironruby-with-filters.aspx</a></p>

<p>In a previous post I explained what I had done I explained how I found an entry point and how to get started building your own mvc framework on top of asp.net MVC.</p>

<p><a href="http://flanders.co.nz/2009/01/25/created-a-basic-integration-for-ironruby-and-aspnet-mvc/">http://flanders.co.nz/2009/01/25/created-a-basic-integration-for-ironruby-and-aspnet-mvc/</a></p>

<p>How far am I now since my last post? Well we’ve got action filters, result filters, exception filters and authorization filters. We have an IronRubyMvcApplication as a base HttpApplication. Which should get you pretty far when building apps with <a href="http://github.com/casualjim/ironrubymvc">IronRuby MVC</a>.</p>

<p>I’m currently looking at implementing selectors and aliased actions. When I’m done with that I guess I’ve got a fairly working implementation of asp.net MVC and I’ll start developing a sample with it.</p>

<p>I’ve actually started building the sample to find out if I’ve missed something. The sample will be using <a href="http://www.mindscape.co.nz/products/LightSpeed/default.aspx">LightSpeed</a>, <a href="http://github.com/jschementi/ironrubymvc">IronRubyMVC</a> as well as youtube and flickr.</p>

<p>I would love to hear from people that submit bugs or even patches. I’d also like to get some discussion going on what is going to happen to it in the future :)</p>

<p><a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fflanders.co.nz%2f2009%2f03%2f09%2fironruby-mvc-progress%2f"><img src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fflanders.co.nz%2f2009%2f03%2f09%2fironruby-mvc-progress%2f" alt="kick it on DotNetKicks.com" /></a></p>
]]></content>
  </entry>
  
</feed>
